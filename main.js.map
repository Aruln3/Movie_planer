{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/classes/validators/application-validator.ts","./src/app/guards/form/from-close.guard.ts","./src/app/components/auditorium-form/auditorium-form.component.ts","./src/app/components/auditorium-form/auditorium-form.component.html","./src/app/components/layout/layout.component.ts","./src/app/components/layout/layout.component.html","./src/app/services/auth/auth.service.ts","./src/app/interfaces/application.ts","./src/environments/environment.ts","./src/app/services/user/user.service.ts","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/manage/manage.component.ts","./src/app/components/manage/manage.component.html","./src/app/components/footer/footer.component.html","./src/app/components/footer/footer.component.ts","./src/app/services/global/global.service.ts","./src/app/components/my-bookings/my-bookings.component.ts","./src/app/components/my-bookings/my-bookings.component.html","./src/app/services/token-interceptor/token-interceptor.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/templates/screen/screen.component.ts","./src/app/components/templates/screen/screen.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/classes/util/util.ts","./src/app/guards/auth/auth.guard.ts","./src/app/components/templates/add-movie-to-show-form/add-movie-to-show-form.component.ts","./src/app/components/templates/add-movie-to-show-form/add-movie-to-show-form.component.html","./src/app/services/alert/alert.service.ts","./src/app/guards/admin/admin.guard.ts","./src/app/components/forgot-password/forgot-password.component.ts","./src/app/components/forgot-password/forgot-password.component.html","./src/app/services/application/application.service.ts","./src/app/components/login-layout/login-layout.component.ts","./src/app/components/login-layout/login-layout.component.html","./src/app/components/contact-us/contact-us.component.ts","./src/app/components/contact-us/contact-us.component.html","./src/app/components/movie/movie.component.ts","./src/app/components/movie/movie.component.html","./src/app/classes/validators/user-validator.ts","./src/app/components/templates/show-form/show-form.component.ts","./src/app/components/templates/show-form/show-form.component.html","./src/app/commons/global-constants.ts","./src/app/components/about-us/about-us.component.ts","./src/app/components/about-us/about-us.component.html","./src/app/components/templates/payment-form/payment-form.component.ts","./src/app/components/templates/payment-form/payment-form.component.html","./src/app/app-routing.module.ts","./src/app/components/movie-form/movie-form.component.ts","./src/app/components/movie-form/movie-form.component.html","./src/app/components/templates/select-members/select-members.component.ts","./src/app/components/templates/select-members/select-members.component.html","./src/app/components/movies/movies.component.ts","./src/app/components/movies/movies.component.html","./src/app/pipes/search.pipe.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GlobalConstants } from 'src/app/commons/global-constants';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  title: string = GlobalConstants.APP_NAME;\n\n  router!: Router;\n  service!: UserService;\n\n  constructor(private _router: Router,\n    private _userService: UserService) { }\n\n  ngOnInit(): void {\n    console.log(this._userService.getUser());\n    this.router = this._router;\n    this.service = this._userService;\n  }\n\n  onLogout(): void {\n    if (confirm('Do you want to logout?')) {\n      if (this._userService.removeToken())\n        this._router.navigate(['/user/login'], { queryParams: { 'logout': 'true' } });\n    }\n  }\n  // constructor(@Inject(DOCUMENT) document: any) { }\n  // @HostListener('window:scroll', ['$event'])\n  // onWindowScroll(e: any): void {\n  //   let element = document.getElementById('nav-bar');\n  //   if (window.pageYOffset > 300)\n  //     element?.classList.add('fixed-top');\n  //   else\n  //     element?.classList.remove('fixed-top');\n\n  // }\n\n}\n","<nav\n  *ngIf=\"router.url !== '/select-seats'\"\n  id=\"nav-bar\"\n  class=\"navbar navbar-expand-lg navbar-dark btn-warning text-white px-lg-3\"\n>\n  <div class=\"container-fluid\">\n    <a mat-button class=\"navbar-brand ms-sm-3 fs-4\" routerLink=\"/home\">{{\n      title\n    }}</a>\n    <button\n      class=\"navbar-toggler\"\n      mat-icon-button\n      aria-label=\"Example icon-button with a menu\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0 text-sm-center\">\n        <li class=\"nav-item mx-lg-2 mx-md-auto\">\n          <a\n            mat-button\n            class=\"nav-link\"\n            aria-current=\"page\"\n            routerLinkActive=\"active\"\n            routerLink=\"/home\"\n            >Home</a\n          >\n        </li>\n        <li class=\"nav-item mx-lg-2 mx-md-auto\">\n          <a\n            mat-button\n            class=\"nav-link\"\n            routerLinkActive=\"active\"\n            [routerLink]=\"['/movies']\"\n            >Movies</a\n          >\n        </li>\n        <li class=\"nav-item mx-lg-2 mx-md-auto\">\n          <a\n            mat-button\n            class=\"nav-link\"\n            routerLinkActive=\"active\"\n            routerLink=\"/about\"\n            >About Us</a\n          >\n        </li>\n        <li class=\"nav-item mx-lg-2 mx-md-auto\">\n          <a\n            mat-button\n            class=\"nav-link\"\n            routerLinkActive=\"active\"\n            routerLink=\"/contact\"\n            >Contact Us</a\n          >\n        </li>\n        <li class=\"nav-item dropdown\" *ngIf=\"service.isAdmin()\">\n          <a\n            class=\"nav-link dropdown-toggle\"\n            href=\"#\"\n            id=\"admin-panel\"\n            role=\"button\"\n            data-bs-toggle=\"dropdown\"\n            aria-expanded=\"false\"\n          >\n            Admin Panel\n          </a>\n          <ul class=\"dropdown-menu\" aria-labelledby=\"admin-panel\">\n            <li class=\"nav-item mx-lg-2 mx-md-auto\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                routerLinkActive=\"active\"\n                routerLink=\"/admin/add-auditorium\"\n                >Add Auditorium</a\n              >\n            </li>\n            <li class=\"nav-item mx-lg-2 mx-md-auto\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                routerLinkActive=\"active\"\n                routerLink=\"/admin/add-movie\"\n                >Add Movie</a\n              >\n            </li>\n            <li class=\"nav-item mx-lg-2 mx-md-auto\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                routerLinkActive=\"active\"\n                routerLink=\"/admin/manage\"\n                >Manage</a\n              >\n            </li>\n          </ul>\n        </li>\n      </ul>\n      <div class=\"profile text-sm-center\">\n        <!-- <button mat-button [matMenuTriggerFor]=\"menu\">\n          <img\n            class=\"rounded-circle mx-2\"\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSK9DmKOF9VCBqRzdHLzwyyOXjDm4kOYjD9IZQo2WviiLzzxDmzwYQZaVK6_7o_Qc7famc&usqp=CAU\"\n            alt=\"\"\n            width=\"45\"\n            height=\"45\"\n          />\n          My Account\n        </button>\n        <mat-menu #menu=\"matMenu\">\n          <a routerLink=\"/user/login\" mat-menu-item>Login</a>\n          <a routerLink=\"/user/register\" mat-menu-item>Register</a>\n          <a routerLink=\"/user/forgot-password\" mat-menu-item>\n            Forgot Password\n          </a>\n          <a routerLink=\"/user/profile\" mat-menu-item>My Profile</a>\n          <a routerLink=\"/user/bookings\" mat-menu-item>My Bookings</a>\n          <a routerLink=\"/user/logout\" mat-menu-item>Logout</a>\n        </mat-menu> -->\n        <ul class=\"navbar-nav col-auto\" *ngIf=\"service.isLoggedIn()\">\n          <li class=\"nav-item dropdown\">\n            <a\n              class=\"nav-link dropdown-toggle fs-6 my-2\"\n              href=\"#\"\n              id=\"account-links\"\n              role=\"button\"\n              data-bs-toggle=\"dropdown\"\n              aria-expanded=\"false\"\n              >{{ service.getUser()?.email! }}\n            </a>\n            <ul\n              class=\"dropdown-menu dropdown-menu-dark\"\n              aria-labelledby=\"account-links\"\n            >\n              <li class=\"nav-item\">\n                <a class=\"dropdown-item py-1\" routerLink=\"/my/profile\"\n                  >Profile</a\n                >\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"dropdown-item py-1\" routerLink=\"/my/bookings\"\n                  >Bookings</a\n                >\n              </li>\n              <li class=\"nav-item text-center\">\n                <a\n                  class=\"btn btn-outline-warning btn-sm col-11 mt-2\"\n                  (click)=\"onLogout()\"\n                  >Logout</a\n                >\n              </li>\n            </ul>\n          </li>\n        </ul>\n        <div class=\"btn-group p-2\" *ngIf=\"!service.isLoggedIn()\">\n          <a\n            routerLink=\"/user/login\"\n            routerLinkActive=\"active\"\n            class=\"btn btn-primary btn-sm rounded mx-1\"\n            >Login</a\n          >\n          <a\n            routerLink=\"/user/register\"\n            routerLinkActive=\"active\"\n            class=\"btn btn-success btn-sm rounded mx-1\"\n            >Register</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</nav>\n","import { Injectable } from \"@angular/core\";\nimport { AbstractControl, ValidatorFn } from \"@angular/forms\";\nimport { Show } from \"src/app/interfaces/application\";\nimport { Util } from \"../util/util\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationValidator {\n\n    static uniqueAuditoriumName(auditoriumNames: string[]): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: boolean } | null => {\n            return auditoriumNames ? auditoriumNames\n                .find(name => name.toLowerCase() == control.value.toLowerCase())\n                ? { 'uniqueName': true }\n                : null : null;\n        };\n    }\n\n    static uniqueMovieName(movieNames: string[]): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: boolean } | null => {\n            return movieNames ? movieNames\n                .find(name => name.toLowerCase() == control.value.toLowerCase())\n                ? { 'uniqueName': true }\n                : null : null;\n        };\n    }\n\n    static validMovieGenre(genres: string[]): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: boolean } | null => {\n            return genres ? genres\n                .find(genre => genre.toLowerCase() == control.value.toLowerCase())\n                ? null\n                : { 'validGenre': true } : null;\n        };\n    }\n\n    static uniqueFacility(facilities: string[]): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: boolean } | null => {\n            return facilities ? facilities.find(facility => facility.toLowerCase() == control.value.toLowerCase())\n                ? { 'uniqueName': true }\n                : null : null;\n        };\n    }\n\n    static uniqueSafeties(safeties: string[]): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: boolean } | null => {\n            return safeties ? safeties.find(safety => safety.toLowerCase() == control.value.toLowerCase())\n                ? { 'uniqueName': true }\n                : null : null;\n        };\n    }\n\n    static uniqueShowName(shows: Show[]): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: boolean } | null => {\n            return shows ? shows.find(show => show.name.toLowerCase() == control.value.toLowerCase())\n                ? { 'uniqueName': true }\n                : null : null;\n        };\n    }\n\n    public static uniqueShowTime(shows: Show[]): ValidatorFn {\n        return (control: AbstractControl): { [key: string]: boolean } | null => {\n            if (shows) {\n                let isNotValid = false;\n                for (let i = 0; i < shows?.length; i++)\n                    if (!ApplicationValidator.isTimeDifferenceValid(shows[i]?.startTime, control.value)) {\n                        isNotValid = true;\n                        break;\n                    }\n                return isNotValid ? { 'uniqueTime': true } : null;\n            }\n            else\n                return null;\n        };\n    }\n\n    private static isTimeDifferenceValid(previous: string, present: string): boolean {\n        const p_time = Util.extractTimeAndConvertToNumber(previous);\n        const n_time = Util.extractTimeAndConvertToNumber(present);\n        const difference = p_time - n_time;\n        return difference >= 10000000 || difference <= -10000000 ? true : false;\n    }\n\n    // uniqueAuditoriumName(control: AbstractControl): ValidationErrors | null {\n    //     return new GlobalService().getAuditoriumNames()\n    //         .find(auditorium => auditorium.toLowerCase() == control.value.toLowerCase())\n    //         ? { 'uniqueName': true }\n    //         : null;\n    //     return null;\n    // }\n\n    // uniqueAuditoriumName(auditoriumNames: string[]): ValidationErrors | null {\n    //     return (control: AbstractControl): { [key: string]: boolean } | null => {\n    //         return auditoriumNames\n    //             .find(name => name.toLowerCase() == control.value.toLowerCase())\n    //             ? { 'uniqueName': true }\n    //             : null;\n    //     }\n    // }\n\n    // uniqueMovieName(movieNames: string[]): ValidationErrors | null {\n    //     return (control: AbstractControl): { [key: string]: boolean } | null => {\n    //         return movieNames\n    //             .find(name => name.toLowerCase() == control.value.toLowerCase())\n    //             ? { 'uniqueName': true }\n    //             : null;\n    //     }\n    // }\n    // return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    //     return this._service.getMovieNames()\n    //         .pipe(\n    //             map((movies: string[]) => {\n    //                 console.log('validating movie names');\n    //                 return movies.find(movie => movie.toLowerCase() == control.value.toLowerCase())\n    //                     ? { 'uniqueName': true }\n    //                     : null\n    //             }\n    //             )\n    //         );\n    // }\n\n\n    // validMovieLanguage(control: AbstractControl): ValidationErrors | null {\n    //     return GlobalConstants.ALL_LANGUAGES\n    //         .find(language => language.toLowerCase() == control.value.toLowerCase())\n    //         ? null\n    //         : { 'validLanguage': true };\n    // }\n    // validMovieGenre(control: AbstractControl): ValidationErrors | null {\n    //     return GlobalConstants.ALL_GENERS\n    //         .find(genre => genre.toLowerCase() == control.value.toLowerCase())\n    //         ? null\n    //         : { 'validLanguage': true };\n    // }\n\n    // public static uniqueAuditoriumName(auditoriums: string[]): ValidatorFn {\n    //     return (control: AbstractControl): { [key: string]: boolean } | null => {\n    //         return auditoriums?.find(auditorium => auditorium.toLowerCase() == control.value.toLowerCase())\n    //             ? { 'uniqueName': true }\n    //             : null;\n    //     };\n    // }\n\n    // https://www.infragistics.com/community/blogs/b/infragistics/posts/how-to-create-custom-validators-for-angular-reactive-forms\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LeaveForm } from 'src/app/interfaces/application';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FromCloseGuard implements CanDeactivate<LeaveForm> {\n  canDeactivate(\n    component: LeaveForm,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return component.areYouSure();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApplicationValidator } from 'src/app/classes/validators/application-validator';\nimport { GlobalConstants } from 'src/app/commons/global-constants';\nimport { LeaveForm } from 'src/app/interfaces/application';\nimport { AlertService } from 'src/app/services/alert/alert.service';\nimport { ApplicationService } from 'src/app/services/application/application.service';\nimport { GlobalService } from 'src/app/services/global/global.service';\n\n@Component({\n  selector: 'app-auditorium-form',\n  templateUrl: './auditorium-form.component.html',\n  styleUrls: ['./auditorium-form.component.css']\n})\nexport class AuditoriumFormComponent implements OnInit, LeaveForm {\n\n  auditoriumForm!: FormGroup;\n  allAuditoriumNames!: string[];\n  allFacilities!: string[];\n  allSafeties!: string[];\n  showNames = GlobalConstants.SHOW_NAMES;\n\n  constructor(private _fb: FormBuilder,\n    private _alertService: AlertService,\n    private _service: ApplicationService,\n    private _router: Router,\n    private _globalService: GlobalService) { }\n\n  areYouSure(): boolean {\n    return confirm('Are you sure to leave the page?');\n  }\n\n  ngOnInit(): void {\n    this._globalService.getAuditoriumNames()\n      .subscribe(halls => this.allAuditoriumNames = halls);\n\n    this.allFacilities = GlobalConstants.HALL_FACILITIES;\n    this.allSafeties = GlobalConstants.HALL_SAFETIES;\n\n    this.auditoriumForm = this._fb.group({\n      name: new FormControl('', [\n        Validators.required,\n        uniqueAuditoriumName(this.allAuditoriumNames)\n      ]),\n      image: new FormControl(''),\n      email: new FormControl('', Validators.required),\n      customerCareNo: new FormControl('', Validators.required),\n      address: new FormControl('', Validators.required),\n      seatCapacity: new FormControl(100, Validators.required),\n      facilities: new FormArray([]),\n      safeties: new FormArray([]),\n      shows: new FormArray([])\n    })\n  }\n\n  get shows(): FormArray {\n    return this.auditoriumForm.get('shows') as FormArray;\n  }\n\n  get facilities(): FormArray {\n    return this.auditoriumForm.get('facilities') as FormArray;\n  }\n\n  get safeties(): FormArray {\n    return this.auditoriumForm.get('safeties') as FormArray;\n  }\n\n  addFacility(): void {\n    if (this.facilities.status == \"INVALID\") {\n      this._alertService.defaultAlert('Please complete the above fields');\n      return;\n    }\n    this.facilities.push(new FormControl('', [Validators.required,\n    ApplicationValidator.uniqueFacility(this.facilities.value)]));\n  }\n\n  addSafety(): void {\n    if (this.safeties.status == \"INVALID\") {\n      this._alertService.defaultAlert('Please complete the above fields');\n      return;\n    }\n    this.safeties.push(new FormControl('', [Validators.required,\n    ApplicationValidator.uniqueSafeties(this.safeties.value)]));\n  }\n\n  get nameErrors(): string {\n    let name = this.auditoriumForm.get('name');\n    if (name?.hasError('required'))\n      return \"Name cannot be empty\";\n    else if (name?.hasError('uniqueName'))\n      return \"Auditorium already exists\";\n    return '';\n  }\n\n  get addressErrors(): string {\n    let address = this.auditoriumForm.get('address');\n    if (address?.hasError('required'))\n      return 'Address cannot be empty';\n    return '';\n  }\n\n  get emailErrors(): string {\n    let email = this.auditoriumForm.get('email');\n    if (email?.hasError('required'))\n      return 'Email cannot be empty';\n    return '';\n  }\n\n  get customerCareNoErrors(): string {\n    let customerCareNo = this.auditoriumForm.get('customerCareNo');\n    if (customerCareNo?.hasError('required'))\n      return 'Customer Care cannot be empty';\n    return '';\n  }\n\n  addShow(): void {\n    if (this.shows.status == 'INVALID') {\n      this._alertService.defaultAlert('Please complete the above fields');\n      return;\n    }\n\n    this.shows.push(new FormGroup({\n      name: new FormControl('', [Validators.required, ApplicationValidator.uniqueShowName(this.shows.value)]),\n      startTime: new FormControl('', [Validators.required, ApplicationValidator.uniqueShowTime(this.shows.value)])\n    }));\n  }\n\n  removeFacility(index: number): void {\n    if (confirm(`Do you want to remove the Facility: ${index + 1}`))\n      this.facilities.removeAt(index);\n  }\n\n  removeSafety(index: number): void {\n    if (confirm(`Do you want to remove the Safety: ${index + 1}`))\n      this.safeties.removeAt(index);\n  }\n\n  removeShow(index: number): void {\n    if (confirm(`Do you want to remove the show: ${index + 1}`))\n      this.shows.removeAt(index);\n  }\n\n  onSubmit(): void {\n    this._service.addAuditorium(this.auditoriumForm.value)\n      .subscribe(\n        res => {\n          this._globalService.addAuditorium(res);\n          this._router.navigate(['/admin/manage'], { queryParams: { 'auditorium-added': true } });\n        },\n        err => this._alertService.postionAlert(err.error.message, 'danger-alert')\n      );\n  }\n\n}\n\nfunction uniqueAuditoriumName(auditoriumNames: string[]): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: boolean } | null => {\n    return auditoriumNames ? auditoriumNames\n      .find(name => name.toLowerCase() == control.value.toLowerCase())\n      ? { 'uniqueName': true }\n      : null : null;\n  };\n}\n","<div class=\"form-container\">\n  <div class=\"mx-auto text-center bg-color\">\n    <div class=\"container py-5\">\n      <h1 class=\"fs-2 text-dark py-5 text-uppercase\">\n        Register New Auditorium Here\n      </h1>\n    </div>\n  </div>\n\n  <div class=\"form-holder border border-4 border-info rounded mx-5\">\n    <form [formGroup]=\"auditoriumForm\" (ngSubmit)=\"onSubmit()\">\n      <mat-vertical-stepper [linear]=\"true\" #stepper>\n        <mat-step [stepControl]=\"auditoriumForm\">\n          <ng-template matStepLabel>Auditorium Details</ng-template>\n          <div class=\"row g-0 my-3 justify-content-around\">\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Name</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Auditorium Name\"\n                  formControlName=\"name\"\n                />\n                <mat-error *ngIf=\"nameErrors\">{{ nameErrors }}</mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Image URL</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Image Link\"\n                  formControlName=\"image\"\n                />\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Seating Capacity</mat-label>\n                <input matInput formControlName=\"seatCapacity\" readonly />\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Email Id</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Email Id\"\n                  formControlName=\"email\"\n                />\n                <mat-error *ngIf=\"emailErrors\">{{ emailErrors }}</mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Customer Care Number</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Cust Care No\"\n                  formControlName=\"customerCareNo\"\n                />\n                <mat-error *ngIf=\"customerCareNoErrors\">{{\n                  customerCareNoErrors\n                }}</mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Address</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Address\"\n                  formControlName=\"address\"\n                />\n                <mat-error *ngIf=\"addressErrors\">{{ addressErrors }}</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          <div>\n            <button mat-button matStepperNext type=\"button\">Next</button>\n          </div>\n        </mat-step>\n\n        <mat-step [stepControl]=\"auditoriumForm.get('safeties')!\" optional>\n          <ng-template matStepLabel>Add Safeties</ng-template>\n          <div class=\"row g-0 justify-content-around\">\n            <div\n              class=\"col-sm-12 col-lg-5 form-field\"\n              formArrayName=\"safeties\"\n              *ngFor=\"let safety of safeties.controls; index as i\"\n            >\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Safety</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Hand Sanitizers Available\"\n                  [formControlName]=\"i\"\n                  [attr.list]=\"'safety-' + i\"\n                />\n                <datalist [id]=\"'safety-' + i\">\n                  <option [value]=\"safety\" *ngFor=\"let safety of allSafeties\">\n                    {{ safety }}\n                  </option>\n                </datalist>\n\n                <mat-error *ngIf=\"safeties.touched\">\n                  <span *ngIf=\"safety.errors?.required\"\n                    >Safety cannot be empty</span\n                  >\n                  <span *ngIf=\"safety.errors?.uniqueName\"\n                    >Safety already added</span\n                  >\n                </mat-error>\n              </mat-form-field>\n              <mat-icon\n                class=\"fs-2 w-auto text-danger delete-icon\"\n                (click)=\"removeSafety(i)\"\n                aria-hidden=\"false\"\n                matTooltip=\"Remove the Safety\"\n                aria-label=\"delete icon\"\n                >delete</mat-icon\n              >\n            </div>\n          </div>\n          <div class=\"text-center text-primary mt-4\">\n            <mat-icon\n              class=\"pe-cursor fs-2\"\n              aria-hidden=\"false\"\n              matTooltip=\"Add one more safety\"\n              aria-label=\"add_circle icon\"\n              (click)=\"addSafety()\"\n              >add_circle</mat-icon\n            >\n          </div>\n          <div>\n            <button mat-button matStepperPrevious type=\"button\">Back</button>\n            <button mat-button matStepperNext type=\"button\">Next</button>\n          </div>\n        </mat-step>\n\n        <mat-step [stepControl]=\"auditoriumForm.get('facilities')!\" optional>\n          <ng-template matStepLabel>Add Facilities</ng-template>\n          <div class=\"row g-0 justify-content-around\">\n            <div\n              class=\"col-sm-12 col-lg-5 form-field\"\n              formArrayName=\"facilities\"\n              *ngFor=\"let facility of facilities.controls; index as i\"\n            >\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Facility</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Parking Facility\"\n                  [formControlName]=\"i\"\n                  [attr.list]=\"'facility-' + i\"\n                />\n                <datalist [id]=\"'facility-' + i\">\n                  <option\n                    [value]=\"facility\"\n                    *ngFor=\"let facility of allFacilities\"\n                  >\n                    {{ facility }}\n                  </option>\n                </datalist>\n\n                <mat-error *ngIf=\"facilities.touched\">\n                  <span *ngIf=\"facility.errors?.required\"\n                    >Facility cannot be empty</span\n                  >\n                  <span *ngIf=\"facility.errors?.uniqueName\"\n                    >Facility already added</span\n                  >\n                </mat-error>\n              </mat-form-field>\n              <mat-icon\n                class=\"fs-2 w-auto text-danger delete-icon\"\n                (click)=\"removeFacility(i)\"\n                aria-hidden=\"false\"\n                matTooltip=\"Remove the Facility\"\n                aria-label=\"delete icon\"\n                >delete</mat-icon\n              >\n            </div>\n          </div>\n          <div class=\"text-center text-primary mt-4\">\n            <mat-icon\n              class=\"pe-cursor fs-2\"\n              aria-hidden=\"false\"\n              matTooltip=\"Add one more facility\"\n              aria-label=\"add_circle icon\"\n              (click)=\"addFacility()\"\n              >add_circle</mat-icon\n            >\n          </div>\n          <div>\n            <button mat-button matStepperPrevious type=\"button\">Back</button>\n            <button mat-button matStepperNext type=\"button\">Next</button>\n          </div>\n        </mat-step>\n\n        <mat-step [stepControl]=\"auditoriumForm.get('shows')!\" optional>\n          <ng-template matStepLabel>Add Shows</ng-template>\n          <div\n            class=\"w-100\"\n            formArrayName=\"shows\"\n            *ngFor=\"let show of shows.controls; index as i\"\n          >\n            <div\n              class=\"\n                row\n                g-0\n                justify-content-around\n                align-content-center\n                form-field\n              \"\n              [formGroupName]=\"i\"\n            >\n              <div class=\"col-lg-5 col-sm-12\">\n                <mat-form-field\n                  class=\"d-block w-100 text-dark\"\n                  appearance=\"outline\"\n                >\n                  <mat-label>Show Name</mat-label>\n                  <input\n                    matInput\n                    formControlName=\"name\"\n                    [attr.list]=\"'show-name-' + i\"\n                  />\n                  <datalist [id]=\"'show-name-' + i\">\n                    <option *ngFor=\"let show of showNames\" [value]=\"show\">\n                      {{ show }}\n                    </option>\n                  </datalist>\n                  <mat-error *ngIf=\"shows.touched\">\n                    <span *ngIf=\"show.get('name')?.errors?.required\"\n                      >Show Name cannot be empty</span\n                    >\n                    <span *ngIf=\"show.get('name')?.errors?.uniqueName\"\n                      >Show Name already added</span\n                    >\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <div class=\"col-lg-5 col-sm-12\">\n                <mat-form-field\n                  class=\"d-block w-100 text-dark\"\n                  appearance=\"outline\"\n                >\n                  <mat-label>Show Timing</mat-label>\n                  <input\n                    type=\"time\"\n                    matInput\n                    placeholder=\"Matnee\"\n                    formControlName=\"startTime\"\n                  />\n                  <mat-error *ngIf=\"shows.touched\">\n                    <span *ngIf=\"show.get('startTime')?.errors?.required\">\n                      Show Start Time cannot be empty</span\n                    >\n                    <span *ngIf=\"show.get('startTime')?.errors?.uniqueTime\">\n                      Time gap between the shows must be at-least 3 hours</span\n                    >\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <mat-icon\n                class=\"fs-2 w-auto text-danger delete-icon\"\n                (click)=\"removeShow(i)\"\n                aria-hidden=\"false\"\n                matTooltip=\"Remove the Show\"\n                aria-label=\"delete icon\"\n                >delete</mat-icon\n              >\n            </div>\n          </div>\n          <div class=\"text-center text-primary mt-4\">\n            <mat-icon\n              class=\"pe-cursor fs-2\"\n              aria-hidden=\"false\"\n              matTooltip=\"Add one more facility\"\n              aria-label=\"add_circle icon\"\n              (click)=\"addShow()\"\n              >add_circle</mat-icon\n            >\n          </div>\n          <div>\n            <button mat-button matStepperPrevious type=\"button\">Back</button>\n            <button mat-button matStepperNext type=\"button\">Next</button>\n          </div>\n        </mat-step>\n\n        <mat-step>\n          <ng-template matStepLabel>Review</ng-template>\n          <pre>\n            {{ auditoriumForm.value | json }}\n          </pre>\n          <div>\n            <button mat-button matStepperPrevious type=\"button\">Back</button>\n            <button\n              mat-button\n              color=\"primary\"\n              [disabled]=\"!auditoriumForm.valid\"\n            >\n              Submit\n            </button>\n          </div>\n        </mat-step>\n      </mat-vertical-stepper>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GlobalConstants } from 'src/app/commons/global-constants';\nimport { Credentials, HttpResponse, Token, User } from 'src/app/interfaces/application';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private _http: HttpClient) { }\n\n  registerUser(user: User): Observable<HttpResponse> {\n    return this._http.post<HttpResponse>(GlobalConstants.REGISTER_URL, user, { headers: { skip: \"true\" } });\n  }\n\n  checkUniqueness(username: string): Observable<Token> {\n    return this._http.get<Token>(`${GlobalConstants.CHECK_UNIQUENESS_URL}/${username}`, { headers: { skip: \"true\" } });\n  }\n\n  loginUser(credentials: Credentials): Observable<Token> {\n    return this._http.post<Token>(GlobalConstants.AUTHENTICATE_URL, credentials, { headers: { skip: \"true\" } });\n  }\n\n  forgotPassword(credentials: Credentials): Observable<HttpResponse> {\n    return this._http.put<HttpResponse>(GlobalConstants.FORGOT_PASSWORD_URL, credentials, { headers: { skip: \"true\" } });\n  }\n\n  updateUser(userId: string, user: User): Observable<User> {\n    return this._http.put<User>(`${GlobalConstants.UPDATE_USER_URL}/${userId}`, user);\n  }\n\n  getLoggedInUser(): Observable<User> {\n    return this._http.get<User>(GlobalConstants.GET_LOGGED_IN_USER_URL);\n  }\n}\n","export interface Application {\n}\n\nexport interface User {\n    id?: string;\n    name?: string;\n    email: string;\n    mobile?: string;\n    gender?: string;\n    terms?: boolean;\n    password?: string;\n    userRole: string;\n    isAccountNonExpired?: boolean;\n    isAccountNonLocked?: boolean;\n    isCredentialsNonExpired?: boolean;\n    isEnabled?: boolean;\n}\n\nexport class UserImpl implements User {\n    id: string = '';\n    name: string = '';\n    email: string = '';\n    mobile: string = '';\n    gender: string = '';\n    terms: boolean = true;\n    password: string = '';\n    userRole: string = '';\n\n}\n\nexport interface Credentials {\n    username: string;\n    password: string;\n}\n\nexport interface Movie {\n    id?: number;\n    name: string;\n    image?: string;\n    bgImage?: string;\n    year?: string;\n    story?: string;\n    duration?: string;\n    addedOn?: Date;\n    caption?: string;\n    release?: Date;\n    genres?: string[];\n    language?: string;\n    casts?: Actor[];\n    crews?: Actor[];\n}\n\nexport interface Auditorium {\n    id?: number;\n    name: string;\n    image?: string;\n    email?: string;\n    address?: string;\n    customerCareNo?: string;\n    seatCapacity?: number;\n    facilities?: string[];\n    safeties?: string[];\n    shows: Show[];\n}\n\nexport interface Show {\n    id?: number;\n    name: string;\n    startTime: string;\n    movieShows?: MovieShow[];\n}\n\nexport interface MovieShow {\n    id?: number;\n    start?: Date;\n    end?: Date;   // Add this field in backend\n    movieId?: number;              // Need movie, add this in backed\n    bookings?: Booking[];\n    price?: Price;\n}\n\nexport interface Booking {\n    id?: number;\n    amount?: number;\n    totalSeats?: number;\n    bookedOn?: Date;\n    dateOfBooking?: Date;\n    seatNumbers?: string[];\n    userId?: string;                 // Need user, add this in backed\n    payment?: Payment;\n    bookingDetails: BookingDetails;\n}\n\nexport interface BookingDetails {\n    id?: number;\n    auditoriumId: number;\n    showId: number;\n    movieShowId: number;\n    movieId: number;\n}\n\nexport interface Price {\n    id?: number;\n    general: number;\n    silver: number;\n    gold: number;\n}\n\nexport interface Payment {\n    id?: number;\n    amount: number;\n    paymentDate: Date;\n    cardNumber: string;\n    cardExpiryMonth: string;\n    cardExpiryYear: string;\n    cardCVV: string;\n}\n\nexport interface Actor {\n    id?: number;\n    isCast: string;\n    name: string;\n    role: string;\n    image: string;\n}\n\nexport interface TempSelectMembers {\n    auditoriumId: number,\n    auditoriumName: string;\n    showId: number,\n    showName: string;\n    showTime: string;\n    movieShowId: number;\n    bookedSeats: number;\n    bookedSeatNumbers: string[];\n    date: Date;\n    movieName: string;\n    movieId: number;\n    movieLanguage: string;\n    seats: number;\n}\n\nexport interface TempScreen {\n    selectedSeats: number;\n    selectedSeatNumbers: string[];\n    amount: number;\n}\n\nexport interface TempAuditoriumShowSelectedForSeatBooking {\n    auditoriumId: number;\n    showId: number;\n    noOfSeats: number;\n    alreadySelectedSeats: string[];\n}\n\nexport interface Token {\n    token: string;\n}\n\nexport interface HttpResponse {\n    statusCode: number;\n    error: string;\n    message: string;\n}\n\nexport interface BookedSeats {\n    count: number;\n    seats: string[];\n}\n\nexport interface LeaveForm {\n    areYouSure(): boolean;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/interfaces/application';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private _authService: AuthService, private _router: Router) { }\n\n  getUser(): User | null {\n    const user_email = localStorage.getItem('user-email');\n    const user_role = localStorage.getItem('user-role');\n    const user_id = localStorage.getItem('user-id');\n\n    // if (this.getToken() != null && user_email == null)\n    //   this.setToken(this.getToken()!);\n\n    if (user_email && user_role && user_id) {\n      const user: User = {\n        email: user_email,\n        userRole: user_role,\n        id: user_id\n      }\n      return user;\n    }\n    else\n      return null;\n  }\n\n  private setUser(user: User): void {\n    localStorage.setItem('user-email', user.email);\n    localStorage.setItem('user-role', user.userRole);\n    localStorage.setItem('user-id', user.id!);\n  }\n\n  private removeUser(): boolean {\n    localStorage.removeItem('user-email');\n    localStorage.removeItem('user-role');\n    localStorage.removeItem('user-id');\n    return true;\n  }\n\n  isLoggedIn(): boolean {\n    return !!this.getUser();\n  }\n\n  isAdmin(): boolean {\n    const user = this.getUser();\n    return !!user?.userRole && (user?.userRole == 'ROLE_ADMIN' || user?.userRole == 'ROLE_SUPER_ADMIN')\n  }\n\n  setToken(token: string): boolean {\n    console.warn('from set Token');\n    localStorage.setItem('token', token);\n    this._authService.getLoggedInUser().subscribe(user => {\n      this.setUser(user)\n    });\n    return true\n  }\n\n  getToken(): string | null {\n    const token = localStorage.getItem('token');\n    // if (!token) {\n    //   this._router.navigate(['/user/login'], { queryParams: { 'wrong': true } });\n    //   return;\n    // }\n    return token;\n  }\n\n  removeToken(): boolean {\n    console.warn('from remove token');\n    localStorage.removeItem('token');\n    this.removeUser();\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { User, UserImpl } from 'src/app/interfaces/application';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user = new BehaviorSubject<User>(new UserImpl());\n  user$ = this.user.asObservable();\n\n  constructor(private _authService: AuthService) { }\n\n  ngOnInit(): void {\n    this._authService.getLoggedInUser().subscribe(user => this.user.next(user));\n  }\n\n}\n","<div class=\"h-80vh\">\n  <div class=\"col-10 mx-auto my-4\">\n    <mat-toolbar color=\"primary\" class=\"rounded text-center\"\n      >Your profile</mat-toolbar\n    >\n  </div>\n  <mat-card class=\"col-10 mx-auto\">\n    <table class=\"table\">\n      <tbody>\n        <tr>\n          <th scope=\"row\">Name</th>\n          <td>{{ (user | async)?.name }}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Email</th>\n          <td>{{ (user | async)?.email }}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Mobile</th>\n          <td>{{ (user | async)?.mobile }}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Gender</th>\n          <td>{{ (user | async)?.gender }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Util } from 'src/app/classes/util/util';\nimport { Auditorium, Movie, MovieShow, Show } from 'src/app/interfaces/application';\nimport { AlertService } from 'src/app/services/alert/alert.service';\nimport { ApplicationService } from 'src/app/services/application/application.service';\nimport { GlobalService } from 'src/app/services/global/global.service';\nimport { AddMovieToShowFormComponent } from '../templates/add-movie-to-show-form/add-movie-to-show-form.component';\nimport { ShowFormComponent } from '../templates/show-form/show-form.component';\n\n@Component({\n  selector: 'app-manage',\n  templateUrl: './manage.component.html',\n  styleUrls: ['./manage.component.css'],\n})\nexport class ManageComponent implements OnInit {\n\n\n  allAuditoriums!: Auditorium[];\n\n  allMovies!: Movie[];\n\n  selectedCinemaHallId!: number;\n\n  selectedShowId!: number;\n\n  selectedShows!: Show[];\n\n  selectedMovieShows!: MovieShow[];\n\n  constructor(\n    private _router: Router,\n    private _dialog: MatDialog,\n    private _service: ApplicationService,\n    private _globalService: GlobalService,\n    private _alertService: AlertService,\n    private _activeRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this._globalService.getAllAuditoriums()\n      .subscribe(halls => this.allAuditoriums = halls);\n    this._globalService.getAllMovies()\n      .subscribe(movies => this.allMovies = movies);\n\n    this._activeRoute.queryParams\n      .subscribe(param => {\n        if (param['movie-added'])\n          this._alertService.postionAlert('Movie Added');\n        else if (param['auditorium-added'])\n          this._alertService.postionAlert('Auditorium Added');\n        // else if (param['show-added'])\n        //   this._alertService.postionAlert('Show Added');\n        // else if (param['movie-show-added'])\n        //   this._alertService.postionAlert('Movie Show Added');\n      });\n  }\n\n  onCinemaHallSelect(auditoriumId: number): void {\n    this.selectedCinemaHallId = auditoriumId;\n    this.selectedShows = this.allAuditoriums.find(\n      (hall) => hall.id == auditoriumId\n    )?.shows!;\n    this.selectedShowId = 0;\n    this.selectedMovieShows = [];\n  }\n\n  onShowSelect(showId: number): void {\n    this.selectedShowId = showId;\n\n    this.selectedMovieShows = this.selectedShows.find((show) => show.id == showId)\n      ?.movieShows!;\n  }\n\n  getShowMovieName(movieId: number): string {\n    return this.allMovies.find(movie => movie.id == movieId)?.name!;\n  }\n  getShowMovieLanguage(movieId: number): string {\n    return this.allMovies.find(movie => movie.id == movieId)?.language!;\n  }\n\n  getMovieImage(movieId: number): string {\n    return this.allMovies.find(movie => movie.id == movieId)?.image!;\n  }\n\n  onAddCinemaHall(): void {\n    this._router.navigate(['./add-auditorium']);\n  }\n\n  onAddMovie(): void {\n    this._router.navigate(['./add-movie']);\n  }\n\n\n  onAddShow(): void {\n    const dialog = this._dialog.open(ShowFormComponent, {\n      width: '80%',\n      data: this.selectedShows\n    })\n\n    dialog.afterClosed().subscribe(result => {\n      if (result?.show) {\n        this._service.addShow(this.selectedCinemaHallId, result.show)\n          .subscribe(\n            res => {\n              this._globalService.addShow(this.selectedCinemaHallId, res)\n              this._alertService.postionAlert('Show Added');\n              // this.selectedShows.push(res);\n            },\n            err => this._alertService.postionAlert(err.error.message, 'danger-alert')\n          );\n      }\n    },\n      (error) => console.log(error)\n    );\n\n  }\n\n  onAddMovieToTheShow(): void {\n    const movieShows = this.selectedShows.\n      find(show => show.id == this.selectedShowId)?.movieShows;\n    const dialog = this._dialog.open(AddMovieToShowFormComponent, {\n      width: '90%',\n      data: {\n        shows: movieShows,\n        movies: this.allMovies\n      }\n    });\n\n    dialog.afterClosed().subscribe(result => {\n      if (result?.movieShow) {\n        this._service.addMovieShow(this.selectedCinemaHallId, this.selectedShowId, result.movieShow)\n          .subscribe(\n            res => {\n              if (res) {\n                this._globalService.addMovieShows(this.selectedCinemaHallId, this.selectedShowId, res);\n                this._alertService.postionAlert('Movie Show Added');\n              }\n              // this.selectedShows.find(show => show.id == this.selectedShowId)?.movieShows?.push(res);\n            },\n            err => this._alertService.postionAlert(err.error.message, 'danger-alert')\n          );\n      }\n    })\n  }\n\n  formatTime(time: string): string {\n    return Util.formatTimeToAmOrPm(time);\n  }\n\n  onEditCinemaHall(auditoriumId: number): void {\n    alert(`edit ${auditoriumId}`);\n  }\n\n  onDeleteCinemaHall(auditoriumId: number): void {\n    alert(`delete ${auditoriumId}`);\n  }\n\n  onEditShow(showId: number): void {\n    alert(`edit show ${showId}`);\n  }\n\n  onDeleteShow(showId: number): void {\n    alert(`delete show: ${showId}`);\n  }\n\n  onEditMovie(movieId: number): void {\n    alert(`edit movie ${movieId}`);\n  }\n\n  onDeleteMovie(movieId: number): void {\n    alert(`delete movie ${movieId}`);\n  }\n}\n","<div class=\"wrapper w-100 my-2\">\n  <div class=\"container-fluid row g-0 h-90vh\">\n    <div class=\"col-lg-3 px-2 border-3 border-end row g-0\">\n      <h2\n        class=\"\n          py-2\n          rounded\n          text-center text-dark\n          shadow-sm\n          border border-2 border-dark\n          align-self-start\n        \"\n      >\n        Cinema Halls\n      </h2>\n      <div class=\"overflow-auto h-70vh\">\n        <h1 *ngIf=\"!allAuditoriums\" class=\"text-danger text-center\">\n          Cinema Hall list is empty\n        </h1>\n        <mat-list role=\"list\" *ngIf=\"allAuditoriums\">\n          <mat-list-item\n            role=\"listitem\"\n            *ngFor=\"let hall of allAuditoriums\"\n            class=\"position-relative options pe-cursor rounded\"\n            [ngClass]=\"{ highlight: hall.id == selectedCinemaHallId }\"\n            (click)=\"onCinemaHallSelect(hall.id!)\"\n          >\n            <div class=\"w-100\">\n              {{ hall.name | uppercase }}\n            </div>\n            <span class=\"icon-holder w-auto\">\n              <mat-icon\n                class=\"w-auto text-info me-1 pe-cursor edit-icon\"\n                aria-hidden=\"false\"\n                matTooltip=\"Edit Cinema Hall\"\n                (click)=\"onEditCinemaHall(hall.id!)\"\n                aria-label=\"edit icon\"\n                >edit\n              </mat-icon>\n              <mat-icon\n                class=\"w-auto text-danger ms-1 pe-cursor delete-icon\"\n                aria-hidden=\"false\"\n                matTooltip=\"Delete Cinema Hall\"\n                (click)=\"onDeleteCinemaHall(hall.id!)\"\n                aria-label=\"delete icon\"\n                >delete\n              </mat-icon>\n            </span>\n          </mat-list-item>\n        </mat-list>\n      </div>\n      <a\n        mat-raised-button\n        class=\"align-self-end mt-auto w-100 d-block\"\n        color=\"warn\"\n        routerLink=\"../add-auditorium\"\n      >\n        Add Cinema Hall\n      </a>\n    </div>\n    <div class=\"col-lg-3 px-2 border-3 border-end row g-0\">\n      <h2\n        class=\"\n          py-2\n          rounded\n          text-center text-dark\n          shadow-sm\n          align-self-start\n          border border-2 border-dark\n        \"\n      >\n        Shows\n      </h2>\n      <div class=\"overflow-auto h-70vh\">\n        <h1 *ngIf=\"!selectedShows\" class=\"text-danger text-center\">\n          Select a Cinema Hall\n        </h1>\n        <mat-list *ngIf=\"selectedShows\" role=\"list\">\n          <mat-list-item\n            role=\"listitem\"\n            *ngFor=\"let show of selectedShows\"\n            class=\"position-relative options pe-cursor rounded\"\n            [ngClass]=\"{ highlight: show.id == selectedShowId }\"\n            (click)=\"onShowSelect(show.id!)\"\n          >\n            <div class=\"w-100 row g-0 justify-content-around\">\n              <div class=\"col-5\">{{ show.name | titlecase }}</div>\n              |\n              <div class=\"col-5\">\n                {{ \"Time: \" + formatTime(show.startTime) }}\n              </div>\n            </div>\n            <span class=\"icon-holder w-auto\">\n              <mat-icon\n                class=\"w-auto text-info me-1 pe-cursor edit-icon\"\n                aria-hidden=\"false\"\n                matTooltip=\"Edit Show\"\n                aria-label=\"edit icon\"\n                (click)=\"onEditShow(show.id!)\"\n                >edit</mat-icon\n              >\n              <mat-icon\n                class=\"w-auto text-danger ms-1 pe-cursor delete-icon\"\n                aria-hidden=\"false\"\n                matTooltip=\"Delete Show\"\n                aria-label=\"delete icon\"\n                (click)=\"onDeleteShow(show.id!)\"\n                >delete</mat-icon\n              >\n            </span>\n          </mat-list-item>\n        </mat-list>\n      </div>\n      <button\n        *ngIf=\"selectedShows\"\n        mat-raised-button\n        class=\"align-self-end mt-auto w-100 d-block\"\n        (click)=\"onAddShow()\"\n        color=\"accent\"\n      >\n        Add Show\n      </button>\n    </div>\n    <div class=\"col-lg-6 px-2 row g-0\">\n      <h2\n        class=\"\n          py-2\n          rounded\n          text-center text-dark\n          shadow-sm\n          align-self-start\n          border border-2 border-dark\n        \"\n      >\n        Movies\n      </h2>\n      <div class=\"overflow-auto h-70vh\">\n        <h1\n          *ngIf=\"selectedShowId && !selectedMovieShows\"\n          class=\"text-warning text-center\"\n        >\n          Selected Show has no movies\n        </h1>\n        <h1 *ngIf=\"!selectedShowId\" class=\"text-danger text-center\">\n          Select a Show\n        </h1>\n        <mat-list *ngIf=\"selectedShowId\" role=\"list\">\n          <mat-list-item\n            role=\"listitem\"\n            *ngFor=\"let shows of selectedMovieShows\"\n            class=\"position-relative show-options pe-cursor rounded h-auto py-2\"\n          >\n            <div class=\"w-100\">\n              <img\n                class=\"example-option-img me-2 rounded d-inline-block\"\n                aria-hidden\n                [src]=\"getMovieImage(shows.movieId!)\"\n                height=\"120\"\n                width=\"120\"\n              />\n              {{\n                (getShowMovieName(shows.movieId!) | titlecase) +\n                  \" | lang: \" +\n                  getShowMovieLanguage(shows.movieId!) +\n                  \" | start: \" +\n                  (shows.start | date: \"longDate\") +\n                  \" | end: \" +\n                  (shows.end | date: \"longDate\")\n              }}\n            </div>\n            <span class=\"icon-holder w-auto\">\n              <mat-icon\n                class=\"w-auto text-info me-1 pe-cursor edit-icon\"\n                aria-hidden=\"false\"\n                matTooltip=\"Edit Movie Show\"\n                aria-label=\"edit icon\"\n                (click)=\"onEditMovie(shows.id!)\"\n                >edit</mat-icon\n              >\n              <mat-icon\n                class=\"w-auto text-danger ms-1 pe-cursor delete-icon\"\n                aria-hidden=\"false\"\n                matTooltip=\"Delete Movie Show\"\n                aria-label=\"delete icon\"\n                (click)=\"onDeleteMovie(shows.id!)\"\n                >delete</mat-icon\n              >\n            </span>\n          </mat-list-item>\n        </mat-list>\n      </div>\n      <div\n        class=\"row g-0 align-self-end mt-auto col-12 justify-content-between\"\n      >\n        <a\n          mat-raised-button\n          class=\"col-5 text-capitalize\"\n          routerLink=\"../add-movie\"\n          color=\"primary\"\n        >\n          Add New Movie\n        </a>\n        <button\n          *ngIf=\"selectedShowId\"\n          mat-raised-button\n          class=\"col-5 text-capitalize\"\n          (click)=\"onAddMovieToTheShow()\"\n          color=\"warn\"\n        >\n          Add movie to the show\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","<footer\n  *ngIf=\"router.url !== '/select-seats'\"\n  class=\"row w-100 justify-content-around mx-0 footer\"\n  [ngClass]=\"fixed ? 'fixed-bottom' : ''\"\n>\n  <div\n    class=\"text-center text-white\"\n    style=\"height: 50px; line-height: 50px; color: rgb(67, 154, 236);\"\n    [ngClass]=\"{\n      'bg-dark': !bgColor,\n      bgColor: bgColor,\n      'text-white': !textColor,\n      textColor: textColor\n    }\"\n  >\n    Designed & Developed by<span><a\n      href=\"https://arul-portfolio-fsd.netlify.app/#/\"\n      target=\"_blank\"\n      class=\"text-decoration-none mx-2\"\n      ><strong>Arul</strong></a\n    ></span>\n  </div>\n</footer>\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class FooterComponent implements OnInit {\n\n  @Input() fixed!: boolean;\n\n  @Input() bgColor!: string;\n\n  @Input() textColor!: string;\n\n  constructor(public router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Auditorium, Booking, Movie, MovieShow, Show, TempScreen, TempSelectMembers } from 'src/app/interfaces/application';\nimport { ApplicationService } from '../application/application.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  private auditoriums: Auditorium[] = [];\n\n  private movies: Movie[] = [];\n\n  private movieShows: MovieShow[] = [];\n\n  private nowPlayingMovies: Movie[] = [];\n\n  private upComingMovies: Movie[] = [];\n\n  private tempSelectMembers!: TempSelectMembers;\n\n  private tempScreen!: TempScreen;\n\n  constructor(private _service: ApplicationService) { }\n\n  getAllAuditoriums(): Observable<Auditorium[]> {\n    if (!this.auditoriums || this.auditoriums.length < 1) {\n      console.warn(\"Calling All Auditoriums\");\n      return this._service.getAllAuditoriums().pipe(\n        map(halls => {\n          this.auditoriums = halls;\n          console.table(this.auditoriums);\n          return this.auditoriums;\n        })\n      );\n    }\n    else\n      return of(this.auditoriums);\n  }\n\n  getAllMovies(): Observable<Movie[]> {\n    if (!this.movies || this.movies.length < 1) {\n      console.warn(\"Calling All Movies\");\n      return this._service.getAllMovies().pipe(\n        map(movies => {\n          this.movies = movies;\n          return this.movies;\n        })\n      );\n    }\n    else\n      return of(this.movies);\n  }\n\n  getAllMovieShows(): Observable<MovieShow[]> {\n    if (!this.movieShows || this.movieShows.length < 1) {\n      console.warn(\"Calling All Movie Shows\");\n      return this._service.getAllMovieShows().pipe(\n        map(m_shows => {\n          this.movieShows = m_shows;\n          return this.movieShows;\n        })\n      );\n    }\n    else\n      return of(this.movieShows);\n  }\n\n  getAllUpComingMovies(): Observable<Movie[]> {\n    return this._service.getAllUpComingMovieShows().pipe(\n      map(m_shows => {\n        this.upComingMovies = [];\n        m_shows.forEach(m_show => {\n          this.getAllMovies().subscribe(movies => {\n            this.upComingMovies.push(movies.find(movie => movie.id == m_show.movieId)!);\n          });\n        });\n        console.error(this.upComingMovies);\n        return this.upComingMovies;\n      })\n    );\n  }\n\n  getAllNowPlayingMovies(): Observable<Movie[]> {\n    return this._service.getAllNowPlayingMovieShows().pipe(\n      map(m_shows => {\n        this.nowPlayingMovies = [];\n        m_shows.forEach(m_show => {\n          this.getAllMovies().subscribe(movies => {\n            this.nowPlayingMovies.push(movies.find(movie => movie.id == m_show.movieId)!);\n          });\n        });\n        return this.nowPlayingMovies;\n      })\n    );\n  }\n\n  getAllNowPlayingAndUpComing(): Observable<Movie[]> {\n    return this._service.getAllNowPlayingAndUpComingMovieShows().pipe(\n      map(m_shows => {\n        this.nowPlayingMovies = [];\n        m_shows.forEach(m_show => {\n          this.getAllMovies().subscribe(movies => {\n            this.nowPlayingMovies.push(movies.find(movie => movie.id == m_show.movieId)!);\n          });\n        });\n        return this.nowPlayingMovies;\n      })\n    );\n  }\n\n  getFewNowPlayingMovies(): Observable<Movie[]> {\n    return this._service.getFewNowPlayingMovieShows().pipe(\n      map(m_shows => {\n        this.nowPlayingMovies = [];\n        m_shows.forEach(m_show => {\n          this.getAllMovies().subscribe(movies => {\n            this.nowPlayingMovies.push(movies.find(movie => movie.id == m_show.movieId)!);\n          });\n        });\n        return this.nowPlayingMovies;\n      })\n    );\n  }\n\n  getFewUpComingMovies(): Observable<Movie[]> {\n    return this._service.getFewUpComingMovieShows().pipe(\n      map(m_shows => {\n        this.nowPlayingMovies = [];\n        m_shows.forEach(m_show => {\n          this.getAllMovies().subscribe(movies => {\n            this.nowPlayingMovies.push(movies.find(movie => movie.id == m_show.movieId)!);\n          });\n        });\n        return this.nowPlayingMovies;\n      })\n    );\n  }\n\n  addMovie(movie: Movie): void {\n    this.movies.push(movie);\n    console.table(this.movies);\n  }\n\n  addAuditorium(auditorium: Auditorium): void {\n    this.auditoriums.push(auditorium);\n    console.table(this.auditoriums);\n  }\n\n  addShow(auditoriumId: number, show: Show): void {\n    let shows: Show[] = this.auditoriums.find(hall => hall.id == auditoriumId)?.shows!;\n    if (!shows)\n      shows = [];\n    shows.push(show);\n    console.table(shows);\n  }\n\n  addMovieShows(auditoriumId: number, showId: number, movieShow: MovieShow): void {\n    let m_shows: MovieShow[] = this.auditoriums.find(hall => hall.id == auditoriumId)?.shows.find(show => show.id == showId)?.movieShows!;\n    if (!m_shows)\n      m_shows = [];\n    m_shows.push(movieShow);\n    console.table(m_shows);\n  }\n\n  addBooking(auditoriumId: number, showId: number, movieShowId: number, booking: Booking): void {\n    let bookings: Booking[] = this.auditoriums\n      .find(hall => hall.id == auditoriumId)?.shows\n      .find(show => show.id == showId)?.movieShows\n      ?.find(m_show => m_show.id == movieShowId)?.bookings!;\n    bookings.push(booking);\n    console.table(bookings);\n  }\n\n  getAuditoriumNames(): Observable<string[]> {\n    return this.getAllAuditoriums().pipe(\n      map((halls: Auditorium[]) => {\n        return halls ? [...new Set(halls.map(hall => hall.name))] : []\n      })\n    );\n  }\n\n  getMovieNames(): Observable<string[]> {\n    return this.getAllMovies().pipe(\n      map((movies: Movie[]) => {\n        return movies ? [...new Set(movies.map(movie => movie.name))] : []\n      })\n    );\n  }\n\n  setTempSelectMembers(tempSelectMembers: TempSelectMembers): void {\n    this.tempSelectMembers = tempSelectMembers;\n  }\n\n  getTempSelectMembers(): TempSelectMembers {\n    return this.tempSelectMembers;\n  }\n\n  setTempScreen(tempScreen: TempScreen): void {\n    this.tempScreen = tempScreen;\n  }\n\n  getTempScreen(): TempScreen {\n    return this.tempScreen;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Util } from 'src/app/classes/util/util';\nimport { Booking } from 'src/app/interfaces/application';\nimport { ApplicationService } from 'src/app/services/application/application.service';\nimport { GlobalService } from 'src/app/services/global/global.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-my-bookings',\n  templateUrl: './my-bookings.component.html',\n  styleUrls: ['./my-bookings.component.css']\n})\nexport class MyBookingsComponent implements OnInit {\n\n  present: boolean = true;\n\n  heading = 'Your booking list';\n\n  bookings!: Booking[];\n  allBookings = new BehaviorSubject<Booking[]>(this.bookings);\n  allBookings$ = this.allBookings.asObservable();\n\n  auditoriumName$ = new BehaviorSubject<string>('');\n  showName$ = new BehaviorSubject<string>('');\n  showTiming$ = new BehaviorSubject<string>('');\n  movieName$ = new BehaviorSubject<string>('');\n  movieLanguage$ = new BehaviorSubject<string>('');\n  dateOfBooking$ = new BehaviorSubject<Date>(new Date());\n  movieImage$ = new BehaviorSubject<string>('');\n  noOfTickets$ = new BehaviorSubject<number>(0);\n  selectedSeats$ = new BehaviorSubject<string[]>([]);\n  amount$ = new BehaviorSubject<number>(0);\n\n\n  selectedBookingId = 0;\n\n  constructor(private _appService: ApplicationService,\n    private _userService: UserService,\n    private _globalService: GlobalService) { }\n\n  ngOnInit(): void {\n    const userId = this._userService.getUser()?.id;\n\n    this._appService.getAllUserBooking(userId!).subscribe(bookings => {\n      if (bookings.length < 1) {\n        this.heading = 'Booking list is empty';\n        this.present = false;\n      }\n      const all_bookings = bookings.sort((booking1, booking2) => Util.sortByDates(booking1.dateOfBooking, booking2.dateOfBooking));\n      this.allBookings.next(all_bookings);\n      this.setBooking(all_bookings[0]);\n    });\n  }\n\n  formatTime(time: string): string {\n    return Util.formatTimeToAmOrPm(time);\n  }\n\n  onBookingChange(bookingId: number): void {\n    if (this.selectedBookingId != bookingId) {\n      this.allBookings$.pipe(\n        map(bookings => {\n          const booking = bookings.find(booking => booking.id == bookingId)!;\n          this.setBooking(booking);\n        })\n      );\n    }\n  }\n\n  setBooking(booking: Booking) {\n    this.selectedBookingId = booking?.id!;\n    this.amount$.next(booking?.amount!);\n    this.dateOfBooking$.next(booking?.dateOfBooking!);\n    this.noOfTickets$.next(booking?.totalSeats!);\n    this.selectedSeats$.next(booking?.seatNumbers!);\n    this._globalService.getAllAuditoriums().subscribe(halls => {\n      const auditorium = halls.find(hall => hall.id == booking?.bookingDetails.auditoriumId);\n      this.auditoriumName$.next(auditorium?.name!);\n      const show = auditorium?.shows.find(show => show.id == booking?.bookingDetails.showId);\n      this.showName$.next(show?.name!);\n      this.showTiming$.next(show?.startTime!);\n    });\n\n    this._globalService.getAllMovies().subscribe(movies => {\n      const movie = movies.find(movie => movie.id == booking?.bookingDetails.movieId);\n      this.movieImage$.next(movie?.image!);\n      this.movieLanguage$.next(movie?.language!);\n      this.movieName$.next(movie?.name!);\n    });\n  }\n\n\n\n}\n","<div class=\"col-10 mx-auto my-4 h-80vh\">\r\n  <mat-toolbar color=\"primary\" class=\"rounded text-center\">\r\n    <h1\r\n      class=\"text-center mx-auto\"\r\n      [ngClass]=\"present ? '' : 'text-danger h-80vh'\"\r\n    >\r\n      {{ heading }}\r\n    </h1>\r\n  </mat-toolbar>\r\n\r\n  <mat-card *ngIf=\"present\">\r\n    <div class=\"row g-0 col-12\">\r\n      <div class=\"col-2 p-2\">\r\n        <div\r\n          class=\"my-2 col-12 text-start\"\r\n          *ngFor=\"let booking of allBookings$ | async; index as i\"\r\n        >\r\n          <input\r\n            type=\"radio\"\r\n            autocomplete=\"off\"\r\n            [checked]=\"booking.id == selectedBookingId\"\r\n            class=\"btn-check\"\r\n            [id]=\"'booking-' + i\"\r\n            name=\"booking\"\r\n            (change)=\"onBookingChange(booking.id!)\"\r\n          />\r\n          <label\r\n            class=\"btn btn-sm w-100 clearfix\"\r\n            [for]=\"'booking-' + i\"\r\n            [ngClass]=\"{\r\n              'btn-dark text-white': booking.id == selectedBookingId,\r\n              'btn-info': booking.id != selectedBookingId\r\n            }\"\r\n          >\r\n            <span class=\"d-inline-block float-start\">{{\r\n              \"Booking \" + (i + 1)\r\n            }}</span>\r\n            <span class=\"d-inline-block float-end\">{{ booking.bookedOn }}</span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-10 px-2\">\r\n        <div class=\"row g-0 m-3 p-2 shadow-sm border\">\r\n          <div\r\n            class=\"\r\n              col-4\r\n              mx-auto\r\n              text-center\r\n              px-1\r\n              position-relative\r\n              overflow-hidden\r\n            \"\r\n          >\r\n            <img\r\n              [src]=\"movieImage$ | async\"\r\n              [alt]=\"movieName$ | async\"\r\n              height=\"400\"\r\n              width=\"300\"\r\n            />\r\n            <div\r\n              class=\"\r\n                movie-name\r\n                position-absolute\r\n                w-100\r\n                py-2\r\n                fs-5\r\n                bg-dark\r\n                text-white\r\n                start-0\r\n                bottom-0\r\n              \"\r\n            >\r\n              {{ movieName$ | async | uppercase }}\r\n            </div>\r\n          </div>\r\n          <div class=\"col-8 px-2 details h-100 my-auto\">\r\n            <table class=\"table ms-3\">\r\n              <thead>\r\n                <tr>\r\n                  <th\r\n                    scope=\"col\"\r\n                    colspan=\"2\"\r\n                    class=\"text-center fs-4 text-capitalize\"\r\n                  >\r\n                    {{ auditoriumName$ | async }}\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\">Movie Language</th>\r\n                  <td>\r\n                    <h1 class=\"m-0 d-inline-block\">\r\n                      {{ movieLanguage$ | async }}\r\n                    </h1>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Total seats</th>\r\n                  <td>\r\n                    <h1 class=\"m-0 d-inline-block\">\r\n                      {{ noOfTickets$ | async }}\r\n                    </h1>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Seat No.</th>\r\n                  <td>\r\n                    <h1 class=\"m-0 d-inline-block\">\r\n                      {{ (selectedSeats$ | async)?.join(\", \") }}\r\n                    </h1>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Price</th>\r\n                  <td>\r\n                    <h1 class=\"m-0 d-inline-block\">\r\n                      {{ amount$ | async | currency: \"INR\" }}\r\n                    </h1>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Date</th>\r\n                  <td>\r\n                    <h1 class=\"m-0 d-inline-block\">\r\n                      {{ dateOfBooking$ | async | date: \"mediumDate\" }}\r\n                    </h1>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Time</th>\r\n                  <td>\r\n                    <h1 class=\"m-0 d-inline-block\">\r\n                      {{ formatTime((showTiming$ | async)!) }}\r\n                    </h1>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\">Status</th>\r\n                  <td>\r\n                    <span class=\"text-muted text-success\">Confirmed</span>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { UserService } from '../user/user.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private _injector: Injector, private _router: Router) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const userService = this._injector.get(UserService);\n    const token = userService.getToken()!;\n\n    if (req.headers.get('skip') && token) {\n      req.headers.delete('skip');\n      req = this.setToken(req, token);\n    }\n    else if (!req.headers.get(\"skip\")) {\n      req = this.setToken(req, token);\n    }\n    // return next.handle(req);\n\n    return next.handle(req).pipe(catchError(err => {\n      const error = err! || err.error?.message! || err.statusText!;\n      if (error == 'Invalid Token') {\n        console.warn(error);\n        userService.removeToken();\n        this._router.navigate(['/user/login'], { queryParams: { 'error': `${error}` } });\n      }\n      return throwError(error);\n    }));\n  }\n\n\n  private setToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\n\n    if (!token)\n      this._router.navigate(['/user/login'], { queryParams: { 'login': true } });\n\n    return req.clone({\n      setHeaders: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  }\n\n\n\n  // return next.handle(req).pipe(catchError(err => {\n  //   if (err.status >= 400 && err.status <= 499) {\n  //     console.error(err.err.message)\n  //     this._router.navigate(['/user/login'], { queryParams: { 'error': `${err.err.messag}` } });\n  //   }\n  //   const error = err.error.message || err.statusText;\n  //   return throwError(error);\n  // }));\n\n  // return next.handle(req).do((event: HttpEvent<any>) => {\n  //   if (event instanceof HttpResponse) {\n  //   }\n  // }, (err: any) => {\n  //   if (err instanceof HttpErrorResponse) {\n  //     if (err.status === 401) {\n  //         this.router.navigate(['login']);\n  //     }\n  //   }\n  // });\n\n  // return next.handle(req).pipe(catchError(error => {\n  //   if (error! instanceof HttpErrorResponse && error?.status! === 401) {\n  //     this._router.navigate(['/user/login'], { queryParams: { 'wrong': true } })\n  //   } else {\n  //     return throwError(error);\n  //   }\n  // }));\n\n\n\n  // if (!req.headers.get(\"skip\")) {\n\n  //   const tokenizedReq = req.clone({\n  //     setHeaders: {\n  //       Authorization: `Bearer ${token}`\n  //     }\n  //   })\n  //   return next.handle(tokenizedReq);\n  // }\n  // else {\n  //   req.headers.delete('skip');\n  //   return next.handle(req);\n  // }\n  // private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\n  //   if (!this.isRefreshing) {\n  //     this.isRefreshing = true;\n  //     this.refreshTokenSubject.next(null);\n\n  //     return this.authService.refreshToken().pipe(\n  //       switchMap((token: any) => {\n  //         this.isRefreshing = false;\n  //         this.refreshTokenSubject.next(token.jwt);\n  //         return next.handle(this.setToken(request, token.jwt));\n  //       }));\n\n  //   } else {\n  //     return this.refreshTokenSubject.pipe(\n  //       filter(token => token != null),\n  //       take(1),\n  //       switchMap(jwt => {\n  //         return next.handle(this.setToken(request, jwt));\n  //       }));\n  //   }\n  // }\n}\n","import { Component } from '@angular/core';\nimport { GlobalConstants } from './commons/global-constants';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string = GlobalConstants.APP_NAME;\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { Util } from 'src/app/classes/util/util';\nimport { TempScreen, TempSelectMembers } from 'src/app/interfaces/application';\nimport { ApplicationService } from 'src/app/services/application/application.service';\nimport { GlobalService } from 'src/app/services/global/global.service';\n\n@Component({\n  selector: 'app-screen',\n  templateUrl: './screen.component.html',\n  styleUrls: ['./screen.component.css']\n})\nexport class ScreenComponent implements OnInit {\n\n  tempSeatColumns: string[] = [\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'\n  ];\n\n  tempSeatRows = [...Array(11).keys()].filter(num => num > 0);\n\n  goldPrice$ = new BehaviorSubject<number>(0);\n\n  silverPrice$ = new BehaviorSubject<number>(0);\n\n  generalPrice$ = new BehaviorSubject<number>(0);\n\n  auditoriumName$ = new BehaviorSubject<string>('');\n\n  // selectedDate$ = new BehaviorSubject<Date>(new Date());\n\n  // showTiming$ = new BehaviorSubject<string>('');\n\n  // selectedMovieName$ = new BehaviorSubject<string>('');\n\n  // selectedMovieLanguage$ = new BehaviorSubject<string>('');\n\n  seatsToBeSelected!: number;\n\n  // alreadySelectedSeats: string[] = [];\n\n  avalibleSeats!: number;\n\n  nowSelectedSeats: Set<string> = new Set();\n\n  totalAmount: number = 0;\n\n  selectMembers!: TempSelectMembers;\n\n  gold = 0;\n  silver = 0;\n  general = 0;\n\n  constructor(private _service: GlobalService,\n    private _router: Router,\n    private _appService: ApplicationService) { }\n\n  ngOnInit(): void {\n\n    this.selectMembers = this._service.getTempSelectMembers();\n\n    if (!this.selectMembers)\n      this._router.navigate(['/home'], { queryParams: { 'booking': 'false' } });\n    // this.selectedDate$.next(data.date);\n    // this.showTiming$.next(data.showTime);\n    // this.selectedMovieName$.next(data.movieName);\n    // this.selectedMovieLanguage$.next(data.movieLanguage);\n    this.seatsToBeSelected = this.selectMembers.seats;\n    // this.avalibleSeats = 100 - data.bookedSeats;\n    // this.alreadySelectedSeats = data.bookedSeatNumbers;\n\n    this._appService.getMovieShow(this.selectMembers.movieShowId).subscribe(m_show => {\n      this.goldPrice$.next(m_show.price?.gold!);\n      this.silverPrice$.next(m_show.price?.silver!);\n      this.generalPrice$.next(m_show.price?.general!);\n    })\n  }\n\n  addSeat(event: any): boolean {\n    const value: string = event.target.value;\n    if (this.selectMembers.bookedSeatNumbers.indexOf(value) >= 0)\n      return false;\n    const seats = this.nowSelectedSeats;\n    if (seats.has(value) && seats.delete(value)) {\n      if (value.startsWith('J') || value.startsWith('I') || value.startsWith('H'))\n        this.totalAmount -= this.goldPrice$.value;\n      else if (value.startsWith('A') || value.startsWith('B') || value.startsWith('C'))\n        this.totalAmount -= this.generalPrice$.value;\n      else\n        this.totalAmount -= this.silverPrice$.value;\n      this.seatsToBeSelected++;\n      return false;\n    }\n    else {\n      if (this.seatsToBeSelected == 0)\n        return false;\n      seats.add(value);\n      if (value.startsWith('J') || value.startsWith('I') || value.startsWith('H'))\n        this.totalAmount += this.goldPrice$.value;\n      else if (value.startsWith('A') || value.startsWith('B') || value.startsWith('C'))\n        this.totalAmount += this.generalPrice$.value;\n      else\n        this.totalAmount += this.silverPrice$.value;\n      this.seatsToBeSelected--;\n      return true;\n    }\n  }\n\n  isAdded(value: string): boolean {\n    return this.nowSelectedSeats.has(value) ? true : false;\n  }\n\n  isSeatAlreadySelected(value: string): boolean {\n    return this.selectMembers.bookedSeatNumbers.indexOf(value) >= 0 ? true : false;\n  }\n\n  getSelectedSeats(): string {\n    return [...this.nowSelectedSeats].join(', ');\n  }\n\n  formatTime(time: string): string {\n    return Util.formatTimeToAmOrPm(time);\n  }\n\n  onProceed(): void {\n\n    const tempScreen: TempScreen = {\n      amount: this.totalAmount,\n      selectedSeatNumbers: [...this.nowSelectedSeats],\n      selectedSeats: this.selectMembers.seats,\n    }\n    this._service.setTempScreen(tempScreen);\n    this._router.navigate(['./payment']);\n  }\n}\n","<div class=\"screen-container w-100 py-3 bg-dark text-white\">\n  <span class=\"d-inline-block text-warning mx-auto text-center py-2 w-100\"\n    >NOTE: do not refresh the page</span\n  >\n  <div class=\"my-auto row g-0 align-content-center\">\n    <div class=\"ticket-details mb-3 row g-0 justify-content-between\">\n      <div class=\"col-4 text-center\">\n        Movie: &nbsp;\n        <span class=\"lead text-white\">{{\n          selectMembers.movieName | uppercase\n        }}</span>\n      </div>\n\n      <div class=\"col-4 text-center\">\n        Time: &nbsp;\n        <span class=\"lead\">{{ formatTime(selectMembers.showTime) }}</span>\n      </div>\n\n      <div class=\"col-4 text-center\">\n        Date: &nbsp;\n        <span class=\"lead\">{{ selectMembers.date | date: \"fullDate\" }}</span>\n      </div>\n    </div>\n\n    <div class=\"ticket-details mb-3 row g-0 justify-content-between\">\n      <div class=\"col-4 text-center\">\n        Seats Selected: &nbsp;\n        <span class=\"lead text-danger\">{{ getSelectedSeats() }}</span>\n      </div>\n\n      <div class=\"col-4 text-center\">\n        Amount: &nbsp;\n        <span class=\"lead\">{{ totalAmount }}</span>\n      </div>\n\n      <div class=\"col-4 text-center\">\n        <button\n          mat-raised-button\n          type=\"submit\"\n          [disabled]=\"seatsToBeSelected != 0\"\n          (click)=\"onProceed()\"\n        >\n          Proceed\n        </button>\n      </div>\n    </div>\n\n    <!-- <div class=\"row g-0 text-center\">\n      <div class=\"col-4 text-center\">\n        <mat-icon\n          class=\"fs-sm-5 fs-lg-3 w-auto h-auto text-danger\"\n          aria-hidden=\"false\"\n          aria-label=\"Example home icon\"\n          >chair\n        </mat-icon>\n        - <span class=\"text-white\">Booked</span>\n      </div>\n      <div class=\"col-4 text-center\">\n        <mat-icon\n          class=\"fs-sm-5 fs-lg-3 w-auto h-auto text-white\"\n          aria-hidden=\"false\"\n          aria-label=\"Example home icon\"\n          >chair\n        </mat-icon>\n        - <span class=\"text-white\">Avaliable</span>\n      </div>\n      <div class=\"col-4 text-center\">\n        <mat-icon\n          class=\"fs-sm-5 fs-lg-3 w-auto h-auto text-info\"\n          aria-hidden=\"false\"\n          aria-label=\"Example home icon\"\n          >chair\n        </mat-icon>\n        - <span class=\"text-white\">Your Selection</span>\n      </div>\n    </div> -->\n\n    <div\n      class=\"screen-layout position-relative w-100 bg-dark text-white p-sm-0\"\n    >\n      <mat-card class=\"bg-dark text-white text-center\">\n        <mat-list class=\"bg-dark text-white\">\n          <ng-container\n            *ngFor=\"let item of tempSeatColumns.reverse(); index as i\"\n          >\n            <h3 class=\"text-danger m-1\" *ngIf=\"i == 7\">\n              <!-- EXECUTIVE &#8377;200.00 -->\n              EXECUTIVE {{ generalPrice$ | async | currency: \"INR\" }}\n            </h3>\n            <h3 class=\"text-danger m-1\" *ngIf=\"i == 3\">\n              SILVER {{ silverPrice$ | async | currency: \"INR\" }}\n            </h3>\n            <h3 class=\"text-danger m-1\" *ngIf=\"i == 0\">\n              GOLD {{ goldPrice$ | async | currency: \"INR\" }}\n            </h3>\n            <mat-list-item class=\"justify-content-center py-1 h-auto px-sm-0\">\n              <!-- <div class=\"col-1 text-info fs-3 px-sm-0\">{{ item }}</div> -->\n              <div\n                class=\"\n                  row\n                  col-12\n                  g-0\n                  mx-auto\n                  justify-content-center\n                  px-sm-0\n                  text-center\n                \"\n              >\n                <div class=\"col-1 text-center text-info fs-3\">\n                  {{ item }}\n                </div>\n                <div class=\"col-auto\">\n                  <ng-container *ngFor=\"let seat of tempSeatRows; index as i\">\n                    <div\n                      class=\"me-sm-1 mx-lg-4 d-inline\"\n                      *ngIf=\"i == 3 || i == 7\"\n                    ></div>\n                    <input\n                      type=\"checkbox\"\n                      class=\"btn-check\"\n                      name=\"{{ item + seat }}\"\n                      [checked]=\"isAdded(item + seat)\"\n                      [disabled]=\"isSeatAlreadySelected(item + seat)\"\n                      [id]=\"item + seat\"\n                      [value]=\"item + seat\"\n                      (click)=\"addSeat($event)\"\n                    />\n                    <label\n                      [for]=\"item + seat\"\n                      class=\"\n                        col-auto\n                        p-sm-0\n                        me-sm-1\n                        ms-sm-0\n                        mx-lg-2\n                        pe-cursor\n                        h-auto\n                      \"\n                      [ngClass]=\"{\n                        'text-white': !isAdded(item + seat),\n                        'text-info': isAdded(item + seat),\n                        'text-danger': isSeatAlreadySelected(item + seat)\n                      }\"\n                    >\n                      <mat-icon\n                        class=\"fs-sm-5 fs-lg-3 w-auto h-auto\"\n                        aria-hidden=\"false\"\n                        aria-label=\"Example home icon\"\n                        >chair\n                      </mat-icon>\n                    </label>\n                  </ng-container>\n                </div>\n              </div>\n            </mat-list-item>\n          </ng-container>\n        </mat-list>\n      </mat-card>\n    </div>\n\n    <div\n      class=\"\n        screen\n        col-10\n        mx-auto\n        py-3\n        text-white\n        bg-danger\n        text-center\n        mt-sm-1 mt-lg-4\n      \"\n    >\n      Screen is this way\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { GlobalService } from 'src/app/services/global/global.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  showAlert$ = new BehaviorSubject<boolean>(false);\n\n  alertDanger$ = new BehaviorSubject<boolean>(false);\n\n  alertMessage$ = new BehaviorSubject<string>('');\n\n  hidePassword: boolean = true;\n\n  loginForm!: FormGroup;\n\n  redirect!: string;\n\n  constructor(private _fb: FormBuilder,\n    private _authService: AuthService,\n    private _userService: UserService,\n    private _router: Router,\n    private _activeRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.redirect = window.history.state?.redirect!;\n\n    // console.log(this._globalService.isLoggedIn());\n\n    if (this._userService.isLoggedIn())\n      this._router.navigate(['/home'], { queryParams: { 'logged-in': true } });\n\n    this._activeRoute.queryParams\n      .subscribe(param => {\n        if (param['sign-up']) {\n          this.showAlert$.next(true);\n          this.alertDanger$.next(false);\n          this.alertMessage$.next('Registration successful. Please login');\n        }\n        else if (param['logout']) {\n          this.showAlert$.next(true);\n          this.alertDanger$.next(false);\n          this.alertMessage$.next('Logout successful.');\n        }\n        else if (param['booking']) {\n          this.showAlert$.next(true);\n          this.alertDanger$.next(true);\n          this.alertMessage$.next('Please Login to book tickets.');\n        }\n        else if (param['wrong']) {\n          this.showAlert$.next(true);\n          this.alertDanger$.next(true);\n          this.alertMessage$.next('Something went wrong please login.');\n        }\n        else if (param['error']) {\n          this.showAlert$.next(true);\n          this.alertDanger$.next(true);\n          this.alertMessage$.next(param['error']);\n        }\n        else if (param['login']) {\n          this.showAlert$.next(true);\n          this.alertDanger$.next(true);\n          this.alertMessage$.next(param['error']);\n        }\n      });\n\n    this.loginForm = this._fb.group({\n      username: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      password: new FormControl('', [Validators.required, Validators.minLength(4)])\n    })\n  }\n\n  get usernameErrors(): String {\n    const username = this.loginForm.get('username');\n    if (username?.hasError('required'))\n      return 'Username cannot be empty';\n    else if (username?.hasError('minlength'))\n      return `Username should at-least be ${username?.errors?.minlength.requiredLength} characters`;\n    return '';\n  }\n\n  get passwordErrors(): String {\n    const password = this.loginForm.get('password');\n    if (password?.hasError('required'))\n      return 'Password cannot be empty';\n    else if (password?.hasError('minlength'))\n      return `Password should at-least be ${password?.errors?.minlength.requiredLength} characters`\n    return '';\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid)\n      this._authService.loginUser(this.loginForm.value)\n        .subscribe(\n          res => {\n            if (res.token)\n              if (this._userService.setToken(res.token))\n                this._router.navigate([this.redirect ? this.redirect : '/home'], { queryParams: { 'login': true } });\n              else\n                this._router.navigate(['/home'], { queryParams: { 'logged-in': true } });\n          },\n          err => {\n            this.alertMessage$.next(err!);\n            console.warn(err);\n            this.showAlert$.next(true);\n            this.alertDanger$.next(true);\n          }\n        );\n  }\n\n}\n","<main class=\"px-3 my-auto\">\n  <p\n    class=\"lead mb-2 p-2 rounded\"\n    [ngClass]=\"(alertDanger$ | async) ? 'alert-danger' : 'alert-success'\"\n    *ngIf=\"showAlert$ | async\"\n  >\n    {{ alertMessage$ | async }}\n  </p>\n  <h1 class=\"fs-2 py-4\">Login Page</h1>\n\n  <div class=\"example-container\">\n    <form\n      action=\"#\"\n      class=\"row w-100 g-0\"\n      [formGroup]=\"loginForm\"\n      (ngSubmit)=\"onSubmit()\"\n    >\n      <div class=\"col-12 mb-3\">\n        <mat-form-field appearance=\"outline\" class=\"text-white d-block\">\n          <mat-label>Enter your username</mat-label>\n          <input matInput type=\"text\" formControlName=\"username\" class=\"fs-5\" />\n          <mat-error *ngIf=\"usernameErrors\">{{ usernameErrors }}</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-12 mb-3\">\n        <mat-form-field appearance=\"outline\" class=\"text-white d-block\">\n          <mat-label>Enter your password</mat-label>\n          <input\n            matInput\n            [type]=\"hidePassword ? 'password' : 'text'\"\n            formControlName=\"password\"\n            class=\"fs-5\"\n          />\n          <mat-error *ngIf=\"passwordErrors\">{{ passwordErrors }}</mat-error>\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hidePassword = !hidePassword\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hidePassword\"\n          >\n            <mat-icon>{{\n              hidePassword ? \"visibility_off\" : \"visibility\"\n            }}</mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n\n      <button\n        mat-raised-button\n        class=\"col-12\"\n        type=\"submit\"\n        [color]=\"!loginForm.valid ? 'accent' : 'primary'\"\n      >\n        Login\n      </button>\n    </form>\n  </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserValidator } from 'src/app/classes/validators/user-validator';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  showAlert$ = new BehaviorSubject<boolean>(false);\n\n  alertDanger$ = new BehaviorSubject<boolean>(false);\n\n  alertMessage$ = new BehaviorSubject<string>('');\n\n  hidePassword: boolean = true;\n\n  registerForm!: FormGroup;\n\n  genders: any[] = [\n    { name: 'Male', selected: true },\n    { name: 'Female', selected: false }\n  ]\n\n  constructor(private _fb: FormBuilder,\n    private _router: Router,\n    private _auth: AuthService,\n    private _validator: UserValidator,\n    private _userService: UserService) { }\n\n  ngOnInit(): void {\n\n    if (this._userService.isLoggedIn())\n      this._router.navigate(['/home'], { queryParams: { 'logged-in': true } });\n\n    this.registerForm = this._fb.group({\n      name: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20),\n        Validators.pattern('^[a-zA-Z ]+$')\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20),\n        Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")\n      ], this._validator.uniqueEmail),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(50),\n        // Validators.pattern('^(?!.* )(?=.*\\d)(?=.*[A-Z]).{8,15}$')\n      ]),\n      mobile: new FormControl('', [\n        Validators.required,\n        Validators.minLength(10),\n        Validators.maxLength(10),\n        Validators.pattern('^[0-9]{10}$')\n      ], this._validator.uniqueMobile),\n      gender: new FormControl('Male', [\n        Validators.required,\n        Validators.minLength(4),\n        Validators.maxLength(20)\n      ]),\n      terms: new FormControl(true, Validators.requiredTrue)\n    })\n  }\n\n  get nameErrors(): string {\n    const name = this.registerForm.get('name');\n    if (name?.hasError('required'))\n      return 'Name cannot be empty';\n    else if (name?.hasError('minlength'))\n      return `Name should at-least be ${name?.errors?.minlength.requiredLength} characters`;\n    else if (name?.hasError('maxlength'))\n      return `Name should not exceed ${name?.errors?.minlength.requiredLength} characters`;\n    else if (name?.hasError('pattern'))\n      return 'Invalid Name';\n    return '';\n  }\n\n  get emailErrors(): string {\n    const email = this.registerForm.get('email');\n    if (email?.hasError('required'))\n      return 'Email cannot be empty';\n    else if (email?.hasError('minlength'))\n      return `Email should at-least be ${email?.errors?.minlength.requiredLength} characters`;\n    else if (email?.hasError('maxlength'))\n      return `Email should not exceed ${email?.errors?.minlength.requiredLength} characters`;\n    else if (email?.hasError('email'))\n      return 'Invalid Email';\n    else if (email?.hasError('unique'))\n      return 'Email already exists';\n    return '';\n  }\n\n  get passwordErrors(): string {\n    const password = this.registerForm.get('password');\n    if (password?.hasError('required'))\n      return 'Password cannot be empty';\n    else if (password?.hasError('minlength'))\n      return `Password should at-least be ${password?.errors?.minlength.requiredLength} characters`;\n    else if (password?.hasError('maxlength'))\n      return `Password should not exceed ${password?.errors?.minlength.requiredLength} characters`;\n    return '';\n  }\n\n  get mobileErrors(): string {\n    const mobile = this.registerForm.get('mobile');\n    if (mobile?.hasError('required'))\n      return 'Mobile cannot be empty';\n    else if (mobile?.hasError('minlength'))\n      return `Mobile should at-least be ${mobile?.errors?.minlength?.requiredLength} characters`;\n    else if (mobile?.hasError('maxlength'))\n      return `Mobile should not exceed ${mobile?.errors?.maxlength?.requiredLength} characters`;\n    else if (mobile?.hasError('pattern'))\n      return `Invalid mobile number`;\n    else if (mobile?.hasError('unique'))\n      return 'Mobile already exists';\n    return '';\n  }\n\n  get termsErrors(): string {\n    const terms = this.registerForm.get('terms');\n    if (terms?.hasError('required') && this.registerForm.touched)\n      return 'Please accept terms and conditions';\n    return '';\n  }\n\n  get email(): AbstractControl {\n    return this.registerForm.get('email')!;\n  }\n\n  get mobile(): AbstractControl {\n    return this.registerForm.get('mobile')!;\n  }\n\n  onSubmit(): void {\n\n    const sub = this._auth.registerUser(this.registerForm.value)\n      .subscribe(\n        res => this._router.navigate(['/user/login'], { queryParams: { 'sign-up': true } }),\n        err => {\n          this.showAlert$.next(true);\n          this.alertDanger$.next(true);\n          this.alertMessage$.next('Something went wrong');\n        }\n      );\n  }\n\n}\n","<main class=\"px-3 my-auto\">\n  <p\n    class=\"lead mb-2 p-2 rounded\"\n    [ngClass]=\"(alertDanger$ | async) ? 'alert-danger' : 'alert-success'\"\n    *ngIf=\"showAlert$ | async\"\n  >\n    {{ alertMessage$ | async }}\n  </p>\n  <h1 class=\"fs-2 py-4\">Register Here</h1>\n\n  <div class=\"example-container\">\n    <form\n      class=\"row w-100 g-0\"\n      [formGroup]=\"registerForm\"\n      (ngSubmit)=\"onSubmit()\"\n    >\n      <!-- Email Field -->\n      <div class=\"col-12 mb-2 px-lg-1\">\n        <mat-form-field appearance=\"outline\" class=\"d-block text-white\">\n          <mat-label>Enter your Email</mat-label>\n          <input matInput type=\"email\" formControlName=\"email\" class=\"fs-5\" />\n          <mat-hint *ngIf=\"email.pending\" class=\"text-warning\"\n            >Checking For uniqueness...</mat-hint\n          >\n          <mat-error *ngIf=\"emailErrors\">{{ emailErrors }}</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-sm-12 col-md-12 col-lg-6 mb-2 px-lg-1\">\n        <mat-form-field appearance=\"outline\" class=\"d-block text-white\">\n          <mat-label>Enter your name</mat-label>\n          <input matInput type=\"text\" formControlName=\"name\" class=\"fs-5\" />\n          <mat-error *ngIf=\"nameErrors\">{{ nameErrors }}</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-sm-12 col-md-12 col-lg-6 mb-2 px-lg-1\">\n        <mat-form-field appearance=\"outline\" class=\"d-block text-white\">\n          <mat-label>Enter your Mobile</mat-label>\n          <span matPrefix>+91 &nbsp;</span>\n          <input\n            matInput\n            type=\"text\"\n            formControlName=\"mobile\"\n            class=\"fs-5\"\n          /><mat-hint *ngIf=\"mobile.pending\" class=\"text-warning\"\n            >Checking For uniqueness...</mat-hint\n          >\n          <mat-error *ngIf=\"mobileErrors\">{{ mobileErrors }}</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-sm-12 col-md-12 col-lg-6 mb-2 px-lg-1\">\n        <mat-form-field appearance=\"outline\" class=\"d-block text-white\">\n          <mat-label>Enter your password</mat-label>\n          <input\n            matInput\n            [type]=\"hidePassword ? 'password' : 'text'\"\n            formControlName=\"password\"\n            class=\"fs-5\"\n          />\n          <mat-error *ngIf=\"passwordErrors\">{{ passwordErrors }}</mat-error>\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hidePassword = !hidePassword\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hidePassword\"\n          >\n            <mat-icon>{{\n              hidePassword ? \"visibility_off\" : \"visibility\"\n            }}</mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-sm-12 col-md-12 col-lg-6 mb-2 px-lg-1\">\n        <mat-form-field appearance=\"outline\" class=\"d-block text-white\">\n          <mat-label>Select Gender</mat-label>\n          <mat-select formControlName=\"gender\" class=\"text-white fs-5\">\n            <mat-option *ngFor=\"let sex of genders\" [value]=\"sex.name\">\n              {{ sex.name }}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"passwordErrors\">{{ passwordErrors }}</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-lg-12 col-md-12 mb-2\">\n        <mat-checkbox class=\"example-margin\" formControlName=\"terms\"\n          >Agree to terms & conditions</mat-checkbox\n        >\n        <mat-error *ngIf=\"termsErrors\">{{ termsErrors }}</mat-error>\n      </div>\n\n      <button\n        mat-raised-button\n        [color]=\"!registerForm.valid ? 'accent' : 'primary'\"\n        class=\"col-12\"\n        type=\"submit\"\n      >\n        Register\n      </button>\n    </form>\n  </div>\n</main>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { MovieComponent } from './components/movie/movie.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { GlobalConstants } from './commons/global-constants';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginLayoutComponent } from './components/login-layout/login-layout.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\nimport { ContactUsComponent } from './components/contact-us/contact-us.component';\nimport { AuditoriumFormComponent } from './components/auditorium-form/auditorium-form.component';\nimport { MovieFormComponent } from './components/movie-form/movie-form.component';\nimport { ManageComponent } from './components/manage/manage.component';\nimport { MoviesComponent } from './components/movies/movies.component';\nimport { ScreenComponent } from './components/templates/screen/screen.component';\nimport { ShowFormComponent } from './components/templates/show-form/show-form.component';\nimport { SelectMembersComponent } from './components/templates/select-members/select-members.component';\nimport { PaymentFormComponent } from './components/templates/payment-form/payment-form.component';\nimport { AddMovieToShowFormComponent } from './components/templates/add-movie-to-show-form/add-movie-to-show-form.component';\nimport { MyBookingsComponent } from './components/my-bookings/my-bookings.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { AuthService } from './services/auth/auth.service';\nimport { GlobalService } from './services/global/global.service';\nimport { TokenInterceptorService } from './services/token-interceptor/token-interceptor.service';\nimport { UserService } from './services/user/user.service';\n\nimport { SearchPipe } from './pipes/search.pipe';\n\nimport { AuthGuard } from './guards/auth/auth.guard';\nimport { AdminGuard } from './guards/admin/admin.guard';\n\nconst materialModules: any[] = [\n  MatButtonModule,\n  MatCardModule,\n  MatIconModule,\n  MatMenuModule,\n  MatExpansionModule,\n  MatInputModule,\n  MatToolbarModule,\n  MatCheckboxModule,\n  MatDividerModule,\n  MatListModule,\n  MatFormFieldModule,\n  MatSelectModule,\n  MatBottomSheetModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatDialogModule,\n  MatChipsModule,\n  MatAutocompleteModule\n]\n\nconst templates: any[] = [\n  SelectMembersComponent,\n  ShowFormComponent,\n  ScreenComponent,\n  PaymentFormComponent,\n  AddMovieToShowFormComponent\n]\n\nconst components: any[] = [\n  AppComponent,\n  HeaderComponent,\n  FooterComponent,\n  HomePageComponent,\n  MovieComponent,\n  LoginComponent,\n  LayoutComponent,\n  RegisterComponent,\n  LoginLayoutComponent,\n  ForgotPasswordComponent,\n  AboutUsComponent,\n  ContactUsComponent,\n  AuditoriumFormComponent,\n  MovieFormComponent,\n  ManageComponent,\n  MoviesComponent,\n  MyBookingsComponent,\n  ProfileComponent,\n  templates\n]\n\nconst angularModules: any[] = [\n  BrowserModule,\n  AppRoutingModule,\n  BrowserAnimationsModule,\n  FormsModule,\n  ReactiveFormsModule,\n  HttpClientModule,\n  CommonModule\n]\n\nconst services: any[] = [\n  AuthService,\n  GlobalService,\n  UserService\n]\n\nconst providers: any[] = [\n  GlobalConstants,\n  AuthGuard,\n  AdminGuard,\n  services\n];\n\n@NgModule({\n  declarations: [components, SearchPipe],\n  imports: [angularModules, materialModules, BrowserAnimationsModule],\n  providers: [providers, { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptorService, multi: true }],\n  bootstrap: [AppComponent],\n  entryComponents: [templates]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { Util } from 'src/app/classes/util/util';\nimport { Movie } from 'src/app/interfaces/application';\nimport { AlertService } from 'src/app/services/alert/alert.service';\nimport { ApplicationService } from 'src/app/services/application/application.service';\nimport { GlobalService } from 'src/app/services/global/global.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  movies!: Movie[];\n\n  carousel = new BehaviorSubject<Movie[]>(this.movies);\n  carousel$ = this.carousel.asObservable();\n\n  nowPlaying = new BehaviorSubject<Movie[]>(this.movies);\n  nowPlaying$ = this.nowPlaying.asObservable();\n\n  upComing = new BehaviorSubject<Movie[]>(this.movies);\n  upComing$ = this.upComing.asObservable();\n\n  constructor(private _appService: ApplicationService,\n    private _activeRoute: ActivatedRoute,\n    private _alertService: AlertService,\n    private _userService: UserService) { }\n\n\n  ngOnInit(): void {\n\n    this._activeRoute.queryParams\n      .subscribe(param => {\n        if (param.login)\n          this._alertService.postionAlert('Login Success');\n        else if (param['logged-in'])\n          this._alertService.postionAlert('You are already logged in', 'OK', 'danger-alert');\n        else if (param['un-authorized'])\n          this._alertService.postionAlert('You are Un-Authorized', 'OK', 'danger-alert');\n        else if (param['payment'] == 'false')\n          this._alertService.postionAlert('Payment failed', 'OK', 'danger-alert');\n        else if (param['booking'] == 'false')\n          this._alertService.postionAlert('Booking failed', 'OK', 'danger-alert');\n      });\n\n    console.log(this._userService.getUser()!);\n\n    this._appService.getFewNowPlayingMovies().subscribe(movies => this.nowPlaying.next(movies));\n\n    this._appService.getFewUpComingMovies().subscribe(movies => this.upComing.next(movies));\n\n    this._appService.getAllNowPlayingAndUpComingMovies().subscribe(movies => this.carousel.next(movies));\n  }\n\n  formatRelease(release: any): string {\n    if (new Date(release) > new Date())\n      return 'Releasing on ' + Util.formatDate(release);\n    return 'Now Playing';\n  }\n\n\n  // carouselList(): Observable<boolean> {\n  //   return this.carouselBS.pipe(\n  //     map(movies => movies?.length > 0 ? true : false)\n  //   );\n  // }\n\n  // nowPlayingList(): Observable<boolean> {\n  //   return this.nowPlayingBS.pipe(\n  //     map(movies => movies?.length > 0 ? true : false)\n  //   )\n  // }\n\n  // upComingList(): Observable<boolean> {\n  //   return this.upComingBS.pipe(\n  //     map(movies => movies?.length > 0 ? true : false)\n  //   )\n  // }\n\n}\n","<div>\n  <p style=\"margin-top:30px; margin-left: 20px; \"><b>Movie Lists</b></p>\n  <div style=\"margin: 20px;margin-top: 20px; padding: 12px; row-gap: 30px;width: 271px; border-radius: 10px; background-color: rgb(144, 225, 231); border-radius: 10px;\">\n  <img style=\"  width: 245px; height: 340px;\" src=\"https://m.media-amazon.com/images/M/MV5BZmQ5NTBmMDgtZmRlMi00MDNmLTg1MWUtMTU3ZGZiMDQ3NzE0XkEyXkFqcGdeQXVyMTEzNzg0Mjkx._V1_.jpg\">\n  <h6 style=\"margin-top: 10px; width: 230px;\">Arjun, a police officer, sets out on a mission to hunt down a group of violent bikers after they're involved in a theft and murder <a href=\"https://en.wikipedia.org/wiki/Valimai\">more...</a>.</h6> \n  <button class=\"btn btn-primary \">Book Now</button>   <button class=\"btn btn-primary \" style=\"display: inline; margin-left: 20px;\">Watch trailer</button> \n</div>\n<div style=\"display:flexbox;\">\n  <div style=\"margin: 20px; padding: 12px; row-gap: 30px;width: 271px; border-radius: 10px; background-color: rgb(144, 225, 231); border-radius: 10px;\">\n  <img style=\"  width: 245px; height: 340px;\" src=\"https://m.media-amazon.com/images/M/MV5BNGFkMDgzYWUtZTM4Yy00ZWI4LWI4ZWItNDVmZGM5ODJjZjIzXkEyXkFqcGdeQXVyODIwMDI1NjM@._V1_.jpg\">\n  <h6 style=\"margin-top: 10px; width: 230px;\">Arjun, a police officer, sets out on a mission to hunt down a group of violent bikers after they're involved in a theft and murder <a href=\"https://en.wikipedia.org/wiki/Valimai\">more...</a>.</h6> \n  <button class=\"btn btn-primary \">Book Now</button>   <button class=\"btn btn-primary \" style=\"display: inline; margin-left: 20px;\">Watch trailer</button> \n</div>\n<!-- <div style=\"display:flexbox;\">\n  <div style=\"margin: 20px; padding: 12px; row-gap: 30px;width: 271px; border-radius: 10px; background-color: rgb(144, 225, 231); border-radius: 10px;\">\n  <img style=\"  width: 245px; height: 340px;\" src=\"https://m.media-amazon.com/images/M/MV5BZmQ5NTBmMDgtZmRlMi00MDNmLTg1MWUtMTU3ZGZiMDQ3NzE0XkEyXkFqcGdeQXVyMTEzNzg0Mjkx._V1_.jpg\">\n  <h6 style=\"margin-top: 10px; width: 230px;\">Arjun, a police officer, sets out on a mission to hunt down a group of violent bikers after they're involved in a theft and murder <a href=\"https://en.wikipedia.org/wiki/Valimai\">more...</a>.</h6> \n  <button class=\"btn btn-primary \">Book Now</button>   <button class=\"btn btn-primary \" style=\"display: inline; margin-left: 20px;\">Watch trailer</button> \n</div> -->\n<!-- \n<div>\n<img style=\"padding: 20px; row-gap: 30px;\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpkeGar99FQ_vl2ASKCPxtKkh5fSic-8E3fqpvgDrzFOtMghL9g7LofrCdEtpLHQNlR8w&usqp=CAU\">\n</div> -->\n<div>\n  <p style=\"position:fixed; top: 80px; left: 460px; \"><b>Upcomming Hits</b></p>\n<img style=\"position:fixed; top: 120px; left: 460px; width: 750px; height: 500px; border-radius: 10px; \"  src=\"https://i.ytimg.com/vi/lDVQojLPI4Y/maxresdefault.jpg\" alt=\"rrr\">\n</div>\n\n\n<div class=\"container-fluid my-2 pb-5\">\n  <h1\n    class=\"text-center text-warning h-100vh mx-auto\"\n    *ngIf=\"(carousel$ | async)?.length! < 1\"\n  >\n    Movies\n  </h1>\n  <ng-container *ngIf=\"(carousel$ | async)?.length! > 0\">\n    <div id=\"movies-carousel\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n      <div class=\"carousel-indicators\">\n        <button\n          [ngClass]=\"i == 0 ? 'active' : ''\"\n          [attr.aria-current]=\"i == 0 ? true : false\"\n          *ngFor=\"let movie of carousel$ | async; index as i\"\n          type=\"button\"\n          data-bs-target=\"#movies-carousel\"\n          [attr.data-bs-slide-to]=\"i\"\n          [attr.aria-label]=\"'Slide ' + i\"\n        ></button>\n      </div>\n\n      <div class=\"carousel-inner\">\n        <div\n          class=\"carousel-item\"\n          *ngFor=\"let movie of carousel$ | async; index as i\"\n          [ngClass]=\"i == 0 ? 'active' : ''\"\n        >\n          <img\n            [src]=\"movie.bgImage\"\n            class=\"d-block w-100\"\n            height=\"550\"\n            [alt]=\"movie.name\"\n          />\n          <div class=\"carousel-caption d-none d-md-block\">\n            <h5 class=\"fs-1 mb-3\">{{ movie.name | uppercase }}</h5>\n            <p class=\"lead\">\n              {{\n                (movie.language | titlecase) +\n                  \" | \" +\n                  (movie.genres?.join(\" - \") | titlecase) +\n                  \" | \" +\n                  movie.year\n              }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <button\n        class=\"carousel-control-prev\"\n        type=\"button\"\n        data-bs-target=\"#movies-carousel\"\n        data-bs-slide=\"prev\"\n      >\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n        <span class=\"visually-hidden\">Previous</span>\n      </button>\n      <button\n        class=\"carousel-control-next\"\n        type=\"button\"\n        data-bs-target=\"#movies-carousel\"\n        data-bs-slide=\"next\"\n      >\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span class=\"visually-hidden\">Next</span>\n      </button>\n    </div>\n\n    <section\n      *ngIf=\"(nowPlaying$ | async)?.length! > 0\"\n      class=\"now-showing my-5 bg-dark text-white p-lg-5\"\n    >\n      <div class=\"row g-0 mb-5 justify-content-around\">\n        <h3 class=\"text-uppercase fs-2 col-11\">Now Playing</h3>\n        <a\n          routerLink=\"../movies\"\n          [queryParams]=\"{ show: 'now-playing' }\"\n          class=\"d-block col-1 text-end\"\n          >view all</a\n        >\n      </div>\n      <div class=\"now-showing-movies\">\n        <div class=\"card-group row g-0 justify-content-around\">\n          <div\n            class=\"col-sm-11 col-md-5 col-lg-3 col-xxl-2 px-2 position-relative\"\n            *ngFor=\"let movie of nowPlaying$ | async\"\n          >\n            <div class=\"image-card postion-relative rounded-5 overflow-hidden\">\n              <img\n                [src]=\"movie.image\"\n                class=\"card-img-top\"\n                height=\"400\"\n                width=\"284\"\n                [alt]=\"movie.name\"\n              />\n              <div\n                class=\"\n                  image-release\n                  postion-absolute\n                  bottom-0\n                  start-0\n                  bg-white\n                  text-dark\n                  w-100\n                  text-center\n                  py-2\n                \"\n              >\n                {{ formatRelease(movie.release) }}\n              </div>\n            </div>\n            <div class=\"card-body text-center\">\n              <h2 class=\"card-title fs-4 mb-0\">\n                <a\n                  class=\"stretched-link\"\n                  routerLink=\"../movie/{{ movie.id }}\"\n                  >{{ movie.name | uppercase }}</a\n                >\n              </h2>\n              <h3 class=\"card-text text-muted\">\n                {{ movie.language | titlecase }}\n              </h3>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section\n      *ngIf=\"(upComing$ | async)?.length! > 0\"\n      class=\"up-coming my-5 p-lg-5\"\n    >\n      <div class=\"row g-0 mb-5 justify-content-around\">\n        <h3 class=\"text-uppercase fs-2 col-11\">Up Coming</h3>\n        <a\n          routerLink=\"../movies\"\n          [queryParams]=\"{ show: 'up-coming' }\"\n          class=\"d-block col-1 text-end\"\n          >view all</a\n        >\n      </div>\n      <div class=\"up-coming-movies\">\n        <div class=\"card-group row g-0 justify-content-around\">\n          <div\n            class=\"col-sm-11 col-md-5 col-lg-3 col-xxl-2 px-2 position-relative\"\n            *ngFor=\"let movie of upComing$ | async\"\n          >\n            <div class=\"image-card postion-relative rounded-5 overflow-hidden\">\n              <img\n                [src]=\"movie.image\"\n                class=\"card-img-top\"\n                height=\"400\"\n                width=\"284\"\n                [alt]=\"movie.name\"\n              />\n              <div\n                class=\"\n                  image-release\n                  postion-absolute\n                  bottom-0\n                  start-0\n                  bg-dark\n                  text-white\n                  w-100\n                  text-center\n                  py-2\n                \"\n              >\n                {{ formatRelease(movie.release) }}\n              </div>\n            </div>\n            <div class=\"card-body text-center\">\n              <h2 class=\"card-title fs-4 mb-0\">\n                <a\n                  class=\"stretched-link\"\n                  routerLink=\"../movie/{{ movie.id }}\"\n                  >{{ movie.name | uppercase }}</a\n                >\n              </h2>\n              <h3 class=\"card-text text-muted\">\n                {{ movie.language | titlecase }}\n              </h3>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </ng-container>\n</div>\n","export class Util {\n\n    private static date: string = '15 May 2021';\n\n    static formatTimeToAmOrPm(time: string): string {\n        return new Date(`${Util.date} ${time}`).toLocaleTimeString('en-Us', { hour: '2-digit', minute: '2-digit' });\n    }\n\n    static extractTimeAndConvertToNumber(time: string): number {\n        return new Date(`${Util.date} ${time}`).getTime();\n    }\n\n    static formatDate(date: any): string {\n        return new Date(date).toLocaleDateString(\"en-GB\", {\n            day: \"numeric\",\n            month: \"short\",\n            year: \"numeric\"\n        });\n    }\n\n    static findEndDate(dates: any[]): Date {\n        let tempDate = new Date();\n        if (dates)\n            for (let i = 0; i < dates.length; i++)\n                if (new Date(dates[i]) > tempDate)\n                    tempDate = new Date(dates[i]);\n        return tempDate;\n    }\n\n    static getTomarrow(date: any): Date {\n        const temp = new Date(date);\n        // const day = 60 * 60 * 24 * 1000;\n        // const day = 86400000;\n        // return new Date(temp.getTime() + day);\n        return new Date(temp.getFullYear(), temp.getMonth(), (temp.getDate() + 1));\n\n    }\n\n    static getYestarday(date: any): Date {\n        const day = 86400000;\n        const temp = new Date(date);\n        return new Date(temp.getTime() - day);\n\n    }\n\n    static sortByDates(date1: any, date2: any): number {\n        return new Date(date1).getTime() - new Date(date2).getTime();\n    }\n\n    static numberField(event: any): boolean {\n        // Number(value);\n        // parseInt(value);\n        // parseFloat('364.585');\n        let charCode: number = event.keyCode;\n        return (charCode > 31 && (charCode < 48 || charCode > 57)) ? false : true;\n    }\n\n    static getFormatedtime(date: any): string {\n        return new Date(date).toLocaleTimeString('en-US');\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  // canActivate(\n  //   route: ActivatedRouteSnapshot,\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n  //   return true;\n  // }\n\n  constructor(private _userService: UserService, private _router: Router) { }\n  canActivate(): boolean {\n    if (this._userService.isLoggedIn())\n      return true;\n    else\n      this._router.navigate(['/user/login']);\n    return false;\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { Util } from 'src/app/classes/util/util';\nimport { Movie, MovieShow } from 'src/app/interfaces/application';\nimport { ShowFormComponent } from '../show-form/show-form.component';\n\n@Component({\n  selector: 'app-add-movie-to-show-form',\n  templateUrl: './add-movie-to-show-form.component.html',\n  styleUrls: ['./add-movie-to-show-form.component.css'],\n})\nexport class AddMovieToShowFormComponent implements OnInit {\n\n  filteredMovies: Observable<Movie[]>;\n\n  startDate!: Date;\n\n  endDate!: Date;\n\n  movieShows!: MovieShow[];\n\n  tempEndDate!: Date;\n\n  movies!: Movie[];\n\n  movieShowForm!: FormGroup;\n  movieId = new FormControl('', [\n    Validators.required,\n    uniqueName(this._data.shows),\n  ]);\n\n  range = new FormGroup({\n    start: new FormControl('', Validators.required),\n    end: new FormControl('', Validators.required),\n  });\n\n  constructor(\n    private _fb: FormBuilder,\n    public _dialog: MatDialogRef<ShowFormComponent>,\n    @Inject(MAT_DIALOG_DATA) private _data: { shows: MovieShow[], movies: Movie[] }\n  ) {\n    this._dialog.disableClose = true;\n\n    this.filteredMovies = this.movieId.valueChanges.pipe(\n      startWith(''),\n      map((movie) => (movie ? this._filterMovies(movie) : this.movies.slice()))\n    );\n  }\n\n  ngOnInit(): void {\n    this.movies = this._data.movies;\n    this.movieShows = this._data.shows;\n\n    this.tempEndDate = this.movieShows?.length > 0 ? Util.getTomarrow(Util.findEndDate(this.movieShows.map(m_show => m_show.end))) : new Date();\n\n    this.movieShowForm = this._fb.group({\n      movieId: this.movieId,\n      range: this.range,\n      gold: new FormControl('', [Validators.required, Validators.pattern('^[0-9]{3}$')]),\n      silver: new FormControl('', [Validators.required, Validators.pattern('^[0-9]{3}$')]),\n      general: new FormControl('', [Validators.required, Validators.pattern('^[0-9]{3}$')]),\n    });\n  }\n\n  get movieIdErrors(): string {\n    if (this.movieId.hasError('required'))\n      return 'Please select a movie';\n    else if (this.movieId.hasError('uniqueName'))\n      return 'Movie is already screening on this show. select different move';\n    return '';\n  }\n\n  get startDateErrors(): string {\n    let start = this.range.get('start');\n    if (start?.hasError('required'))\n      return 'Start Date cannot be empty';\n    return '';\n  }\n\n  get endDateErrors(): string {\n    let end = this.range.get('end');\n    if (end?.hasError('required'))\n      return 'End date cannot be empty';\n    return '';\n  }\n\n  get goldPriceErrors(): string {\n    let gold = this.movieShowForm.get('gold');\n    if (gold?.hasError('required'))\n      return 'Gold section price cannot be empty';\n    else if (gold?.hasError('pattern'))\n      return 'Price must be between 100 and 999';\n    return '';\n  }\n\n  get silverPriceErrors(): string {\n    let silver = this.movieShowForm.get('silver');\n    if (silver?.hasError('required'))\n      return 'Silver section price cannot be empty';\n    else if (silver?.hasError('pattern'))\n      return 'Price must be between 100 and 999';\n    return '';\n  }\n\n  get generalPriceErrors(): string {\n    let general = this.movieShowForm.get('general');\n    if (general?.hasError('required'))\n      return 'General section price cannot be empty';\n    else if (general?.hasError('pattern'))\n      return 'Price must be between 100 and 999';\n    return '';\n  }\n\n  private _filterMovies(value: number): Movie[] {\n    return this.movies.filter((movie) => movie.id == value);\n  }\n\n  onMovieChange(event: any): void {\n    const releaseDate: Date = this.movies?.find(movie => movie.id == event.value)?.release!;\n\n    this.startDate = (new Date(this.tempEndDate) > new Date(releaseDate)) ? this.tempEndDate : releaseDate;\n\n    if (!this.startDate)\n      this.startDate = new Date();\n  }\n\n  onCancel(): void {\n    this._dialog.close();\n  }\n\n  onSubmit(): void {\n    const values = this.movieShowForm.value;\n    const data: MovieShow = {\n      movieId: values.movieId,\n      start: values.range.start,\n      end: values.range.end,\n      price: {\n        gold: values.gold,\n        silver: values.silver,\n        general: values.general,\n      },\n    };\n    this._dialog.close({ movieShow: data });\n  }\n}\n\nfunction uniqueName(movieShows: MovieShow[]): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: boolean } | null => {\n    return movieShows ? movieShows.find(mShow => mShow.movieId == control.value)\n      ? { uniqueName: true }\n      : null : null;\n  };\n}\n","<div class=\"wrapper\">\n  <h1 class=\"text-center mb-3 p-2 rounded border border-2 shadow-sm\">\n    Add Movie To Show\n  </h1>\n\n  <form class=\"example-form p-4\" [formGroup]=\"movieShowForm\">\n    <mat-form-field class=\"d-block w-100 text-dark\" appearance=\"outline\">\n      <mat-label>Select Movie</mat-label>\n      <mat-select\n        aria-label=\"State\"\n        [formControl]=\"movieId\"\n        (click)=\"movieId.reset()\"\n        (selectionChange)=\"onMovieChange($event)\"\n      >\n        <mat-option\n          *ngFor=\"let movie of filteredMovies | async\"\n          [value]=\"movie.id\"\n          class=\"h-auto py-1\"\n        >\n          <!-- (onSelectionChange)=\"onMovieChange($event, movie.id)\" -->\n          <img\n            class=\"example-option-img me-2 rounded\"\n            aria-hidden\n            [src]=\"movie.image\"\n            height=\"120\"\n            width=\"120\"\n          />\n          <span class=\"me-1\">{{ movie.name | uppercase }}</span> |\n          <span class=\"me-1\">{{ movie.language | titlecase }}</span> |\n          <small class=\"me-1\"\n            >Release: {{ movie.release | date: \"fullDate\" }}</small\n          >\n          |\n          <small class=\"me-1\"\n            >Added: {{ movie.addedOn | date: \"fullDate\" }}</small\n          >\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"movieIdErrors\">{{ movieIdErrors }}</mat-error>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" class=\"d-block w-100 text-dark\">\n      <mat-label>Enter a date range</mat-label>\n      <mat-date-range-input\n        [formGroup]=\"range\"\n        [rangePicker]=\"picker\"\n        [min]=\"startDate\"\n        [max]=\"endDate\"\n      >\n        <input matStartDate formControlName=\"start\" placeholder=\"Start date\" />\n        <input matEndDate formControlName=\"end\" placeholder=\"End date\" />\n      </mat-date-range-input>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-date-range-picker #picker></mat-date-range-picker>\n      <mat-error class=\"d-inline-block mx-1\" *ngIf=\"startDateErrors\">{{\n        startDateErrors\n      }}</mat-error>\n      <mat-error class=\"d-inline-block mx-1\" *ngIf=\"endDateErrors\">{{\n        endDateErrors\n      }}</mat-error>\n      <!-- <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\"\n        >Invalid start date</mat-error\n      >\n      <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\"\n        >Invalid end date</mat-error\n      > -->\n    </mat-form-field>\n    <fieldset>\n      <legend class=\"lead\">Price details</legend>\n      <div class=\"row g-0 justify-content-around\">\n        <mat-form-field\n          appearance=\"outline\"\n          class=\"d-block col-4 px-1 text-dark\"\n        >\n          <mat-label>Gold Section</mat-label>\n          <input type=\"number\" matInput formControlName=\"gold\" />\n          <mat-error *ngIf=\"goldPriceErrors\">{{ goldPriceErrors }}</mat-error>\n        </mat-form-field>\n        <mat-form-field\n          appearance=\"outline\"\n          class=\"d-block col-4 px-1 text-dark\"\n        >\n          <mat-label>Silver Section</mat-label>\n          <input type=\"number\" matInput formControlName=\"silver\" />\n          <mat-error *ngIf=\"silverPriceErrors\">{{\n            silverPriceErrors\n          }}</mat-error>\n        </mat-form-field>\n        <mat-form-field\n          appearance=\"outline\"\n          class=\"d-block col-4 px-1 text-dark\"\n        >\n          <mat-label>General Section</mat-label>\n          <input type=\"number\" matInput formControlName=\"general\" />\n          <mat-error *ngIf=\"generalPriceErrors\">{{\n            generalPriceErrors\n          }}</mat-error>\n        </mat-form-field>\n      </div>\n    </fieldset>\n  </form>\n  <button mat-raised-button (click)=\"onCancel()\" class=\"me-2\">Cancel</button>\n  <button\n    mat-raised-button\n    (click)=\"onSubmit()\"\n    [disabled]=\"!movieShowForm.valid\"\n    color=\"primary\"\n    class=\"ms-2\"\n  >\n    Submit\n  </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSnackBarVerticalPosition, MatSnackBarHorizontalPosition } from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(private _bar: MatSnackBar) { }\n\n  postionAlert(message: string, action: string = 'OK', alertClass: string = 'success-alert', duration: number = 5000, verticalPosition = 'top', horizontalPosition: string = 'end'): void {\n    this._bar.open(message, action, {\n      duration: 5000,\n      verticalPosition: verticalPosition as MatSnackBarVerticalPosition, // 'top' | 'bottom'\n      horizontalPosition: horizontalPosition as MatSnackBarHorizontalPosition, //'start' | 'center' | 'end' | 'left' | 'right'\n      panelClass: [alertClass],\n    });\n  }\n\n  defaultAlert(message: string, action: string = 'OK', duration: number = 3000): void {\n    this._bar.open(message, action, { duration: duration });\n  }\n\n\n  // if (message)\n  //   this._bar.open(message, 'Home', {\n  //     duration: 3000,\n  //     verticalPosition: 'bottom', // 'top' | 'bottom'\n  //     horizontalPosition: 'end', //'start' | 'center' | 'end' | 'left' | 'right'\n  //     panelClass: ['red-snackbar'],\n  //   }\n  //   ).onAction().subscribe(\n  //     res => this._router.navigate(['./login'])\n  //   );\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  // canActivate(\n  //   route: ActivatedRouteSnapshot,\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n  //   return true;\n  // }\n  constructor(private _userService: UserService,\n    private _router: Router) { }\n\n  canActivate(): boolean {\n    if (this._userService.isAdmin())\n      return true;\n    else\n      this._router.navigate(['/home'], { queryParams: { 'un-authorized': true } });\n    return false;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserValidator } from 'src/app/classes/validators/user-validator';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { UserService } from 'src/app/services/user/user.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  @ViewChild(FormGroupDirective) passwordForm!: FormGroupDirective;\n\n  showAlert$ = new BehaviorSubject<boolean>(false);\n\n  alertDanger$ = new BehaviorSubject<boolean>(false);\n\n  alertMessage$ = new BehaviorSubject<string>('');\n\n  public hidePassword: boolean = true;\n\n  forgotPasswordForm!: FormGroup;\n\n  constructor(private _fb: FormBuilder,\n    private _auth: AuthService,\n    private _validator: UserValidator,\n    private _userService: UserService,\n    private _router: Router) { }\n\n  ngOnInit(): void {\n\n    if (this._userService.isLoggedIn())\n      this._router.navigate(['/home'], { queryParams: { 'logged-in': true } });\n\n    this.forgotPasswordForm = this._fb.group({\n      username: new FormControl('', [Validators.required, Validators.minLength(4)],\n        this._validator.isEmailOrMobilePresent),\n      password: new FormControl('', [Validators.required, Validators.minLength(4)])\n    })\n  }\n\n  get username(): AbstractControl {\n    return this.forgotPasswordForm.get('username')!;\n  }\n\n  get usernameErrors(): String {\n    const username = this.forgotPasswordForm.get('username');\n    if (username?.hasError('required'))\n      return 'Username cannot be empty';\n    else if (username?.hasError('present'))\n      return \"Username doesn't exists\";\n    else if (username?.hasError('minlength'))\n      return `Username should at-least be ${username?.errors?.minlength.requiredLength} characters`\n    return '';\n  }\n\n  get passwordErrors(): String {\n    const password = this.forgotPasswordForm.get('password');\n    if (password?.hasError('required'))\n      return 'Password cannot be empty';\n    else if (password?.hasError('minlength'))\n      return `Password should at-least be ${password?.errors?.minlength.requiredLength} characters`\n    return '';\n  }\n\n  onSubmit(): void {\n    this._auth.forgotPassword(this.forgotPasswordForm.value)\n      .subscribe(\n        res => {\n          this.showAlert$.next(true);\n          this.alertDanger$.next(false);\n          this.alertMessage$.next(res.message);\n          if (res.statusCode == 200)\n            this.passwordForm.resetForm();\n        },\n        err => {\n          this.showAlert$.next(true);\n          this.alertDanger$.next(true);\n          this.alertMessage$.next('Something went wrong');\n        }\n      );\n  }\n}\n","<main class=\"px-3 my-auto\">\n  <p\n    class=\"lead mb-2 p-2 rounded\"\n    [ngClass]=\"(alertDanger$ | async) ? 'alert-danger' : 'alert-success'\"\n    *ngIf=\"showAlert$ | async\"\n  >\n    {{ alertMessage$ | async }}\n  </p>\n  <h1 class=\"fs-2 py-4\">Change Password Here</h1>\n\n  <div class=\"example-container\">\n    <form\n      #passwordForm\n      class=\"row w-100 g-0\"\n      [formGroup]=\"forgotPasswordForm\"\n      (ngSubmit)=\"onSubmit()\"\n    >\n      <div class=\"col-12 mb-3\">\n        <mat-form-field appearance=\"outline\" class=\"text-white d-block\">\n          <mat-label>Enter your username</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            placeholder=\"ks@cinemas.com\"\n            formControlName=\"username\"\n            class=\"fs-5\"\n          />\n          <mat-hint *ngIf=\"username.pending\" class=\"text-warning\"\n            >Checking for username...</mat-hint\n          >\n          <mat-error *ngIf=\"usernameErrors\">{{ usernameErrors }}</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"col-12 mb-3\">\n        <mat-form-field appearance=\"outline\" class=\"text-white d-block\">\n          <mat-label>Enter your password</mat-label>\n          <input\n            matInput\n            [type]=\"hidePassword ? 'password' : 'text'\"\n            formControlName=\"password\"\n            class=\"fs-5\"\n          />\n          <mat-error *ngIf=\"passwordErrors\">{{ passwordErrors }}</mat-error>\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hidePassword = !hidePassword\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hidePassword\"\n          >\n            <mat-icon>{{\n              hidePassword ? \"visibility_off\" : \"visibility\"\n            }}</mat-icon>\n          </button>\n        </mat-form-field>\n      </div>\n\n      <button\n        mat-raised-button\n        [color]=\"!forgotPasswordForm.valid ? 'accent' : 'primary'\"\n        class=\"col-12\"\n        type=\"submit\"\n      >\n        Change Password\n      </button>\n    </form>\n  </div>\n</main>\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GlobalConstants } from 'src/app/commons/global-constants';\nimport { Auditorium, BookedSeats, Booking, HttpResponse, Movie, MovieShow, Show } from 'src/app/interfaces/application';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicationService {\n\n  constructor(private _http: HttpClient) { }\n\n  getAuditorium(auditoriumId: number): Observable<Auditorium> {\n    return this._http.get<Auditorium>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}`);\n  }\n\n  getAllAuditoriums(): Observable<Auditorium[]> {\n    return this._http.get<Auditorium[]>(GlobalConstants.GET_ALL_AUDITORIUMS_URL);\n  }\n\n  addAuditorium(auditorium: Auditorium): Observable<Auditorium> {\n    return this._http.post<Auditorium>(GlobalConstants.ADD_AUDITORIUM_URL, auditorium);\n  }\n\n  updateAuditorium(auditorium: Auditorium): Observable<Auditorium> {\n    return this._http.put<Auditorium>(GlobalConstants.UPDATE_AUDITORIUM_URL, auditorium);\n  }\n\n  deleteAuditorium(auditoriumId: number): Observable<HttpResponse> {\n    return this._http.delete<HttpResponse>(`${GlobalConstants.DELETE_AUDITORIUM_URL}/${auditoriumId}`);\n  }\n\n  /* \n    ================= Movie Service ====================\n  */\n\n  getMovie(movieId: number): Observable<Movie> {\n    return this._http.get<Movie>(`${GlobalConstants.MOVIE_URL}/${movieId}`, { headers: { skip: \"true\" } });\n  }\n\n  getAllNowPlayingAndUpComingMovies(): Observable<Movie[]> {\n    return this._http.get<Movie[]>(GlobalConstants.NOW_PLAYING_AND_UP_COMING_MOVIES_URL, { headers: { skip: \"true\" } });\n  }\n\n  getAllNowPlayingMovies(): Observable<Movie[]> {\n    return this._http.get<Movie[]>(GlobalConstants.NOW_PLAYING_MOVIES_URL, { headers: { skip: \"true\" } });\n  }\n\n  getFewNowPlayingMovies(): Observable<Movie[]> {\n    let params = new HttpParams().set('records', '4');\n    return this._http.get<Movie[]>(GlobalConstants.NOW_PLAYING_MOVIES_URL, { params, headers: { skip: 'true' } });\n  }\n\n  getFewUpComingMovies(): Observable<Movie[]> {\n    let params = new HttpParams().set('records', '4');\n    return this._http.get<Movie[]>(GlobalConstants.UP_COMING_MOVIES_URL, { params: { 'records': '4' }, headers: { skip: 'true' } });\n  }\n\n  getAllUpComingMovies(): Observable<Movie[]> {\n    return this._http.get<Movie[]>(GlobalConstants.UP_COMING_MOVIES_URL, { headers: { skip: \"true\" } });\n  }\n\n  getAllNotPlayingMovies(): Observable<Movie[]> {\n    return this._http.get<Movie[]>(GlobalConstants.NOT_PLAYING_MOVIES_URL, { headers: { skip: \"true\" } });\n  }\n\n  getAllMovies(): Observable<Movie[]> {\n    return this._http.get<Movie[]>(GlobalConstants.GET_ALL_MOVIES_URL, { headers: { skip: \"true\" } });\n  }\n\n  addMovie(movie: Movie): Observable<Movie> {\n    return this._http.post<Movie>(GlobalConstants.ADD_MOVIE_URL, movie);\n  }\n\n  updateMovie(movie: Movie): Observable<Movie> {\n    return this._http.put<Movie>(GlobalConstants.UPDATE_MOVIE_URL, movie);\n  }\n\n  deleteMovie(movieId: number): Observable<HttpResponse> {\n    return this._http.delete<HttpResponse>(`${GlobalConstants.DELETE_MOVIE_URL}/${movieId}`);\n  }\n\n  /* \n    ================= Show Service ====================\n  */\n\n  getShowsByMovieId(auditoriumId: number, movieId: number): Observable<Show[]> {\n    return this._http.get<Show[]>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/movie/${movieId}`)\n  }\n\n  getShow(showId: number): Observable<Show> {\n    return this._http.get<Show>(`${GlobalConstants.SHOW_URL}/${showId}`);\n  }\n\n  getAuditoriumShow(auditoriumId: number, showId: number): Observable<Show> {\n    return this._http.get<Show>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/${showId}`);\n  }\n\n  getAllShows(): Observable<Show[]> {\n    return this._http.get<Show[]>(`${GlobalConstants.SHOW_URL}/all`);\n  }\n\n  getAllAuditoriumShows(auditoriumId: number): Observable<Show[]> {\n    return this._http.get<Show[]>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/all`);\n  }\n\n  addShow(auditoriumId: number, show: Show): Observable<Show> {\n    return this._http.post<Show>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/add`, show);\n  }\n\n  updateShow(auditoriumId: number, show: Show): Observable<Show> {\n    return this._http.put<Show>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/update`, show);\n  }\n\n  deleteShow(showId: number): Observable<HttpResponse> {\n    return this._http.delete<HttpResponse>(`${GlobalConstants.SHOW_URL}/delete/${showId}`);\n  }\n\n\n  /* \n    ================= Movie Show Service ====================\n  */\n\n  getAuditoriumsByMovieId(movieId: number): Observable<Auditorium[]> {\n    return this._http.get<Auditorium[]>(`${GlobalConstants.AUDITORIUM_URL}/movie/${movieId}`)\n  }\n\n  getMovieShow(movieShowId: number): Observable<MovieShow> {\n    return this._http.get<MovieShow>(`${GlobalConstants.MOVIESHOWS_URL}/${movieShowId}`);\n  }\n\n  getAuditoriumShowMovieShow(auditoriumId: number, showId: number, movieShowId: number): Observable<MovieShow> {\n    return this._http.get<MovieShow>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/${showId}/movie-show/${movieShowId}`);\n  }\n\n  getAllMovieShows(): Observable<MovieShow[]> {\n    return this._http.get<MovieShow[]>(`${GlobalConstants.MOVIESHOWS_URL}/all`);\n  }\n\n  getAllAuditoriumShowMovieShows(auditoriumId: number, showId: number): Observable<MovieShow[]> {\n    return this._http.get<MovieShow[]>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/${showId}/movie-show/all`);\n  }\n\n  addMovieShow(auditoriumId: number, showId: number, movieShow: MovieShow): Observable<MovieShow> {\n    return this._http.post<MovieShow>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/${showId}/movie-show/add`, movieShow);\n  }\n\n  updateMovieShow(auditoriumId: number, showId: number, movieShow: MovieShow): Observable<MovieShow> {\n    return this._http.put<MovieShow>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/${showId}/movie-show/update`, movieShow);\n  }\n\n  deleteMovieShow(movieShowId: number): Observable<HttpResponse> {\n    return this._http.delete<HttpResponse>(`${GlobalConstants.MOVIESHOWS_URL}/delete/${movieShowId}`);\n  }\n\n\n  /* \n    ================= Booking Service ====================\n  */\n\n  getBooking(bookingId: number): Observable<Booking> {\n    return this._http.get<Booking>(`${GlobalConstants.BOOKING_URL}/${bookingId}`);\n  }\n\n  getAuditoriumShowMovieShowBooking(auditoriumId: number, showId: number, movieShowId: number, bookingId: number): Observable<Booking> {\n    return this._http.get<Booking>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/${showId}/movie-show/${movieShowId}/booking/${bookingId}`);\n  }\n\n  getAllBookings(): Observable<Booking[]> {\n    return this._http.get<Booking[]>(`${GlobalConstants.BOOKING_URL}/all`);\n  }\n\n  getAllAuditoriumShowMovieShowBookings(auditoriumId: number, showId: number, movieShowId: number): Observable<Booking[]> {\n    return this._http.get<Booking[]>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/${showId}/movie-show/${movieShowId}/booking/all`);\n  }\n\n  addBooking(auditoriumId: number, showId: number, movieShowId: number, booking: Booking): Observable<Booking> {\n    return this._http.post<Booking>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/${showId}/movie-show/${movieShowId}/booking/add`, booking);\n  }\n\n  updateBooking(auditoriumId: number, showId: number, movieShowId: number, booking: Booking): Observable<Booking> {\n    return this._http.put<Booking>(`${GlobalConstants.AUDITORIUM_URL}/${auditoriumId}/show/${showId}/movie-show/${movieShowId}/booking/update`, booking);\n  }\n\n  deleteBooking(bookingId: number): Observable<any> {\n    return this._http.delete(`${GlobalConstants.BOOKING_URL}/delete/${bookingId}`);\n  }\n\n  getAllUserBooking(userId: string): Observable<Booking[]> {\n    return this._http.get<Booking[]>(`${GlobalConstants.BOOKING_URL}/${userId}/all`);\n  }\n\n  /* \n    ================= Now Playing, Up Coming and Not Playing Movie Shows Service ====================\n  */\n\n  getAllNowPlayingAndUpComingMovieShows(): Observable<MovieShow[]> {\n    return this._http.get<MovieShow[]>(GlobalConstants.NOW_PLAYING_AND_UP_COMING_MOVIE_SHOWS_URL, { headers: { skip: \"true\" } });\n  }\n\n  getAllNowPlayingMovieShows(): Observable<MovieShow[]> {\n    return this._http.get<MovieShow[]>(GlobalConstants.NOW_PLAYING_MOVIE_SHOWS_URL, { headers: { skip: \"true\" } });\n  }\n\n  getFewNowPlayingMovieShows(): Observable<MovieShow[]> {\n    let params = new HttpParams().set('records', '4');\n    return this._http.get<MovieShow[]>(GlobalConstants.NOW_PLAYING_MOVIE_SHOWS_URL, { params, headers: { skip: \"true\" } });\n  }\n\n  getFewUpComingMovieShows(): Observable<MovieShow[]> {\n    let params = new HttpParams().set('records', '4');\n    return this._http.get<MovieShow[]>(GlobalConstants.UP_COMING_MOVIE_SHOWS_URL, { params: { 'records': '4' }, headers: { skip: \"true\" } });\n  }\n\n  getAllUpComingMovieShows(): Observable<MovieShow[]> {\n    return this._http.get<MovieShow[]>(GlobalConstants.UP_COMING_MOVIE_SHOWS_URL, { headers: { skip: \"true\" } });\n  }\n\n  getAllNotPlayingMovieShows(): Observable<MovieShow[]> {\n    return this._http.get<MovieShow[]>(GlobalConstants.NOT_PLAYING_MOVIE_SHOWS_URL, { headers: { skip: \"true\" } });\n  }\n\n  // todo: create this endpoint\n  getAllBookedSeats(movieShowId: number, on: Date): Observable<BookedSeats> {\n    // new Date('Sun May 11,2014').toLocaleDateString('fr-CA')    2014-05-11\n    // let params = new HttpParams().set('on', on.toISOString().slice(0, 10));\n    // let params = new HttpParams().set('on', o);\n    return this._http.get<BookedSeats>(`${GlobalConstants.MOVIESHOWS_URL}/${movieShowId}/booked-seats/${on.toLocaleDateString('fr-CA')}`);\n  }\n\n  /* \n  ================= Booking Details ====================\n  */\n\n  getBookingDetails(bookingId: number): Observable<Booking> {\n    return this._http.get<Booking>(`${GlobalConstants.BOOKING_URL}/${bookingId}/details`);\n  }\n}\n\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { GlobalConstants } from 'src/app/commons/global-constants';\n\n@Component({\n  selector: 'app-login-layout',\n  templateUrl: './login-layout.component.html',\n  styleUrls: ['./login-layout.component.css'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class LoginLayoutComponent implements OnInit {\n\n  title: string = GlobalConstants.APP_NAME;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex h-100 text-center text-white bg-dark cover-page mb-5\">\n  <div class=\"cover-container d-flex w-100 p-3 mx-auto flex-column\">\n    <header class=\"mb-5\">\n      <div class=\"clearfix\">\n        <h3 class=\"float-md-start mb-0 fs-4 text-md-center\">{{ title }}</h3>\n        <nav class=\"nav nav-masthead justify-content-center float-md-end\">\n          <a class=\"nav-link\" aria-current=\"page\" routerLink=\"/home\">Home</a>\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/user/login\"\n            >Login</a\n          >\n          <a\n            class=\"nav-link\"\n            routerLinkActive=\"active\"\n            routerLink=\"/user/register\"\n            >Register</a\n          >\n          <a\n            class=\"nav-link\"\n            routerLinkActive=\"active\"\n            routerLink=\"/user/forgot-password\"\n            >Forgot Password</a\n          >\n        </nav>\n      </div>\n    </header>\n\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<app-footer [fixed]=\"true\"></app-footer>\n\n<!-- [fixed]=\"true\"\n  bgColor=\"bg-white\"\n  textColor=\"text-dark\" -->\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from 'src/app/commons/global-constants';\n\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css']\n})\nexport class ContactUsComponent implements OnInit {\n\n  title: string = GlobalConstants.APP_NAME;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"contact-us-container\">\n  <div class=\"contact-us-wrapper postion-relative\">\n    <div class=\"contact-us-banner\">\n      <div class=\"contact-us-banner-text h-100\">\n        <h1 class=\"fs-1 text-light\">Message here!</h1>\n        <h2 class=\"fs-2 text-uppercase text-light\"><span class=\"fs-2 text-lowercase text-light\" style=\"font-family: cursive;\" > Get in touch</span></h2>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"get-in-touch my-5\">\n    <div class=\"row g-0 justify-content-around\">\n      <div class=\"write-to-us col-sm-12 col-md-12 col-lg-7\">\n        <h1 class=\"fs-2\">Write to us by filling in the form below</h1>\n        <div class=\"underline\"></div>\n        <div class=\"form-container\">\n          <form class=\"example-form col-sm-12 col-lg-8 mx-auto\">\n            <mat-form-field\n              class=\"example-full-width d-block text-dark\"\n              appearance=\"standard\"\n            >\n              <mat-label class=\"text-dark\">Your Name</mat-label>\n              <input type=\"text\" matInput class=\"fs-5 text-dark\" />\n            </mat-form-field>\n\n            <mat-form-field\n              class=\"example-full-width d-block w-100 text-dark\"\n              appearance=\"standard\"\n            >\n              <mat-label class=\"text-dark\">Email Id</mat-label>\n              <input type=\"email\" matInput class=\"fs-5 text-dark\" />\n            </mat-form-field>\n\n            <mat-form-field\n              class=\"example-full-width d-block w-100 text-dark\"\n              appearance=\"standard\"\n            >\n              <mat-label class=\"text-dark\">Message</mat-label>\n              <textarea matInput placeholder=\"How can we help you!\"></textarea>\n            </mat-form-field>\n\n            <button mat-raised-button color=\"accent\" type=\"submit\">\n              Contact Us\n            </button>\n          </form>\n        </div>\n      </div>\n      <div class=\"address col-sm-12 col-md-12 col-lg-4\">\n        <h1 class=\"fs-2\">Contact Us</h1>\n        <div class=\"underline text-success\"></div>\n\n        <div class=\"contact-address\">\n          <mat-list>\n            <mat-list-item role=\"listitem\" class=\"py-2 h-auto\">\n              <mat-icon class=\"d-inline-block\"> place </mat-icon>\n              <div class=\"address ms-3 text-muted col-10\">\n                KS Entertainment Private Limited, Periyar Nagar,\n                Namakkal South Region,\n                Namkkal - Salem Road, Tamil Nadu,\n                TN - 637206\n              </div>\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item role=\"listitem\" class=\"py-2 h-auto\">\n              <mat-icon class=\"d-inline-block\"> email </mat-icon>\n              <div class=\"address ms-3 text-muted col-10\">kscinemas@cinemas.com</div>\n            </mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item role=\"listitem\" class=\"py-2 h-auto\">\n              <mat-icon class=\"d-inline-block col-1\"> support_agent </mat-icon>\n              <div class=\"address ms-3 text-muted col-10\">04-422-22514</div>\n            </mat-list-item>\n          </mat-list>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { Util } from 'src/app/classes/util/util';\nimport { Actor, Movie } from 'src/app/interfaces/application';\nimport { GlobalService } from 'src/app/services/global/global.service';\nimport { UserService } from 'src/app/services/user/user.service';\nimport { SelectMembersComponent } from '../templates/select-members/select-members.component';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class MovieComponent implements OnInit {\n\n  selectedMovie$!: Observable<Movie>;\n\n  actors!: Actor[];\n  casts = new BehaviorSubject<Actor[]>(this.actors);\n  cast$ = this.casts.asObservable();\n\n  crews = new BehaviorSubject<Actor[]>(this.actors);\n  crew$ = this.crews.asObservable();\n  movieId!: number;\n\n  constructor(private _mbs: MatBottomSheet,\n    private _globalService: GlobalService,\n    private _userService: UserService,\n    private _router: Router,\n    private _activeRoute: ActivatedRoute) {\n\n  }\n\n  ngOnInit(): void {\n    this.movieId = this._activeRoute.snapshot.params.movieId;\n\n    this._globalService.getAllMovies()\n      .subscribe(movies => {\n        const movie = movies.find(movie => movie.id == this.movieId)!\n        this.selectedMovie$ = of(movie);\n        this.casts.next(movie?.casts?.filter(cast => cast.isCast == 'yes')!);\n        this.crews.next(movie?.crews?.filter(cast => cast.isCast == 'no')!);\n      });\n  }\n\n  openBottomSheet(): void {\n    if (!this._userService.isLoggedIn()) {\n      this._router.navigate(['/user/login'], { state: { redirect: this._router.url }, queryParams: { 'booking': true } });\n      return;\n    }\n    else {\n      let sheet = this._mbs.open(SelectMembersComponent, { data: { movieId: this.movieId, movie: this.selectedMovie$ } });\n      sheet.afterDismissed().subscribe(data => {\n        if (data?.tempSelectMembers) {\n          this._globalService.setTempSelectMembers(data.tempSelectMembers);\n          this._router.navigate(['/select-seats']);\n        }\n      });\n    }\n  }\n\n  formatRelease(release: any): string {\n    if (new Date(release) > new Date())\n      return 'Releasing on ' + Util.formatDate(release);\n    return 'Now Playing';\n  }\n\n}\n","<div class=\"movie-section\">\n  <div class=\"position-relative poster-wrapper p-3\">\n    <div\n      class=\"movie-banner\"\n      style=\"\n        background: linear-gradient(\n            90deg,\n            rgb(34, 34, 34) 24.97%,\n            rgb(34, 34, 34) 38.3%,\n            rgba(34, 34, 34, 0.04) 97.47%,\n            rgb(34, 34, 34) 100%\n          )\n          no-repeat center center;\n        background-size: cover;\n      \"\n      style.background-image=\"linear-gradient(\n        90deg,\n        rgb(34, 34, 34) 24.97%,\n        rgb(34, 34, 34) 38.3%,\n        rgba(34, 34, 34, 0.04) 97.47%,\n        rgb(34, 34, 34) 100%\n      ), url({{ (selectedMovie$ | async)?.bgImage }})\"\n    >\n      <div class=\"movie-poster row g-0\">\n        <div class=\"movie-image col-lg-3 col-md-6 col-sm-10 rounded-5\">\n          <img\n            [src]=\"(selectedMovie$ | async)?.image\"\n            [alt]=\"(selectedMovie$ | async)?.name\"\n            width=\"100%\"\n            height=\"100%\"\n          />\n          <div\n            class=\"\n              movie-release\n              position-absolute\n              bottom-0\n              start-0\n              py-2\n              w-100\n              bg-white\n              text-center\n            \"\n          >\n            {{ formatRelease((selectedMovie$ | async)?.release) }}\n          </div>\n        </div>\n        <div class=\"movie-details text-white mx-3 px-3 col-lg-5 col-sm-12\">\n          <div class=\"movie-title mb-lg-5 fs-lg-1\">\n            <h1>\n              {{\n                ((selectedMovie$ | async)?.name | uppercase) +\n                  \" : \" +\n                  ((selectedMovie$ | async)?.caption | titlecase)\n              }}\n            </h1>\n          </div>\n          <div class=\"movie-format my-3\">\n            <button class=\"btn btn-light btn-sm diabled mx-1\">4D</button>\n            <button class=\"btn btn-light btn-sm diabled mx-1\">\n              {{ (selectedMovie$ | async)?.language }}\n            </button>\n          </div>\n          <div class=\"movie-duration my-3\">\n            <p style=\"font: unset; font-size: 20px\">\n              {{\n                ((selectedMovie$ | async)?.duration | titlecase) +\n                  \" . \" +\n                  (selectedMovie$ | async)?.genres?.join(\", \")\n              }}\n            </p>\n          </div>\n          <div class=\"links mt-4 align-self-end\">\n            <a\n              mat-raised-button\n              color=\"accent\"\n              class=\"me-2\"\n              (click)=\"openBottomSheet()\"\n              >Book Tickets</a\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"about-movie text-dark p-4\">\n    <h2>About the Movie</h2>\n    <p class=\"lead\" style=\"font-family: sans-serif\">\n      {{ (selectedMovie$ | async)?.story }}\n    </p>\n  </div>\n  <!-- <nav class=\"px-4 py-3 w-100 shadow-sm bg-white text-dark\">\n    <h1>{{(selectedMovie$ | async)?.name + ' : '+ (selectedMovie$ | async)?.caption}}</h1>\n    <p class=\"lead\">{{(selectedMovie$ | async)?.genres.join(', ')}}</p>\n  </nav> -->\n\n  <div class=\"movie-cast ms-5 my-4\" *ngIf=\"(cast$ | async)?.length! > 0\">\n    <h1 class=\"fs-lg-2\">Cast</h1>\n    <div class=\"row g-0\">\n      <div\n        class=\"cast text-center col-sm-12 col-md-6 col-lg-3\"\n        *ngFor=\"let cast of cast$ | async\"\n      >\n        <div class=\"image rounded-circle mx-auto mb-3\">\n          <!-- class=\"style__Image-eykeme-1 dkwyqp\" -->\n          <!-- style=\"border-radius: 60px; opacity: 1\" -->\n          <img\n            [alt]=\"cast.name\"\n            width=\"120px\"\n            height=\"120px\"\n            [src]=\"cast.image\"\n          />\n        </div>\n        <div class=\"cast-name\">\n          <h5 class=\"fs-5\">{{ cast.name }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"movie-crew ms-5 my-4 pb-5\" *ngIf=\"(crew$ | async)?.length! > 0\">\n    <h1 class=\"fs-lg-2\">Crew</h1>\n    <div class=\"row g-0\">\n      <div\n        class=\"crew text-center col-sm-12 col-md-6 col-lg-3\"\n        *ngFor=\"let crew of crew$ | async\"\n      >\n        <div class=\"image rounded-circle mx-auto mb-3\">\n          <img\n            [alt]=\"crew.name\"\n            width=\"120px\"\n            height=\"120px\"\n            [src]=\"crew.image\"\n          />\n        </div>\n        <div class=\"cast-name\">\n          <h5 class=\"fs-5\">{{ crew.name }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { Token } from \"src/app/interfaces/application\";\nimport { AuthService } from \"src/app/services/auth/auth.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserValidator {\n\n    constructor(private _service: AuthService) {\n    }\n\n    static required(control: AbstractControl): { [key: string]: boolean } | null {\n        return control.value.length <= 0 ? { 'required': true } : null;\n    }\n\n    get uniqueEmail(): AsyncValidatorFn | AsyncValidatorFn[] | null | undefined {\n        return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n            return this._service.checkUniqueness(control.value)\n                .pipe(\n                    map((res: Token) => {\n                        console.log(res.token);\n                        return res.token ? { unique: true } : null;\n                    })\n                );\n        };\n    }\n\n    get uniqueMobile(): AsyncValidatorFn | AsyncValidatorFn[] | null | undefined {\n        return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n            return this._service.checkUniqueness(control.value)\n                .pipe(\n                    map((res: Token) => {\n                        console.log(res.token);\n                        return res.token ? { unique: true } : null;\n                    })\n                );\n        };\n    }\n\n    get isEmailOrMobilePresent(): AsyncValidatorFn | AsyncValidatorFn[] | null | undefined {\n        return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n            return this._service.checkUniqueness(control.value)\n                .pipe(\n                    map((res: Token) => {\n                        console.log(res.token);\n                        return res.token ? null : { present: true };\n                    })\n                );\n        };\n    }\n\n\n    // static uniqueEmail(control: AbstractControl): Promise<ValidationErrors | null> | null {\n    //     const service = new UserService();\n    //     return new Promise((resolve, reject) => {\n    //         setTimeout(() => {\n    //             return service.isEmailExists(control.value) ? resolve({ unique: true }) : resolve(null);\n    //         }, 3000);\n    //     });\n    // }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ApplicationValidator } from 'src/app/classes/validators/application-validator';\nimport { GlobalConstants } from 'src/app/commons/global-constants';\nimport { Show } from 'src/app/interfaces/application';\n\n@Component({\n  selector: 'app-show-form',\n  templateUrl: './show-form.component.html',\n  styleUrls: ['./show-form.component.css']\n})\nexport class ShowFormComponent implements OnInit {\n\n  showForm!: FormGroup;\n\n  auditoriumShows!: Show[];\n\n  showNames = GlobalConstants.SHOW_NAMES;\n\n  constructor(private _fb: FormBuilder,\n    public _dialog: MatDialogRef<ShowFormComponent>,\n    @Inject(MAT_DIALOG_DATA) private _data: Show[]) {\n    this._dialog.disableClose = true;\n  }\n\n  ngOnInit(): void {\n    this.auditoriumShows = this._data;\n    this.showForm = this._fb.group({\n      name: new FormControl('', [Validators.required, uniqueName(this.auditoriumShows)]),\n      startTime: new FormControl('', [Validators.required, ApplicationValidator.uniqueShowTime(this.auditoriumShows)])\n    });\n  }\n\n  get nameErrors(): string {\n    let name = this.showForm.get('name');\n    if (name?.hasError('required'))\n      return 'Name cannot be null';\n    else if (name?.hasError('uniqueName'))\n      return 'Show name must be unique';\n    return '';\n  }\n\n  get startTimeErrors(): string {\n    let time = this.showForm.get('startTime');\n    if (time?.hasError('required'))\n      return 'Time cannot be null';\n    else if (time?.hasError('uniqueTime'))\n      return 'Time gap between the shows must be at-least 3 hours';\n    return '';\n  }\n\n  onCancel(): void {\n    this._dialog.close();\n  }\n  onSubmit(): void {\n    this._dialog.close({ show: this.showForm.value });\n  }\n}\n\n// https://www.infragistics.com/community/blogs/b/infragistics/posts/how-to-create-custom-validators-for-angular-reactive-forms\nfunction uniqueName(shows: Show[]): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: boolean } | null => {\n    return shows ? shows.find(show => show.name.toLocaleLowerCase() == control.value.toLocaleLowerCase())\n      ? { 'uniqueName': true }\n      : null : null;\n  };\n}","<div class=\"wrapper\">\n  <h1 class=\"text-center mb-3 p-2 rounded border border-2 shadow-sm\">\n    Add New Show\n  </h1>\n  <form class=\"example-form p-4\" [formGroup]=\"showForm\">\n    <mat-form-field class=\"d-block w-100 text-dark\" appearance=\"outline\">\n      <mat-label>Show Name</mat-label>\n      <input matInput formControlName=\"name\" list=\"show-name\" />\n      <datalist id=\"show-name\">\n        <option *ngFor=\"let show of showNames\" [value]=\"show\">\n          {{ show }}\n        </option>\n      </datalist>\n      <mat-error *ngIf=\"nameErrors\">\n        {{ nameErrors }}\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"d-block w-100 text-dark\" appearance=\"outline\">\n      <mat-label>Show Timing</mat-label>\n      <input\n        type=\"time\"\n        matInput\n        placeholder=\"1H 20M\"\n        formControlName=\"startTime\"\n      />\n      <mat-error *ngIf=\"startTimeErrors\" color=\"accent\"\n        >{{ startTimeErrors }}\n      </mat-error>\n    </mat-form-field>\n  </form>\n  <button mat-raised-button (click)=\"onCancel()\" class=\"me-2\">Cancel</button>\n  <button\n    mat-raised-button\n    (click)=\"onSubmit()\"\n    [disabled]=\"!showForm.valid\"\n    color=\"primary\"\n    class=\"ms-2\"\n  >\n    Submit\n  </button>\n</div>\n","export class GlobalConstants {\n\n    public static APP_NAME: string = 'KS Cinemas';\n\n    public static SHOW_NAMES: string[] = ['Morning Show', 'Matinee', 'First Show', 'Second Show'];\n\n    public static ALL_GENERS: string[] = ['Comedy', 'Romance', 'Action', 'Drama', 'Fantasy', 'Horror', 'Mystery', 'Thriller', 'Crime', 'War'];\n\n    public static ALL_LANGUAGES: string[] = ['Tamil', 'Hindi', 'Telugu', 'Kanada', 'English', 'Malayalam', 'Urdu', 'Marathi', 'Punjabi'];\n\n    public static HALL_SAFETIES: string[] = ['Thermal Scanning', 'Contactless Security ChecK', 'Hand Sanitizers Available',\n        'Sanitization Before Every Show', 'In-Cinema Social Distancing',\n        'Contactless Food Service', 'Packaged Food and Beverage', 'Daily Temperature Checks for Staff',\n        'Deep Cleaning of Restrooms', 'Limited Occupancy In Restrooms', 'Sanitized / Sterilized 3D Glasses'];\n\n    public static HALL_FACILITIES: string[] = ['MTicket', 'Wheel Chair Facility', 'Recliner Seats', 'Parking Facility', 'Food Court', 'Ticket Cancellation', 'f & B'];\n\n    public static ROOT_URL = 'http://34.204.2.214:5555/my-movie-plan';\n\n    public static REGISTER_URL = `${GlobalConstants.ROOT_URL}/user/sign-up`;\n\n    public static CHECK_UNIQUENESS_URL = `${GlobalConstants.ROOT_URL}/user/check`;\n\n    public static UPDATE_USER_URL = `${GlobalConstants.ROOT_URL}/user/update`;\n\n    public static GET_LOGGED_IN_USER_URL = `${GlobalConstants.ROOT_URL}/user/get-user`;\n\n    public static AUTHENTICATE_URL = `${GlobalConstants.ROOT_URL}/user/authenticate`;\n\n    public static UNIQUE_USER_URL = `${GlobalConstants.ROOT_URL}/user/check`;\n\n    public static FORGOT_PASSWORD_URL = `${GlobalConstants.ROOT_URL}/user/forgot-password`;\n\n    public static AUDITORIUM_URL = `${GlobalConstants.ROOT_URL}/auditorium`;\n\n    public static GET_ALL_AUDITORIUMS_URL = `${GlobalConstants.ROOT_URL}/auditorium/all`;\n\n    public static ADD_AUDITORIUM_URL = `${GlobalConstants.ROOT_URL}/auditorium/add`;\n\n    public static UPDATE_AUDITORIUM_URL = `${GlobalConstants.ROOT_URL}/auditorium/update`;\n\n    public static DELETE_AUDITORIUM_URL = `${GlobalConstants.ROOT_URL}/auditorium/delete`;\n\n    public static MOVIE_URL = `${GlobalConstants.ROOT_URL}/movie`;\n\n    public static NOW_PLAYING_AND_UP_COMING_MOVIES_URL = `${GlobalConstants.MOVIE_URL}/now-playing-up-coming`;\n\n    public static NOW_PLAYING_MOVIES_URL = `${GlobalConstants.MOVIE_URL}/now-playing`;\n\n    public static UP_COMING_MOVIES_URL = `${GlobalConstants.MOVIE_URL}/up-coming`;\n\n    public static NOT_PLAYING_MOVIES_URL = `${GlobalConstants.MOVIE_URL}/not-playing`;\n\n    public static GET_ALL_MOVIES_URL = `${GlobalConstants.ROOT_URL}/movie/all`;\n\n    public static ADD_MOVIE_URL = `${GlobalConstants.ROOT_URL}/movie/add`;\n\n    public static UPDATE_MOVIE_URL = `${GlobalConstants.ROOT_URL}/movie/update`;\n\n    public static DELETE_MOVIE_URL = `${GlobalConstants.ROOT_URL}/movie/delete`;\n\n    public static SHOW_URL = `${GlobalConstants.ROOT_URL}/show`;\n\n    public static MOVIESHOWS_URL = `${GlobalConstants.ROOT_URL}/movie-show`;\n\n    public static NOW_PLAYING_AND_UP_COMING_MOVIE_SHOWS_URL = `${GlobalConstants.ROOT_URL}/movie-show/now-playing-up-coming`;\n\n    public static NOW_PLAYING_MOVIE_SHOWS_URL = `${GlobalConstants.MOVIESHOWS_URL}/now-playing`;\n\n    public static UP_COMING_MOVIE_SHOWS_URL = `${GlobalConstants.MOVIESHOWS_URL}/up-coming`;\n\n    public static NOT_PLAYING_MOVIE_SHOWS_URL = `${GlobalConstants.MOVIESHOWS_URL}/not-playing`;\n\n    public static BOOKING_URL = `${GlobalConstants.ROOT_URL}/booking`;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from 'src/app/commons/global-constants';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  title: string = GlobalConstants.APP_NAME;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"about-us-container\">\n  <div class=\"about-us-wrapper postion-relative\">\n    <div class=\"about-us-banner\">\n      <div class=\"about-us-banner-text h-100\">\n        <h1 class=\"fs-1\">\n          {{ title }}\n        </h1>\n        <h2 class=\"fs-2 text-uppercase\">We Provide Entertainment</h2>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"description mt-4\">\n    <div class=\"mx-4\">\n      <h1 class=\"fs-2\">About Us</h1>\n      <div class=\"underline text-warning\"></div>\n    </div>\n    <p class=\"text-muted text-start px-3 p-lg-4 p-md-3\">\n      60 years ago in India a seed of an idea was planted, a dream was\n      shared. Inception happened. 60 years on, we look back at what we've built.\n      Leave it up to us, and we'd love to do it all over again. Here's our story\n    </p>\n  </div>\n\n  <div class=\"testimonials p-lg-5 bg-dark text-white p-md-3 mt-4\">\n    <h1 class=\"fs-2 pb-5 text-center \">Our Happy Customer</h1>\n    <div class=\"testimonials-list row g-0\">\n      <div class=\"testimonial-card col-4 px-4 my-4\">\n        <div class=\"testimonial text-center\">\n          <div class=\"image mb-2 col-3 mx-auto\">\n            <img\n              mat-card-image=\"\"\n              src=\"https://i.pinimg.com/474x/a7/c8/16/a7c8160be69a3135f496df24290d000f.jpg\"\n              alt=\"Photo of a Shiba Inu\"\n              class=\"mat-card-image rounded-circle\"\n              height=\"120\"\n              width=\"120\"\n            />\n          </div>\n          <div class=\"comments\">\n            <h3 class=\"fs-3 user\">User</h3>\n            <div class=\"text-muted text-start\">\n              60 years ago in India a seed of an idea was planted, a dream was\n      shared. Inception happened. 60 years on, we look back at what we've built.\n      Leave it up to us, and we'd love to do it all over again. Here's our story\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"testimonial-card col-4 px-4 my-4\">\n        <div class=\"testimonial text-center\">\n          <div class=\"image mb-2 col-3 mx-auto\">\n            <img\n              mat-card-image=\"\"\n              src=\"https://i.pinimg.com/474x/a7/c8/16/a7c8160be69a3135f496df24290d000f.jpg\"\n              alt=\"Photo of a Shiba Inu\"\n              class=\"mat-card-image rounded-circle\"\n              height=\"120\"\n              width=\"120\"\n            />\n          </div>\n          <div class=\"comments\">\n            <h3 class=\"fs-3 user\">User</h3>\n            <div class=\"text-muted text-start px-3\">\n              60 years ago in India a seed of an idea was planted, a dream was\n      shared. Inception happened. 60 years on, we look back at what we've built.\n      Leave it up to us, and we'd love to do it all over again. Here's our story\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"testimonial-card col-4 px-4 my-4\">\n        <div class=\"testimonial text-center\">\n          <div class=\"image mb-2 col-3 mx-auto\">\n            <img\n              mat-card-image=\"\"\n              src=\"https://i.pinimg.com/474x/a7/c8/16/a7c8160be69a3135f496df24290d000f.jpg\"\n              alt=\"Photo of a Shiba Inu\"\n              class=\"mat-card-image rounded-circle border-1 border-info\"\n              height=\"120\"\n              width=\"120\"\n            />\n          </div>\n          <div class=\"comments\">\n            <h3 class=\"fs-3 user\">User</h3>\n            <div class=\"text-muted text-start px-3\">\n              22 years ago in South Africa a seed of an idea was planted, a\n              dream was shared. Inception happened. 22 years on, we look back at\n              what we've built. Leave it up to us, and we'd love to do it all\n              over again. Here's our story\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"branches mt-4 py-5\">\n    <div class=\"mx-4\">\n      <h1 class=\"fs-2\">Our Branches</h1>\n      <div class=\"underline\"></div>\n    </div>\n    <div class=\"row g-0 justify-content-around align-content-center\">\n      <mat-card class=\"col-3 mx-3 my-3 bg-warning  text-center fw-bold\" color=\"accent\"\n        >Namkkal</mat-card\n      >\n      <mat-card class=\"col-3 mx-3 my-3 bg-warning text-center fw-bold\" color=\"accent\"\n        >Chennai</mat-card\n      >\n      <mat-card class=\"col-3 mx-3 my-3 bg-warning  text-center fw-bold\" color=\"accent\"\n        >Hydrabad</mat-card\n      >\n      <mat-card class=\"col-3 mx-3 my-3 bg-warning text-center fw-bold\" color=\"accent\"\n        >Pune</mat-card\n      >\n      <mat-card class=\"col-3 mx-3 my-3 bg-warning text-center fw-bold\" color=\"accent\"\n        >Banglore</mat-card\n      >\n      <mat-card class=\"col-3 mx-3 my-3 bg-warning text-center fw-bold\" color=\"accent\"\n        >Mumbai</mat-card\n      >\n    </div>\n  </div>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Util } from 'src/app/classes/util/util';\nimport { Booking, BookingDetails, Payment, TempScreen, TempSelectMembers } from 'src/app/interfaces/application';\nimport { ApplicationService } from 'src/app/services/application/application.service';\nimport { GlobalService } from 'src/app/services/global/global.service';\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'MM/YYYY',\n  },\n  display: {\n    dateInput: 'MM/YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@Component({\n  selector: 'app-payment-form',\n  templateUrl: './payment-form.component.html',\n  styleUrls: ['./payment-form.component.css']\n})\nexport class PaymentFormComponent implements OnInit {\n\n  @ViewChild('ccNumber') ccNumberField!: ElementRef;\n\n  paymentForm!: FormGroup;\n\n  cvvHide: boolean = true;\n\n  tempMonths: string[] = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  tempYears: number[] = [];\n\n  // amountToBePaid!: number;\n\n  tempScreen!: TempScreen;\n\n  selectedMembers!: TempSelectMembers;\n\n  constructor(private _fb: FormBuilder,\n    private _global: GlobalService,\n    private _appService: ApplicationService,\n    private _router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n    this.tempScreen = this._global.getTempScreen();\n    this.selectedMembers = this._global.getTempSelectMembers();\n\n    if (!this.tempScreen && !this.selectedMembers)\n      this._router.navigate(['/home'], { queryParams: { payment: 'false' } });\n\n    [...Array(9).keys()].forEach(num => this.tempYears.push(new Date().getFullYear() + num));\n\n    // this.amountToBePaid = this.tempScreen.amount;\n\n    this.paymentForm = this._fb.group({\n      cardNumber: new FormControl('', [Validators.required, Validators.pattern('^[ 0-9]*$'), Validators.minLength(17)]),\n      cardExpiryMonth: new FormControl('', Validators.required),\n      cardExpiryYear: new FormControl('', Validators.required),\n      cardCVV: new FormControl('', [Validators.required, Validators.pattern('^[0-9]{3}$')])\n    });\n  }\n\n  get cardNumberErrors(): string {\n    let card = this.paymentForm.get('cardNumber');\n    if (card?.hasError('required'))\n      return 'Card Number cannot be empty';\n    else if (card?.hasError('pattern'))\n      return 'Invalid card number';\n    return '';\n  }\n\n  get monthErrors(): string {\n    let month = this.paymentForm.get('cardExpiryMonth');\n    return month?.hasError('required') ? 'Month cannot be empty' : '';\n  }\n\n  get yearErrors(): string {\n    let year = this.paymentForm.get('cardExpiryYear');\n    return year?.hasError('required') ? 'Year cannot be empty' : '';\n  }\n\n  get cvvErrors(): string {\n    let cvv = this.paymentForm.get('cardCVV');\n    if (cvv?.hasError('required'))\n      return 'CVV Number cannot be empty';\n    else if (cvv?.hasError('pattern'))\n      return 'Invalid CVV number';\n    return '';\n  }\n\n  /* Insert spaces to enhance legibility of credit card numbers */\n  creditCardNumberSpacing() {\n    const input = this.ccNumberField.nativeElement;\n    const { selectionStart } = input;\n    const { cardNumber } = this.paymentForm.controls;\n\n    let trimmedCardNum = cardNumber.value.replace(/\\s+/g, '');\n\n    if (trimmedCardNum.length > 16) {\n      trimmedCardNum = trimmedCardNum.substr(0, 16);\n    }\n\n    /* Handle American Express 4-6-5 spacing */\n    const partitions = trimmedCardNum.startsWith('34') || trimmedCardNum.startsWith('37')\n      ? [4, 6, 5]\n      : [4, 4, 4, 4];\n\n    const numbers: any[] = [];\n    let position = 0;\n    partitions.forEach(partition => {\n      const part = trimmedCardNum.substr(position, partition);\n      if (part) numbers.push(part);\n      position += partition;\n    })\n\n    cardNumber.setValue(numbers.join(' '));\n\n    /* Handle caret position if user edits the number later */\n    if (selectionStart < cardNumber.value.length - 1) {\n      input.setSelectionRange(selectionStart, selectionStart, 'none');\n    }\n  }\n\n  formatTime(time: string): string {\n    return Util.formatTimeToAmOrPm(time);\n  }\n\n  onSubmit(): void {\n    const members = this.selectedMembers;\n    if (this.tempScreen && members && this.paymentForm.value) {\n      const paymentData: Payment = this.paymentForm.value;\n      paymentData.paymentDate = new Date();\n      paymentData.amount = this.tempScreen.amount;\n\n      const b_details: BookingDetails = {\n        auditoriumId: members.auditoriumId,\n        showId: members.showId,\n        movieShowId: members.movieShowId,\n        movieId: members.movieId,\n      }\n\n      const booking: Booking = {\n        amount: this.tempScreen.amount,\n        bookedOn: new Date(),\n        dateOfBooking: members.date,\n        totalSeats: this.tempScreen.selectedSeats,\n        seatNumbers: this.tempScreen.selectedSeatNumbers,\n        bookingDetails: b_details,\n        payment: paymentData,\n      }\n      this._appService.addBooking(members.auditoriumId, members.showId, members.movieShowId, booking)\n        .subscribe(booking => {\n          if (booking) {\n            this._router.navigate(['/my/bookings'], { queryParams: { 'payment': true } });\n          }\n        })\n    }\n  }\n}\n","<div class=\"wrapper p-5\">\n  <div class=\"text-center mb-3 p-2 rounded border border-2 shadow-sm\">\n    <h1 class=\"text-center d-inline-block my-2\">Payment Gateway</h1>\n    (<span class=\"text-danger d-inline-block my-2\">do not refresh the page</span\n    >)\n  </div>\n  <div class=\"my-auto h-70vh row g-0 justify-content-around\">\n    <div class=\"col-6 px-2 mx-auto order-2\">\n      <form [formGroup]=\"paymentForm\" class=\"example-form p-4\">\n        <mat-form-field appearance=\"outline\" class=\"d-block w-100 text-dark\">\n          <mat-label>Card Number</mat-label>\n          <input\n            matInput\n            formControlName=\"cardNumber\"\n            type=\"tel\"\n            #ccNumber\n            class=\"fs-3 bolder col-12\"\n            (keyup)=\"creditCardNumberSpacing()\"\n          />\n          <mat-hint>16 digit card number</mat-hint>\n          <mat-error *ngIf=\"cardNumberErrors\">{{ cardNumberErrors }}</mat-error>\n        </mat-form-field>\n\n        <div class=\"row g-0 justify-content-around\">\n          <mat-form-field\n            appearance=\"outline\"\n            class=\"d-block text-dark col-sm-12 col-lg-4 px-1\"\n          >\n            <mat-label>Month</mat-label>\n            <mat-select formControlName=\"cardExpiryMonth\">\n              <mat-option *ngFor=\"let month of tempMonths\" [value]=\"month\">\n                {{ month }}\n              </mat-option>\n            </mat-select>\n            <mat-hint>Select card expiry month</mat-hint>\n            <mat-error *ngIf=\"monthErrors\">{{ monthErrors }}</mat-error>\n          </mat-form-field>\n          <mat-form-field\n            appearance=\"outline\"\n            class=\"d-block text-dark col-sm-12 col-lg-4 px-1\"\n          >\n            <mat-label>Year</mat-label>\n            <mat-select formControlName=\"cardExpiryYear\">\n              <mat-option *ngFor=\"let year of tempYears\" [value]=\"year\">\n                {{ year }}\n              </mat-option>\n            </mat-select>\n            <mat-hint>select card expiry year</mat-hint>\n            <mat-error *ngIf=\"yearErrors\">{{ yearErrors }}</mat-error>\n          </mat-form-field>\n          <mat-form-field\n            appearance=\"outline\"\n            class=\"d-block text-dark col-sm-12 col-lg-4 px-1\"\n          >\n            <mat-label>CVV</mat-label>\n            <input\n              matInput\n              [type]=\"cvvHide ? 'password' : 'text'\"\n              formControlName=\"cardCVV\"\n            />\n            <button\n              mat-icon-button\n              matSuffix\n              (click)=\"cvvHide = !cvvHide\"\n              [attr.aria-label]=\"'Hide password'\"\n              [attr.aria-pressed]=\"cvvHide\"\n            >\n              <mat-icon>{{\n                cvvHide ? \"visibility_off\" : \"visibility\"\n              }}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"cvvErrors\">{{ cvvErrors }}</mat-error>\n          </mat-form-field>\n        </div>\n\n        <button\n          mat-raised-button\n          (click)=\"onSubmit()\"\n          [disabled]=\"!paymentForm.valid\"\n          color=\"primary\"\n          class=\"col-12 my-3\"\n        >\n          Pay {{ tempScreen.amount | currency: \"INR\" }}\n        </button>\n      </form>\n    </div>\n    <div class=\"col-6 px-2 mx-auto order-1\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\" colspan=\"2\">Booking Details</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Auditorium</td>\n            <th scope=\"row\">{{ selectedMembers.auditoriumName }}</th>\n          </tr>\n          <tr>\n            <td>Show</td>\n            <th scope=\"row\">\n              {{ selectedMembers.showName }}\n            </th>\n          </tr>\n          <tr>\n            <td>Show Timing</td>\n            <th scope=\"row\">\n              {{ formatTime(selectedMembers.showTime) }}\n            </th>\n          </tr>\n          <tr>\n            <td>Movie Name</td>\n            <th scope=\"row\">{{ selectedMembers.movieName | uppercase }}</th>\n          </tr>\n          <tr>\n            <td>Movie Lang</td>\n            <th scope=\"row\">{{ selectedMembers.movieLanguage }}</th>\n          </tr>\n          <tr>\n            <td>Date</td>\n            <th scope=\"row\">{{ selectedMembers.date | date: \"mediumDate\" }}</th>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutUsComponent } from './components/about-us/about-us.component';\nimport { AuditoriumFormComponent } from './components/auditorium-form/auditorium-form.component';\nimport { ContactUsComponent } from './components/contact-us/contact-us.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { LoginLayoutComponent } from './components/login-layout/login-layout.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ManageComponent } from './components/manage/manage.component';\nimport { MovieFormComponent } from './components/movie-form/movie-form.component';\nimport { MovieComponent } from './components/movie/movie.component';\nimport { MoviesComponent } from './components/movies/movies.component';\nimport { MyBookingsComponent } from './components/my-bookings/my-bookings.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { PaymentFormComponent } from './components/templates/payment-form/payment-form.component';\nimport { ScreenComponent } from './components/templates/screen/screen.component';\nimport { AdminGuard } from './guards/admin/admin.guard';\nimport { AuthGuard } from './guards/auth/auth.guard';\nimport { FromCloseGuard } from './guards/form/from-close.guard';\n\nconst routes: Routes = [\n  {\n    path: '', component: LayoutComponent, children: [\n      { path: '', redirectTo: '/home', pathMatch: 'full' },\n      { path: 'home', component: HomePageComponent },\n      { path: 'movies', component: MoviesComponent },\n      { path: 'movie/:movieId', component: MovieComponent },\n      { path: 'about', component: AboutUsComponent },\n      { path: 'contact', component: ContactUsComponent },\n      { path: 'select-seats', component: ScreenComponent, canActivate: [AuthGuard] },\n      { path: 'payment', component: PaymentFormComponent, canActivate: [AuthGuard] },\n      {\n        path: 'my', children: [ //canActivate: [AuthGuard]\n          { path: '', redirectTo: '/my/profile', pathMatch: 'full' },\n          { path: 'profile', component: ProfileComponent },\n          { path: 'bookings', component: MyBookingsComponent }\n        ]\n      },\n    ]\n  },\n  {\n    path: 'admin', component: LayoutComponent, canActivate: [AuthGuard, AdminGuard], children: [\n      { path: '', redirectTo: '/admin/manage', pathMatch: 'full' },\n      { path: 'manage', component: ManageComponent },\n      { path: 'add-auditorium', component: AuditoriumFormComponent, canDeactivate: [FromCloseGuard] },\n      { path: 'add-movie', component: MovieFormComponent, canDeactivate: [FromCloseGuard] }\n    ]\n  },\n  {\n    path: 'user', component: LoginLayoutComponent, children: [\n      { path: '', redirectTo: '/login', pathMatch: 'full' },\n      { path: 'login', component: LoginComponent },\n      { path: 'register', component: RegisterComponent },\n      { path: 'forgot-password', component: ForgotPasswordComponent }\n    ]\n  },\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { ApplicationValidator } from 'src/app/classes/validators/application-validator';\nimport { GlobalConstants } from 'src/app/commons/global-constants';\nimport { LeaveForm, Movie } from 'src/app/interfaces/application';\nimport { AlertService } from 'src/app/services/alert/alert.service';\nimport { ApplicationService } from 'src/app/services/application/application.service';\nimport { GlobalService } from 'src/app/services/global/global.service';\n\n@Component({\n  selector: 'app-movie-form',\n  templateUrl: './movie-form.component.html',\n  styleUrls: ['./movie-form.component.css'],\n  encapsulation: ViewEncapsulation.Emulated,\n  providers: [ApplicationValidator]\n})\nexport class MovieFormComponent implements OnInit, LeaveForm {\n\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  filteredLanguages!: Observable<string[]>;\n  languageField: FormControl = new FormControl();\n  languages: string[] = ['English'];\n  allLanguages!: string[];\n\n  allGenres!: string[];\n\n  @ViewChild('languageInput') languageInput!: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete!: MatAutocomplete;\n\n  movieForm!: FormGroup;\n\n  todayDate = new Date();\n\n  allMovieNames!: string[];\n\n  constructor(private _fb: FormBuilder,\n    private _service: ApplicationService,\n    private _router: Router,\n    private _globalService: GlobalService,\n    private _alertService: AlertService) {\n\n    this.filteredLanguages = this.languageField.valueChanges.pipe(\n      startWith(null),\n      map((genre: string | null) => genre ? this._filter(genre) : this.allLanguages.slice()));\n  }\n\n  areYouSure(): boolean {\n    return confirm('Are you sure to leave the page?');\n  }\n\n  ngOnInit(): void {\n    this._globalService.getMovieNames()\n      .subscribe(movieNames => this.allMovieNames = movieNames);\n\n    this.allLanguages = GlobalConstants.ALL_LANGUAGES;\n    this.allGenres = GlobalConstants.ALL_GENERS;\n\n    this.movieForm = this._fb.group({\n      name: new FormControl('', [\n        Validators.required,\n        ApplicationValidator.uniqueMovieName(this.allMovieNames)\n      ]),\n      release: new FormControl('', Validators.required),\n      image: new FormControl('', Validators.required),\n      bgImage: new FormControl('', Validators.required),\n      caption: new FormControl(''),\n      story: new FormControl('', Validators.required),\n      duration: new FormControl('', Validators.required),\n      // genres: new FormArray([new FormControl('', Validators.required)]),\n      languages: this.languageField,\n      genres: new FormArray([new FormControl('', [Validators.required,\n      ApplicationValidator.validMovieGenre(this.allGenres)]\n      )]),\n      casts: new FormArray([new FormGroup({\n        isCast: new FormControl('yes'),\n        name: new FormControl('', Validators.required),\n        role: new FormControl('', Validators.required),\n        image: new FormControl('', Validators.required)\n      })]),\n      crews: new FormArray([new FormGroup({\n        isCast: new FormControl('no'),\n        name: new FormControl('', Validators.required),\n        role: new FormControl('', Validators.required),\n        image: new FormControl('', Validators.required)\n      })])\n    });\n  }\n\n  addLanguage(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    let canAdd: boolean = true;\n    // Add our genre\n    if (!value) {\n      canAdd = false;\n      this._alertService.defaultAlert('Cannot add empty value');\n    }\n    if (this.languages.find(language => language.toLowerCase() == value.toLowerCase())) {\n      canAdd = false;\n      this._alertService.defaultAlert('Language already added');\n    }\n    if (!this.allLanguages.find(language => language.toLowerCase() == value.toLowerCase())) {\n      canAdd = false;\n      this._alertService.defaultAlert('Unknown language. Please select language from the list');\n    }\n\n    if (canAdd)\n      this.languages.push(value);\n\n\n    // Clear the input value\n    // event.chipInput!.clear();\n    event.input.value = '';\n\n    this.languageField.setValue(null);\n  }\n\n  removeLanguage(genre: string): void {\n    if (!(this.languages.length <= 1)) {\n      const index = this.languages.indexOf(genre);\n      if (index >= 0) {\n        this.languages.splice(index, 1);\n      }\n    }\n    else\n      this._alertService.defaultAlert('At least one Language must be provided');\n  }\n\n  selectedLanguage(event: MatAutocompleteSelectedEvent): void {\n    if (this.allLanguages.find(language => language.toLowerCase() == event.option.viewValue.toLowerCase())) {\n      if (!this.languages.find(language => language.toLowerCase() == event.option.viewValue.toLowerCase())) {\n        this.languages.push(event.option.viewValue);\n        this.languageInput.nativeElement.value = '';\n        this.languageField.setValue(null);\n      } else\n        this._alertService.defaultAlert('Language already added');\n    } else\n      this._alertService.defaultAlert('Unknown language. Please select language from the list');\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.allLanguages.filter(language => language.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  get validMovieDetails(): AbstractControl {\n    const movie = this.movieForm;\n    return (movie.get('name')! && movie.get('release')! && movie.get('image')! &&\n      movie.get('bgImage')! && movie.get('story')! && movie.get('duration')!);\n  };\n\n  get nameErrors(): string {\n    let name = this.movieForm.get('name');\n    if (name?.hasError('required'))\n      return 'Name cannot be null';\n    else if (name?.hasError('uniqueName'))\n      return 'Movie name already exists';\n    return '';\n  }\n\n  get releaseErrors(): string {\n    let release = this.movieForm.get('release');\n    if (release?.hasError('required'))\n      return 'Release Date cannot be null';\n    return '';\n  }\n\n  get storyErrors(): string {\n    let story = this.movieForm.get('story');\n    if (story?.hasError('required'))\n      return 'Story cannot be null';\n    return '';\n  }\n\n  get durationErrors(): string {\n    let duration = this.movieForm.get('duration');\n    if (duration?.hasError('required'))\n      return 'Duration cannot be null';\n    return '';\n  }\n\n  get imageErrors(): string {\n    let image = this.movieForm.get('image');\n    if (image?.hasError('required'))\n      return 'Image field cannot be null';\n    return '';\n  }\n\n  get bgImageErrors(): string {\n    let bgImage = this.movieForm.get('bgImage');\n    if (bgImage?.hasError('required'))\n      return 'Background Image cannot be null';\n    return '';\n  }\n\n  get genres(): FormArray {\n    return this.movieForm.get('genres') as FormArray;\n  }\n\n  get crews(): FormArray {\n    return this.movieForm.get('crews') as FormArray;\n  }\n\n  get casts(): FormArray {\n    return this.movieForm.get('casts') as FormArray;\n  }\n\n  addGenre(): void {\n    if (this.genres.status == \"INVALID\") {\n      this._alertService.defaultAlert('Please complete the above fields first');\n      return;\n    }\n    this.genres.push(new FormControl('', [Validators.required,\n    ApplicationValidator.validMovieGenre(this.allGenres),\n    ApplicationValidator.uniqueFacility(this.genres.value)]));\n  }\n\n  removeGenre(index: number): void {\n    if (this.genres.length <= 1) {\n      this._alertService.defaultAlert('At least one Genre must be provided');\n      return\n    }\n    if (confirm('Do you want to remove the Genre?'))\n      this.genres.removeAt(index);\n  }\n\n  // addLanguage(): void {\n  //   if (this.languages.status == \"INVALID\") {\n  //     this._alertService.defaultAlert('Please complete the above fields first');\n  //     return;\n  //   }\n  //   this.languages.push(new FormControl('', [Validators.required, this._validator.validMovieLanguage]));\n  // }\n\n  // removeLanguage(index: number): void {\n  //   if (this.languages.length <= 1) {\n  //     this._alertService.defaultAlert('At least one language must be provided');\n  //     // this._bar.open('At least one language must be provided', 'OK', { duration: 3000 });\n  //     return\n  //   }\n  //   if (confirm('Do you want to remove the Language?'))\n  //     this.languages.removeAt(index);\n  // }\n\n  addCrew(): void {\n    if (this.crews.status == \"INVALID\") {\n      this._alertService.defaultAlert('Please complete the above fields first');\n      return;\n    }\n    this.crews.push(new FormGroup({\n      isCast: new FormControl('no'),\n      name: new FormControl('', Validators.required),\n      role: new FormControl('', Validators.required),\n      image: new FormControl('', Validators.required)\n    }));\n  }\n\n  removeCrew(index: number): void {\n    if (this.crews.length <= 1) {\n      this._alertService.defaultAlert('At least one Crew details must be provided');\n      return\n    }\n    if (confirm('Do you want to remove the Crew?'))\n      this.crews.removeAt(index);\n  }\n\n  addCast(): void {\n    if (this.casts.status == \"INVALID\") {\n      this._alertService.defaultAlert('Please complete the above fields first');\n      return;\n    }\n    this.casts.push(new FormGroup({\n      isCast: new FormControl('yes'),\n      name: new FormControl('', Validators.required),\n      role: new FormControl('', Validators.required),\n      image: new FormControl('', Validators.required)\n    }));\n  }\n\n  removeCast(index: number): void {\n    if (this.casts.length <= 1) {\n      this._alertService.defaultAlert('At least one Cast details must be provided');\n      return\n    }\n    if (confirm('Do you want to remove the Cast?'))\n      this.casts.removeAt(index);\n  }\n\n  onSubmit(): void {\n    let count = 0;\n    const movie: Movie = this.movieForm.value;\n    movie.addedOn = new Date();\n    movie.year = movie.release?.getFullYear().toString();\n    this.languages.forEach(language => {\n      movie.language = language;\n      this._service.addMovie(movie)\n        .subscribe(\n          res => this._globalService.addMovie(res),\n          err => this._alertService.postionAlert(err.error.message, 'danger-alert')\n        );\n      count++;\n    });\n    if (count >= this.languages.length)\n      this._router.navigate(['/admin/manage'], { queryParams: { 'movie-added': true } });\n  }\n}\n\n// function uniqueMovieName(movieNames: string[]): ValidatorFn {\n//   return (control: AbstractControl): { [key: string]: boolean } | null => {\n//     return movieNames ? movieNames\n//       .find(name => name.toLowerCase() == control.value.toLowerCase())\n//       ? { 'uniqueName': true }\n//       : null : null;\n//   };\n// }","<div class=\"form-container\">\n  <div class=\"mx-auto text-center bg-color\">\n    <div class=\"container py-5\">\n      <h1 class=\"fs-2 text-dark py-5 text-uppercase\">Add New Movie</h1>\n    </div>\n  </div>\n\n  <div class=\"form-holder border border-4 border-warning rounded mx-5\">\n    <form [formGroup]=\"movieForm\" (ngSubmit)=\"onSubmit()\">\n      <mat-horizontal-stepper [linear]=\"true\" #stepper>\n        <mat-step\n          [stepControl]=\"validMovieDetails\"\n          errorMessage=\"Movie details required\"\n        >\n          <ng-template matStepLabel>Movie Details</ng-template>\n          <div class=\"row g-0 my-3 justify-content-around\">\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Name</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Movie Name\"\n                  formControlName=\"name\"\n                />\n                <mat-error *ngIf=\"nameErrors\">{{ nameErrors }}</mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Release Date</mat-label>\n                <input\n                  matInput\n                  [min]=\"todayDate\"\n                  [matDatepicker]=\"picker\"\n                  placeholder=\"Release Date\"\n                  formControlName=\"release\"\n                />\n                <mat-datepicker #picker></mat-datepicker>\n                <mat-datepicker-toggle\n                  matSuffix\n                  [for]=\"picker\"\n                ></mat-datepicker-toggle>\n                <mat-error *ngIf=\"releaseErrors\">{{ releaseErrors }}</mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Image URL</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Image Link\"\n                  formControlName=\"image\"\n                />\n                <mat-error *ngIf=\"imageErrors\">{{ imageErrors }}</mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Background Image URL</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Background Image Link\"\n                  formControlName=\"bgImage\"\n                />\n                <mat-error *ngIf=\"bgImageErrors\">{{ bgImageErrors }}</mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Duration</mat-label>\n                <input\n                  matInput\n                  placeholder=\"2h 25m\"\n                  formControlName=\"duration\"\n                />\n                <mat-error *ngIf=\"durationErrors\">{{\n                  durationErrors\n                }}</mat-error>\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-12 col-lg-5 mx-lg-2\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Movie Caption</mat-label>\n                <input matInput formControlName=\"caption\" />\n              </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-12 col-lg-11\">\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Story</mat-label>\n                <textarea\n                  matInput\n                  formControlName=\"story\"\n                  placeholder=\"Narrate the story here\"\n                ></textarea>\n                <mat-error *ngIf=\"storyErrors\">{{ storyErrors }}</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          <div>\n            <button\n              mat-button\n              matStepperNext\n              type=\"button\"\n              [disabled]=\"!validMovieDetails.valid\"\n            >\n              Next\n            </button>\n          </div>\n        </mat-step>\n\n        <mat-step [stepControl]=\"movieForm.get('languages')!\">\n          <ng-template matStepLabel>Add Language</ng-template>\n\n          <div class=\"col-12 my-4 px-sm-1 px xl-4\">\n            <mat-form-field\n              class=\"example-chip-list\"\n              class=\"d-block w-100 text-dark\"\n            >\n              <mat-label>Add Language</mat-label>\n              <mat-chip-list #languageList aria-label=\"language selection\">\n                <mat-chip\n                  *ngFor=\"let language of languages\"\n                  [selectable]=\"true\"\n                  [removable]=\"true\"\n                  (removed)=\"removeLanguage(language)\"\n                >\n                  {{ language }}\n                  <mat-icon matChipRemove *ngIf=\"true\">cancel</mat-icon>\n                </mat-chip>\n                <input\n                  placeholder=\"New Language...\"\n                  #languageInput\n                  formControlName=\"languages\"\n                  [matAutocomplete]=\"auto\"\n                  [matChipInputFor]=\"languageList\"\n                  [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                  (matChipInputTokenEnd)=\"addLanguage($event)\"\n                />\n                <mat-error\n                  *ngIf=\"movieForm.get('languages')?.hasError('required')\"\n                  >Language cannot be empty</mat-error\n                >\n              </mat-chip-list>\n              <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"selectedLanguage($event)\"\n              >\n                <mat-option\n                  *ngFor=\"let language of filteredLanguages | async\"\n                  [value]=\"language\"\n                >\n                  {{ language }}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-form-field>\n          </div>\n\n          <!-- <div class=\"row g-0 justify-content-around\">\n            <div\n              class=\"col-sm-12 col-lg-5 form-field\"\n              formArrayName=\"genres\"\n              *ngFor=\"let genre of genres.controls; index as i\"\n            >\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Genre</mat-label>\n                <input matInput placeholder=\"Romantic\" [formControlName]=\"i\" />\n                <mat-error *ngIf=\"genre.errors?.required && genres.touched\"\n                  >Genre Cannot be empty</mat-error\n                >\n              </mat-form-field>\n              <mat-icon\n                class=\"fs-2 w-auto text-danger delete-icon\"\n                (click)=\"removeGenre(i)\"\n                aria-hidden=\"false\"\n                matTooltip=\"Remove the Genre\"\n                aria-label=\"delete icon\"\n                >delete</mat-icon\n              >\n            </div>\n          </div>\n          <div class=\"text-center text-primary mt-4\">\n            <mat-icon\n              class=\"pe-cursor fs-2\"\n              aria-hidden=\"false\"\n              matTooltip=\"Add one more Genre\"\n              aria-label=\"add_circle icon\"\n              (click)=\"addGenre()\"\n              >add_circle</mat-icon\n            >\n          </div> -->\n          <div>\n            <button mat-button matStepperPrevious type=\"button\">Back</button>\n            <button mat-button matStepperNext type=\"button\">Next</button>\n          </div>\n        </mat-step>\n\n        <mat-step [stepControl]=\"movieForm.get('genres')!\">\n          <ng-template matStepLabel>Add Language</ng-template>\n          <div class=\"row g-0 justify-content-around\">\n            <div\n              class=\"col-sm-12 col-lg-5 form-field\"\n              formArrayName=\"genres\"\n              *ngFor=\"let genres of genres.controls; index as i\"\n            >\n              <mat-form-field\n                class=\"d-block w-100 text-dark\"\n                appearance=\"outline\"\n              >\n                <mat-label>Genre</mat-label>\n                <input\n                  matInput\n                  placeholder=\"Comedy\"\n                  [formControlName]=\"i\"\n                  [attr.list]=\"'genres-' + i\"\n                />\n                <datalist [id]=\"'genres-' + i\">\n                  <option [value]=\"genre\" *ngFor=\"let genre of allGenres\">\n                    {{ genre }}\n                  </option>\n                </datalist>\n\n                <mat-error *ngIf=\"genres.touched\">\n                  <span class=\"mx-1\" *ngIf=\"genres.errors?.required\"\n                    >Genre cannot be empty</span\n                  >\n                  <span class=\"mx-1\" *ngIf=\"genres.errors?.validGenre\"\n                    >Invalid movie genre</span\n                  >\n                  <span class=\"mx-1\" *ngIf=\"genres.errors?.uniqueName\"\n                    >Genre already added</span\n                  >\n                </mat-error>\n              </mat-form-field>\n\n              <mat-icon\n                class=\"fs-2 w-auto text-danger delete-icon\"\n                (click)=\"removeGenre(i)\"\n                aria-hidden=\"false\"\n                matTooltip=\"Remove the Genre\"\n                aria-label=\"delete icon\"\n                >delete</mat-icon\n              >\n            </div>\n          </div>\n          <div class=\"text-center text-primary mt-4\">\n            <mat-icon\n              class=\"pe-cursor fs-2\"\n              aria-hidden=\"false\"\n              matTooltip=\"Add one more Genre\"\n              aria-label=\"add_circle icon\"\n              (click)=\"addGenre()\"\n              >add_circle</mat-icon\n            >\n          </div>\n          <div>\n            <button mat-button matStepperPrevious type=\"button\">Back</button>\n            <button mat-button matStepperNext type=\"button\">Next</button>\n          </div>\n        </mat-step>\n\n        <mat-step [stepControl]=\"movieForm.get('casts')!\">\n          <ng-template matStepLabel>Add Cast Details</ng-template>\n          <div\n            class=\"w-100\"\n            formArrayName=\"casts\"\n            *ngFor=\"let cast of casts.controls; index as i\"\n          >\n            <div\n              class=\"\n                row\n                g-0\n                justify-content-around\n                align-content-center\n                form-field\n              \"\n              [formGroupName]=\"i\"\n            >\n              <div class=\"col-lg-3 col-sm-6\">\n                <mat-form-field\n                  class=\"d-block w-100 text-dark\"\n                  appearance=\"outline\"\n                >\n                  <mat-label>Actor Name</mat-label>\n                  <input\n                    matInput\n                    placeholder=\"Actor Name\"\n                    formControlName=\"name\"\n                  />\n                  <mat-error\n                    *ngIf=\"cast.get('name')?.errors?.required && cast.touched\"\n                  >\n                    Name cannot be empty\n                  </mat-error>\n                </mat-form-field>\n              </div>\n\n              <div class=\"col-lg-3 col-sm-6\">\n                <mat-form-field\n                  class=\"d-block w-100 text-dark\"\n                  appearance=\"outline\"\n                >\n                  <mat-label>Actor Role</mat-label>\n                  <input matInput placeholder=\"Hero\" formControlName=\"role\" />\n                  <mat-error\n                    *ngIf=\"cast.get('role')?.errors?.required && cast.touched\"\n                  >\n                    Actor role cannot be empty\n                  </mat-error>\n                </mat-form-field>\n              </div>\n\n              <div class=\"col-lg-3 col-sm-6\">\n                <mat-form-field\n                  class=\"d-block w-100 text-dark\"\n                  appearance=\"outline\"\n                >\n                  <mat-label>Actor Image</mat-label>\n                  <input\n                    matInput\n                    placeholder=\"Actor image\"\n                    formControlName=\"image\"\n                  />\n                  <mat-error\n                    *ngIf=\"cast.get('image')?.errors?.required && cast.touched\"\n                  >\n                    Actor image cannot be empty\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <mat-icon\n                class=\"fs-2 w-auto text-danger delete-icon\"\n                (click)=\"removeCast(i)\"\n                aria-hidden=\"false\"\n                matTooltip=\"Remove the Cast\"\n                aria-label=\"delete icon\"\n                >delete</mat-icon\n              >\n            </div>\n          </div>\n          <div class=\"text-center text-primary mt-4\">\n            <mat-icon\n              class=\"pe-cursor fs-2\"\n              aria-hidden=\"false\"\n              matTooltip=\"Add one more Cast\"\n              aria-label=\"add_circle icon\"\n              (click)=\"addCast()\"\n              >add_circle</mat-icon\n            >\n          </div>\n          <div>\n            <button mat-button matStepperPrevious type=\"button\">Back</button>\n            <button mat-button matStepperNext type=\"button\">Next</button>\n          </div>\n        </mat-step>\n\n        <mat-step [stepControl]=\"movieForm.get('crews')!\">\n          <ng-template matStepLabel>Add Crew Details</ng-template>\n          <div\n            class=\"w-100\"\n            formArrayName=\"crews\"\n            *ngFor=\"let crew of crews.controls; index as i\"\n          >\n            <div\n              class=\"\n                row\n                g-0\n                justify-content-around\n                align-content-center\n                form-field\n              \"\n              [formGroupName]=\"i\"\n            >\n              <div class=\"col-lg-3 col-sm-6\">\n                <mat-form-field\n                  class=\"d-block w-100 text-dark\"\n                  appearance=\"outline\"\n                >\n                  <mat-label>Crew Name</mat-label>\n                  <input\n                    matInput\n                    placeholder=\"Crew Name\"\n                    formControlName=\"name\"\n                  />\n                  <mat-error\n                    *ngIf=\"crew.get('name')?.errors?.required && crew.touched\"\n                  >\n                    Name cannot be empty\n                  </mat-error>\n                </mat-form-field>\n              </div>\n\n              <div class=\"col-lg-3 col-sm-6\">\n                <mat-form-field\n                  class=\"d-block w-100 text-dark\"\n                  appearance=\"outline\"\n                >\n                  <mat-label>Crew Role</mat-label>\n                  <input\n                    matInput\n                    placeholder=\"Director\"\n                    formControlName=\"role\"\n                  />\n                  <mat-error\n                    *ngIf=\"crew.get('role')?.errors?.required && crew.touched\"\n                  >\n                    Crew role cannot be empty\n                  </mat-error>\n                </mat-form-field>\n              </div>\n\n              <div class=\"col-lg-3 col-sm-6\">\n                <mat-form-field\n                  class=\"d-block w-100 text-dark\"\n                  appearance=\"outline\"\n                >\n                  <mat-label>Crew Image</mat-label>\n                  <input\n                    matInput\n                    placeholder=\"Crew image\"\n                    formControlName=\"image\"\n                  />\n                  <mat-error\n                    *ngIf=\"crew.get('image')?.errors?.required && crew.touched\"\n                  >\n                    Crew image cannot be empty\n                  </mat-error>\n                </mat-form-field>\n              </div>\n              <mat-icon\n                class=\"fs-2 w-auto text-danger delete-icon\"\n                (click)=\"removeCrew(i)\"\n                aria-hidden=\"false\"\n                matTooltip=\"Remove the Cast\"\n                aria-label=\"delete icon\"\n                >delete</mat-icon\n              >\n            </div>\n          </div>\n          <div class=\"text-center text-primary mt-4\">\n            <mat-icon\n              class=\"pe-cursor fs-2\"\n              aria-hidden=\"false\"\n              matTooltip=\"Add one more Cast\"\n              aria-label=\"add_circle icon\"\n              (click)=\"addCrew()\"\n              >add_circle</mat-icon\n            >\n          </div>\n          <div>\n            <button mat-button matStepperPrevious type=\"button\">Back</button>\n            <button mat-button matStepperNext type=\"button\">Next</button>\n          </div>\n        </mat-step>\n\n        <mat-step>\n          <ng-template matStepLabel>Review</ng-template>\n          <pre>\n              {{ movieForm.value | json }}\n            </pre\n          >\n          <div>\n            <button mat-button matStepperPrevious type=\"button\">Back</button>\n            <button\n              mat-button\n              class=\"text-success\"\n              [disabled]=\"!movieForm.valid\"\n            >\n              Submit\n            </button>\n          </div>\n        </mat-step>\n      </mat-horizontal-stepper>\n    </form>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatBottomSheet, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Util } from 'src/app/classes/util/util';\nimport { Auditorium, Movie, Show, TempSelectMembers } from 'src/app/interfaces/application';\nimport { ApplicationService } from 'src/app/services/application/application.service';\nimport { GlobalService } from 'src/app/services/global/global.service';\n\nclass SelectMembers implements TempSelectMembers {\n  auditoriumId: number = 0;\n  auditoriumName: string = '';\n  showId: number = 0;\n  showName: string = '';\n  showTime: string = '';\n  movieShowId: number = 0;\n  bookedSeats: number = 0;\n  bookedSeatNumbers: string[] = [];\n  date: Date = new Date();\n  movieName: string = '';\n  movieId = 0;\n  movieLanguage: string = '';\n  seats: number = 0;\n\n}\n\n@Component({\n  selector: 'app-select-members',\n  templateUrl: './select-members.component.html',\n  styleUrls: ['./select-members.component.css']\n})\nexport class SelectMembersComponent implements OnInit {\n\n  ticketsForm!: FormGroup;\n\n  allAuditoriums$!: Observable<Auditorium[]>;\n\n  allShows$!: Observable<Show[]>;\n\n  startDate$!: Observable<Date>;\n\n  endDate$!: Observable<Date>;\n\n  avaliableSeats$ !: Observable<number[]>;\n\n  // selectedMovieName!: string;\n\n  selectedMovieId!: number;\n\n  selectMembers!: TempSelectMembers;\n\n  // selectedMovieLanguage!: string;\n\n  // movieShowId!: number;\n\n  // selectedShowTiming!: string;\n\n  // selectedAuditoriumId!: number;\n\n  // selectedShowId!: number;\n\n  selectedSeats = 0;\n\n  // bookedSeats!: number;\n\n  // bookedSeatNumber!: string[];\n\n  constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public _data: {\n    movieId: number,\n    movie: Observable<Movie>\n  },\n    private _sheet: MatBottomSheet,\n    private _fb: FormBuilder,\n    private _service: GlobalService,\n    private _appService: ApplicationService) {\n    // this._sheet._openedBottomSheetRef?.disableClose = true;\n  }\n\n  ngOnInit(): void {\n    console.log(this._data.movie);\n    console.log(this._data.movieId);\n\n    this.selectMembers = new SelectMembers();\n\n    this.allAuditoriums$ = this._appService.getAuditoriumsByMovieId(this._data.movieId);\n\n    this._data.movie.subscribe(movie => {\n      this.selectMembers.movieName = movie?.name!;\n      this.selectMembers.movieLanguage = movie.language!;\n      // this.selectedMovieName = movie.name!;\n      // this.selectedMovieLanguage = movie.language!;\n      this.selectedMovieId = movie.id!;\n    });\n\n    this.ticketsForm = this._fb.group({\n      auditoriumName: new FormControl('', Validators.required),\n      showName: new FormControl('', Validators.required),\n      date: new FormControl('', Validators.required),\n      seats: new FormControl('', Validators.required)\n    });\n  }\n\n  resolveArray(seats: number): number[] {\n    if (seats > 5)\n      return [...Array(6).keys()].filter(num => num > 0);\n    else if (seats > 0 && seats < 5)\n      return [...Array(seats + 1).keys()].filter(num => num > 0);\n    else\n      return new Array<number>();\n  }\n\n  onAuditoriumSelect(hallId: number, hallName: string): void {\n\n    if (hallName != this.ticketsForm.get('auditoriumName')?.value) {\n      this.selectMembers.auditoriumId = hallId;\n      this.selectMembers.auditoriumName = hallName;\n      this.allShows$ = this._appService.getShowsByMovieId(hallId, this.selectedMovieId);\n      this.ticketsForm.get('showName')?.reset;\n    }\n  }\n\n  onShowSelect(showId: number, showName: string): void {\n    if (showName != this.ticketsForm.get('showName')?.value) {\n      // this.selectedShowId = showId;\n      this.selectMembers.showId = showId;\n      this.selectMembers.showName = showName;\n      this.allShows$.subscribe(shows => {\n        const show = shows.find(show => show.name == showName);\n        const movieShow = show?.movieShows?.find(m_show => m_show.movieId == this.selectedMovieId);\n        this.startDate$ = of((new Date(movieShow?.start!) < new Date()) ? new Date() : movieShow?.start!);\n        this.endDate$ = of(movieShow?.end!);\n        this.selectMembers.showTime = show?.startTime!;\n        this.selectMembers.movieShowId = movieShow?.id!;\n        this.selectMembers.movieId = this._data.movieId;\n      })\n      this.ticketsForm.get('date')?.reset;\n    }\n  }\n\n  onDateSelect(event: any): void {\n    const value = event?.target?.value;\n    console.log(value);\n    this._appService.getAllBookedSeats(this.selectMembers.movieShowId, value).subscribe(seats => {\n      const count = this.resolveArray(100 - seats.count);\n      this.avaliableSeats$ = of(count);\n      this.selectedSeats = (count.length > 0 ? 1 : 0);\n      this.selectMembers.bookedSeatNumbers = seats.seats;\n      this.selectMembers.bookedSeats = seats.count;\n    });\n  }\n\n  get auditoriumErrors(): string {\n    let auditorium = this.ticketsForm.get('auditoriumId');\n    if (auditorium?.hasError('require'))\n      return 'Please select the Cinema Hall';\n    return '';\n  }\n\n  get showErrors(): string {\n    let timing = this.ticketsForm.get('showName');\n    if (timing?.hasError('required'))\n      return 'Please select the timing';\n    return '';\n  }\n\n  get dateErrors(): string {\n    if (this.ticketsForm.get('date')?.hasError('required'))\n      return 'Please select the date';\n    return '';\n  }\n  onSeatsChange(seat: number): void {\n    this.selectedSeats = seat;\n  }\n\n  get icon(): string {\n    let seats = this.selectedSeats;\n    if (seats == 1)\n      return 'directions_bike';\n    else if (seats == 2)\n      return 'two_wheeler';\n    else if (seats == 3)\n      return 'electric_rickshaw';\n    else if (seats == 4)\n      return 'time_to_leave';\n    else if (seats == 5)\n      return 'airport_shuttle';\n    return 'error';\n  }\n\n  formatTime(time: string): string {\n    return Util.formatTimeToAmOrPm(time);\n  }\n\n  proceed(): void {\n    // const data: TempSelectMembers = this.ticketsForm.value;\n    this.selectMembers.date = this.ticketsForm.get('date')?.value;\n    this.selectMembers.seats = this.ticketsForm.get('seats')?.value;\n\n    this._sheet.dismiss({ tempSelectMembers: this.selectMembers });\n  }\n}\n\n","<mat-card>\n  <form [formGroup]=\"ticketsForm\" (ngSubmit)=\"proceed()\">\n    <mat-horizontal-stepper [linear]=\"true\" labelPosition=\"bottom\" #stepper>\n      <mat-step [stepControl]=\"ticketsForm.get('auditoriumName')!\">\n        <ng-template matStepLabel>Select the Cinema Hall</ng-template>\n        <mat-form-field class=\"d-block w-100 mt-2\">\n          <mat-label>Cinema Hall Name</mat-label>\n          <mat-select class=\"text-dark\" formControlName=\"auditoriumName\">\n            <mat-option\n              *ngFor=\"let hall of allAuditoriums$ | async\"\n              [value]=\"hall.name\"\n              (onSelectionChange)=\"onAuditoriumSelect(hall.id!, hall.name!)\"\n            >\n              {{ hall.name }}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"auditoriumErrors\">{{ auditoriumErrors }}</mat-error>\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperNext type=\"button\">Next</button>\n        </div>\n      </mat-step>\n\n      <mat-step\n        [stepControl]=\"ticketsForm.get('showName')!\"\n        label=\"Select the Show Timing\"\n      >\n        <mat-form-field class=\"d-block w-100 mt-2\">\n          <mat-label class=\"text-dark\">Show Timing</mat-label>\n          <mat-select class=\"text-dark\" formControlName=\"showName\">\n            <mat-option\n              *ngFor=\"let show of allShows$ | async\"\n              [value]=\"show.name\"\n              (onSelectionChange)=\"onShowSelect(show.id!, show.name!)\"\n            >\n              {{ show.name + \" | Time: \" + formatTime(show.startTime) }}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"showErrors\">{{ showErrors }}</mat-error>\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperPrevious type=\"button\">Back</button>\n          <button mat-button matStepperNext type=\"button\">Next</button>\n        </div>\n      </mat-step>\n\n      <mat-step\n        [stepControl]=\"ticketsForm.get('date')!\"\n        label=\"Select the Date\"\n      >\n        <mat-form-field class=\"d-block w-100 mt-2\">\n          <mat-label class=\"text-dark\">Choose a date</mat-label>\n          <input\n            class=\"text-dark\"\n            formControlName=\"date\"\n            (dateChange)=\"onDateSelect($event)\"\n            matInput\n            [matDatepicker]=\"picker\"\n            [min]=\"startDate$ | async\"\n            [max]=\"endDate$ | async\"\n          />\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"picker\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n          <mat-error *ngIf=\"dateErrors\">{{ dateErrors }}</mat-error>\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperPrevious type=\"button\">Back</button>\n          <button mat-button matStepperNext type=\"button\">Next</button>\n        </div>\n      </mat-step>\n\n      <mat-step\n        [stepControl]=\"ticketsForm.get('seats')!\"\n        label=\"Select No.of seats\"\n      >\n        <div\n          class=\"col-12 my-4 text-center\"\n          [ngClass]=\"selectedSeats! > 0 ? 'text-primary' : 'text-danger'\"\n        >\n          <mat-icon\n            class=\"fs-1\"\n            aria-hidden=\"false\"\n            aria-label=\"Example home icon\"\n          >\n            {{ icon }}\n          </mat-icon>\n        </div>\n        <div *ngIf=\"selectedSeats! < 1\" class=\"text-center text-danger\">\n          No Seats avaliable, please select different show timing\n        </div>\n        <div\n          *ngIf=\"selectedSeats! > 0\"\n          class=\"row g-0 justify-content-around mb-4\"\n        >\n          <div\n            class=\"col-auto mx-2\"\n            *ngFor=\"let seat of avaliableSeats$ | async\"\n          >\n            <input\n              type=\"radio\"\n              class=\"btn-check\"\n              formControlName=\"seats\"\n              [checked]=\"seat == selectedSeats\"\n              (change)=\"onSeatsChange(seat)\"\n              [id]=\"seat\"\n              [value]=\"seat\"\n            />\n            <label\n              [for]=\"seat\"\n              class=\"px-3 py-2 rounded-circle border border-4 pe-cursor fs-5\"\n              [ngClass]=\"\n                seat == selectedSeats!\n                  ? 'text-success, border-success'\n                  : 'text-warning, border-secondary'\n              \"\n            >\n              {{ seat }}\n            </label>\n          </div>\n        </div>\n        <div>\n          <button mat-button matStepperPrevious type=\"button\">Back</button>\n          <button\n            mat-button\n            matStepperNext\n            [disabled]=\"selectedSeats! < 1\"\n            type=\"button\"\n          >\n            next\n          </button>\n        </div>\n      </mat-step>\n      <mat-step>\n        <ng-template matStepLabel>Review</ng-template>\n        <table class=\"table table-striped\">\n          <tr>\n            <th scope=\"col\">Auditorium</th>\n            <td>{{ ticketsForm.get(\"auditoriumName\")?.value! }}</td>\n          </tr>\n          <tr>\n            <th scope=\"col\">Show</th>\n            <td>\n              {{\n                ticketsForm.get(\"showName\")?.value! +\n                  \" | Time: \" +\n                  formatTime(selectMembers?.showTime!)\n              }}\n            </td>\n          </tr>\n          <tr>\n            <th scope=\"col\">Date</th>\n            <td>{{ ticketsForm.get(\"date\")?.value! | date: \"fullDate\" }}</td>\n          </tr>\n          <tr>\n            <th scope=\"col\">Seats</th>\n            <td>{{ ticketsForm.get(\"seats\")?.value! }}</td>\n          </tr>\n        </table>\n        <div>\n          <button mat-button matStepperPrevious type=\"button\">Back</button>\n          <button mat-button color=\"primary\" [disabled]=\"!ticketsForm.valid\">\n            Proceed\n          </button>\n        </div>\n      </mat-step>\n    </mat-horizontal-stepper>\n  </form>\n</mat-card>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { Util } from 'src/app/classes/util/util';\nimport { GlobalConstants } from 'src/app/commons/global-constants';\nimport { Movie } from 'src/app/interfaces/application';\nimport { ApplicationService } from 'src/app/services/application/application.service';\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class MoviesComponent implements OnInit {\n\n\n  showText = 'Now Playing';\n\n  allLanguages: string[] = [];\n\n  allGenres: string[] = [];\n\n  search?: string;\n\n  genreFilter?: string;\n\n  languageFilter?: string;\n\n  types = [\n    'Now Playing',\n    'Up Coming',\n  ]\n\n  movies!: Movie[];\n  moviesList = new BehaviorSubject<Movie[]>(this.movies);\n  moviesList$ = this.moviesList.asObservable();\n\n\n  constructor(private _appService: ApplicationService,\n    private _activeRoute: ActivatedRoute,\n    private _router: Router) {\n  }\n\n  ngOnInit(): void {\n\n    this._activeRoute.queryParams\n      .subscribe(param => {\n        const show = param['show'];\n        if (show && show == 'up-coming') {\n          this.showText = 'Up Coming';\n          this._appService.getAllUpComingMovies().subscribe(movies => this.moviesList.next(movies ? movies : this.movies));\n        }\n        else\n          this._appService.getAllNowPlayingMovies().subscribe(movies => this.moviesList.next(movies));\n      });\n\n    this.allLanguages = GlobalConstants.ALL_LANGUAGES;\n    this.allGenres = GlobalConstants.ALL_GENERS;\n  }\n\n  onTypeChange(type: string): void {\n    if (!(type == this.showText)) {\n      const show = type == \"Now Playing\" ? 'now-playing' : 'up-coming'\n      this._router.navigate(['../movies'], { queryParams: { 'show': show } });\n    }\n  }\n\n  handleLanguageChange(language: string): void {\n    if (language && language != this.languageFilter)\n      this.languageFilter = language;\n  }\n\n  handleGenreChange(genre: string): void {\n    if (genre && genre != this.genreFilter)\n      this.genreFilter = genre;\n  }\n\n  clearLanguageFilter(): void {\n    this.languageFilter = '';\n  }\n\n  clearGenreFilter(): void {\n    this.genreFilter = '';\n  }\n\n  formatRelease(release: any): string {\n    if (new Date(release) > new Date())\n      return 'Releasing on ' + Util.formatDate(release);\n    return 'Now Playing';\n  }\n\n}\n\n","<div class=\"px-lg-5 row g-0 my-5 justify-content-around position-relative\">\n  <div class=\"col-3\">\n    <div class=\"sorting text-center mb-3 align-self-center\">\n      <h2 class=\"fs-2 text-center text-dark text-uppercase\">Show</h2>\n      <br />\n      <mat-form-field appearance=\"outline\" class=\"d-block w-100\">\n        <mat-label>Show</mat-label>\n        <mat-select name=\"showText\" [(ngModel)]=\"showText\">\n          <mat-option\n            *ngFor=\"let type of types\"\n            [value]=\"type\"\n            (onSelectionChange)=\"onTypeChange(type)\"\n            >{{ type }}</mat-option\n          >\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <br />\n    <div class=\"filter\">\n      <h2 class=\"fs-2 text-center text-dark text-uppercase\">Filters</h2>\n      <br />\n      <mat-accordion\n        class=\"example-headers-align\"\n        multi\n        togglePosition=\"before\"\n      >\n        <mat-expansion-panel class=\"rounded my-1\">\n          <mat-expansion-panel-header>\n            <mat-panel-title\n              [ngClass]=\"{\n                'text-danger': languageFilter != null && languageFilter != ''\n              }\"\n            >\n              Language\n            </mat-panel-title>\n            <mat-panel-description\n              (click)=\"clearLanguageFilter()\"\n              class=\"clear-filter\"\n              [ngClass]=\"{\n                'text-danger': languageFilter != null && languageFilter != ''\n              }\"\n            >\n              Clear\n            </mat-panel-description>\n          </mat-expansion-panel-header>\n          <div class=\"row g-0 justify-content-around\">\n            <div\n              class=\"my-2 col-4 text-start\"\n              *ngFor=\"let language of allLanguages\"\n            >\n              <input\n                type=\"radio\"\n                autocomplete=\"off\"\n                [checked]=\"language == languageFilter\"\n                class=\"btn-check\"\n                [id]=\"language\"\n                name=\"selectedLanguage\"\n                (change)=\"handleLanguageChange(language)\"\n              />\n              <label\n                class=\"btn btn-sm\"\n                [for]=\"language\"\n                [ngClass]=\"{\n                  'btn-warning': language == languageFilter,\n                  'btn-info': language != languageFilter\n                }\"\n                >{{ language }}</label\n              >\n            </div>\n          </div>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel class=\"rounded my-1\">\n          <mat-expansion-panel-header>\n            <mat-panel-title\n              [ngClass]=\"{\n                'text-danger': genreFilter != null && genreFilter != ''\n              }\"\n            >\n              Genre\n            </mat-panel-title>\n            <mat-panel-description\n              class=\"clear-filter\"\n              (click)=\"clearGenreFilter()\"\n              [ngClass]=\"{\n                'text-danger': genreFilter != null && genreFilter != ''\n              }\"\n              >Clear</mat-panel-description\n            >\n          </mat-expansion-panel-header>\n          <div class=\"row g-0 justify-content-around\">\n            <div class=\"my-2 col-4 text-start\" *ngFor=\"let genre of allGenres\">\n              <input\n                type=\"radio\"\n                autocomplete=\"off\"\n                [checked]=\"genre == genreFilter\"\n                class=\"btn-check\"\n                [id]=\"genre\"\n                name=\"selectedGenre\"\n                (change)=\"handleGenreChange(genre)\"\n              />\n              <label\n                class=\"btn btn-sm\"\n                [for]=\"genre\"\n                [ngClass]=\"{\n                  'btn-warning': genre == genreFilter,\n                  'btn-info': genre != genreFilter\n                }\"\n                >{{ genre }}</label\n              >\n            </div>\n          </div>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n  </div>\n\n  <div class=\"col-8 movies\">\n    <div class=\"now-showing\">\n      <mat-toolbar\n        [color]=\"showText == 'Now Playing' ? 'primary' : 'accent'\"\n        class=\"rounded\"\n      >\n        <div class=\"row g-0 justify-content-around w-100 h-auto py-3\">\n          <div class=\"col-sm-12 col-lg-3 text-center\">{{ showText }}</div>\n          <div class=\"col-sm-12 col-lg-9\">\n            <input\n              class=\"form-control me-2 w-100\"\n              type=\"search\"\n              placeholder=\"Search for movie, genre or language\"\n              aria-label=\"Search\"\n              name=\"search\"\n              [(ngModel)]=\"search\"\n            />\n          </div>\n        </div>\n      </mat-toolbar>\n      <div>\n        <p style=\"margin-top:30px; margin-left: 20px; \"><b>Movie Lists</b></p>\n        <div style=\"margin: 20px;margin-top: 20px; padding: 12px; row-gap: 30px;width: 271px; border-radius: 10px; background-color: rgb(144, 225, 231); border-radius: 10px;\">\n        <img style=\"  width: 245px; height: 340px;\" src=\"https://m.media-amazon.com/images/M/MV5BZmQ5NTBmMDgtZmRlMi00MDNmLTg1MWUtMTU3ZGZiMDQ3NzE0XkEyXkFqcGdeQXVyMTEzNzg0Mjkx._V1_.jpg\">\n        <h6 style=\"margin-top: 10px; width: 230px;\">Arjun, a police officer, sets out on a mission to hunt down a group of violent bikers after they're involved in a theft and murder <a href=\"https://en.wikipedia.org/wiki/Valimai\">more...</a>.</h6> \n        <button class=\"btn btn-primary \">Book Now</button>   <button class=\"btn btn-primary \" style=\"display: inline; margin-left: 20px;\">Watch trailer</button> \n      </div>\n      <div style=\"display:flexbox;\">\n        <div style=\"margin: 20px; padding: 12px; row-gap: 30px;width: 271px; border-radius: 10px; background-color: rgb(144, 225, 231); border-radius: 10px;\">\n        <img style=\"  width: 245px; height: 340px;\" src=\"https://m.media-amazon.com/images/M/MV5BNGFkMDgzYWUtZTM4Yy00ZWI4LWI4ZWItNDVmZGM5ODJjZjIzXkEyXkFqcGdeQXVyODIwMDI1NjM@._V1_.jpg\">\n        <h6 style=\"margin-top: 10px; width: 230px;\">Arjun, a police officer, sets out on a mission to hunt down a group of violent bikers after they're involved in a theft and murder <a href=\"https://en.wikipedia.org/wiki/Valimai\">more...</a>.</h6> \n        <button class=\"btn btn-primary \">Book Now</button>   <button class=\"btn btn-primary \" style=\"display: inline; margin-left: 20px;\">Watch trailer</button> \n      </div>\n      <h1 class=\"text-center text-warning my-4\" *ngIf=\"!(moviesList$ | async)\">\n        No movies found\n      </h1>\n      <div class=\"now-showing-movies my-4\" *ngIf=\"moviesList$ | async\">\n        <div class=\"card-group justify-content-around\">\n          <ng-container\n            *ngIf=\"\n              moviesList$\n                | async\n                | search: search:genreFilter:languageFilter as result\n            \"\n          >\n            <p\n              class=\"lead my-2 p-2 rounded alert-danger\"\n              *ngIf=\"result.length < 1 || !result\"\n            >\n              No result found with\n              <span class=\"text-danger\"\n                >{{ search }}{{ \" \" + languageFilter\n                }}{{ \" \" + genreFilter }}</span\n              >\n            </p>\n            <div\n              class=\"col-4 px-2 position-relative\"\n              *ngFor=\"let movie of result\"\n            >\n              <div\n                class=\"image-card position-relative rounded-5 overflow-hidden\"\n              >\n                <img\n                  [src]=\"movie.image\"\n                  class=\"card-img-top\"\n                  height=\"400\"\n                  width=\"280\"\n                  [alt]=\"movie.name\"\n                />\n                <!-- <svg\n                  class=\"bd-placeholder-img card-img-top\"\n                  width=\"100%\"\n                  height=\"350\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  role=\"img\"\n                  aria-label=\"Placeholder: Thumbnail\"\n                  preserveAspectRatio=\"xMidYMid slice\"\n                  focusable=\"false\"\n                >\n                  <title>Placeholder</title>\n                  <rect width=\"100%\" height=\"100%\" fill=\"#55595c\"></rect>\n                </svg> -->\n                <div\n                  class=\"\n                    image-release\n                    position-absolute\n                    bottom-0\n                    start-0\n                    bg-dark\n                    text-white\n                    w-100\n                    text-center\n                    py-2\n                  \"\n                >\n                  {{ formatRelease(movie.release) }}\n                </div>\n              </div>\n              <div class=\"card-body text-center\">\n                <h2 class=\"card-title fs-4 mb-0\">\n                  <a\n                    class=\"stretched-link\"\n                    routerLink=\"../movie/{{ movie.id }}\"\n                    >{{ movie.name | uppercase }}</a\n                  >\n                </h2>\n                <h3 class=\"card-text text-muted\">\n                  {{ movie.language | titlecase }}\n                </h3>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Movie } from '../interfaces/application';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(movies: Movie[] | null, search?: string, genre?: string, language?: string): Movie[] {\n    // return value.pipe(\n    //   map(movies => {\n    //     if (search)\n    //       movies = movies.filter(movie => movie.name.toLowerCase == search.toLowerCase || movie.genres?.includes(search) || movie.language?.toLowerCase == search.toLowerCase);\n    //     if (genre)\n    //       movies = movies.filter(movie => movie.genres?.includes(genre));\n    //     if (language)\n    //       movies = movies.filter(movie => movie.language?.toLowerCase == language.toLowerCase);\n    //     return movies;\n    //   })\n    // return [];\n    // );\n    if (movies?.length! > 0) {\n      if (search) {\n        const s = search.toLowerCase()\n        movies = movies?.filter(movie => movie.name.toLowerCase().indexOf(s) > -1 || movie.genres?.includes(search) || movie.language?.toLowerCase().indexOf(s)! > -1)!;\n      }\n      if (genre)\n        movies = movies?.filter(movie => movie.genres?.includes(genre))!;\n      if (language)\n        movies = movies?.filter(movie => movie.language?.toLowerCase() == language.toLowerCase())!;\n    }\n    return movies!;\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}